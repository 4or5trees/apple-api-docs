<Type Name="NSUrlDownloadDelegate" FullName="Foundation.NSUrlDownloadDelegate">
  <TypeSignature Language="C#" Value="public class NSUrlDownloadDelegate : Foundation.NSObject, Foundation.INSUrlDownloadDelegate, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSUrlDownloadDelegate extends Foundation.NSObject implements class Foundation.INSUrlDownloadDelegate, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Foundation.NSUrlDownloadDelegate" />
  <TypeSignature Language="F#" Value="type NSUrlDownloadDelegate = class&#xA;    inherit NSObject&#xA;    interface INSUrlDownloadDelegate&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSUrlDownloadDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="NSURLDownloadDelegate")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Register("NSUrlDownloadDelegate", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSUrlDownloadDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlDownloadDelegate.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSUrlDownloadDelegate (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlDownloadDelegate.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new Foundation.NSUrlDownloadDelegate : Foundation.NSObjectFlag -&gt; Foundation.NSUrlDownloadDelegate" Usage="new Foundation.NSUrlDownloadDelegate t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSUrlDownloadDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlDownloadDelegate.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new Foundation.NSUrlDownloadDelegate : nativeint -&gt; Foundation.NSUrlDownloadDelegate" Usage="new Foundation.NSUrlDownloadDelegate handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanceledAuthenticationChallenge">
      <MemberSignature Language="C#" Value="public virtual void CanceledAuthenticationChallenge (Foundation.NSUrlDownload download, Foundation.NSUrlAuthenticationChallenge challenge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanceledAuthenticationChallenge(class Foundation.NSUrlDownload download, class Foundation.NSUrlAuthenticationChallenge challenge) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlDownloadDelegate.CanceledAuthenticationChallenge(Foundation.NSUrlDownload,Foundation.NSUrlAuthenticationChallenge)" />
      <MemberSignature Language="F#" Value="abstract member CanceledAuthenticationChallenge : Foundation.NSUrlDownload * Foundation.NSUrlAuthenticationChallenge -&gt; unit&#xA;override this.CanceledAuthenticationChallenge : Foundation.NSUrlDownload * Foundation.NSUrlAuthenticationChallenge -&gt; unit" Usage="nSUrlDownloadDelegate.CanceledAuthenticationChallenge (download, challenge)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("download:didCancelAuthenticationChallenge:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="download" Type="Foundation.NSUrlDownload" />
        <Parameter Name="challenge" Type="Foundation.NSUrlAuthenticationChallenge" />
      </Parameters>
      <Docs>
        <param name="download">To be added.</param>
        <param name="challenge">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedDestination">
      <MemberSignature Language="C#" Value="public virtual void CreatedDestination (Foundation.NSUrlDownload download, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreatedDestination(class Foundation.NSUrlDownload download, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlDownloadDelegate.CreatedDestination(Foundation.NSUrlDownload,System.String)" />
      <MemberSignature Language="F#" Value="abstract member CreatedDestination : Foundation.NSUrlDownload * string -&gt; unit&#xA;override this.CreatedDestination : Foundation.NSUrlDownload * string -&gt; unit" Usage="nSUrlDownloadDelegate.CreatedDestination (download, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("download:didCreateDestination:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="download" Type="Foundation.NSUrlDownload" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="download">To be added.</param>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecideDestination">
      <MemberSignature Language="C#" Value="public virtual void DecideDestination (Foundation.NSUrlDownload download, string suggestedFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DecideDestination(class Foundation.NSUrlDownload download, string suggestedFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlDownloadDelegate.DecideDestination(Foundation.NSUrlDownload,System.String)" />
      <MemberSignature Language="F#" Value="abstract member DecideDestination : Foundation.NSUrlDownload * string -&gt; unit&#xA;override this.DecideDestination : Foundation.NSUrlDownload * string -&gt; unit" Usage="nSUrlDownloadDelegate.DecideDestination (download, suggestedFilename)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("download:decideDestinationWithSuggestedFilename:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="download" Type="Foundation.NSUrlDownload" />
        <Parameter Name="suggestedFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="download">To be added.</param>
        <param name="suggestedFilename">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeSourceData">
      <MemberSignature Language="C#" Value="public virtual bool DecodeSourceData (Foundation.NSUrlDownload download, string encodingType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DecodeSourceData(class Foundation.NSUrlDownload download, string encodingType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlDownloadDelegate.DecodeSourceData(Foundation.NSUrlDownload,System.String)" />
      <MemberSignature Language="F#" Value="abstract member DecodeSourceData : Foundation.NSUrlDownload * string -&gt; bool&#xA;override this.DecodeSourceData : Foundation.NSUrlDownload * string -&gt; bool" Usage="nSUrlDownloadDelegate.DecodeSourceData (download, encodingType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("download:shouldDecodeSourceDataOfMIMEType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="download" Type="Foundation.NSUrlDownload" />
        <Parameter Name="encodingType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="download">To be added.</param>
        <param name="encodingType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadBegan">
      <MemberSignature Language="C#" Value="public virtual void DownloadBegan (Foundation.NSUrlDownload download);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DownloadBegan(class Foundation.NSUrlDownload download) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlDownloadDelegate.DownloadBegan(Foundation.NSUrlDownload)" />
      <MemberSignature Language="F#" Value="abstract member DownloadBegan : Foundation.NSUrlDownload -&gt; unit&#xA;override this.DownloadBegan : Foundation.NSUrlDownload -&gt; unit" Usage="nSUrlDownloadDelegate.DownloadBegan download" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("downloadDidBegin:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="download" Type="Foundation.NSUrlDownload" />
      </Parameters>
      <Docs>
        <param name="download">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FailedWithError">
      <MemberSignature Language="C#" Value="public virtual void FailedWithError (Foundation.NSUrlDownload download, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FailedWithError(class Foundation.NSUrlDownload download, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlDownloadDelegate.FailedWithError(Foundation.NSUrlDownload,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member FailedWithError : Foundation.NSUrlDownload * Foundation.NSError -&gt; unit&#xA;override this.FailedWithError : Foundation.NSUrlDownload * Foundation.NSError -&gt; unit" Usage="nSUrlDownloadDelegate.FailedWithError (download, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("download:didFailWithError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="download" Type="Foundation.NSUrlDownload" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="download">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finished">
      <MemberSignature Language="C#" Value="public virtual void Finished (Foundation.NSUrlDownload download);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Finished(class Foundation.NSUrlDownload download) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlDownloadDelegate.Finished(Foundation.NSUrlDownload)" />
      <MemberSignature Language="F#" Value="abstract member Finished : Foundation.NSUrlDownload -&gt; unit&#xA;override this.Finished : Foundation.NSUrlDownload -&gt; unit" Usage="nSUrlDownloadDelegate.Finished download" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("downloadDidFinish:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="download" Type="Foundation.NSUrlDownload" />
      </Parameters>
      <Docs>
        <param name="download">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedAuthenticationChallenge">
      <MemberSignature Language="C#" Value="public virtual void ReceivedAuthenticationChallenge (Foundation.NSUrlDownload download, Foundation.NSUrlAuthenticationChallenge challenge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceivedAuthenticationChallenge(class Foundation.NSUrlDownload download, class Foundation.NSUrlAuthenticationChallenge challenge) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlDownloadDelegate.ReceivedAuthenticationChallenge(Foundation.NSUrlDownload,Foundation.NSUrlAuthenticationChallenge)" />
      <MemberSignature Language="F#" Value="abstract member ReceivedAuthenticationChallenge : Foundation.NSUrlDownload * Foundation.NSUrlAuthenticationChallenge -&gt; unit&#xA;override this.ReceivedAuthenticationChallenge : Foundation.NSUrlDownload * Foundation.NSUrlAuthenticationChallenge -&gt; unit" Usage="nSUrlDownloadDelegate.ReceivedAuthenticationChallenge (download, challenge)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("download:didReceiveAuthenticationChallenge:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="download" Type="Foundation.NSUrlDownload" />
        <Parameter Name="challenge" Type="Foundation.NSUrlAuthenticationChallenge" />
      </Parameters>
      <Docs>
        <param name="download">To be added.</param>
        <param name="challenge">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedData">
      <MemberSignature Language="C#" Value="public virtual void ReceivedData (Foundation.NSUrlDownload download, nuint length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceivedData(class Foundation.NSUrlDownload download, valuetype System.nuint length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlDownloadDelegate.ReceivedData(Foundation.NSUrlDownload,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member ReceivedData : Foundation.NSUrlDownload * nuint -&gt; unit&#xA;override this.ReceivedData : Foundation.NSUrlDownload * nuint -&gt; unit" Usage="nSUrlDownloadDelegate.ReceivedData (download, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("download:didReceiveDataOfLength:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="download" Type="Foundation.NSUrlDownload" />
        <Parameter Name="length" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="download">To be added.</param>
        <param name="length">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedResponse">
      <MemberSignature Language="C#" Value="public virtual void ReceivedResponse (Foundation.NSUrlDownload download, Foundation.NSUrlResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceivedResponse(class Foundation.NSUrlDownload download, class Foundation.NSUrlResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlDownloadDelegate.ReceivedResponse(Foundation.NSUrlDownload,Foundation.NSUrlResponse)" />
      <MemberSignature Language="F#" Value="abstract member ReceivedResponse : Foundation.NSUrlDownload * Foundation.NSUrlResponse -&gt; unit&#xA;override this.ReceivedResponse : Foundation.NSUrlDownload * Foundation.NSUrlResponse -&gt; unit" Usage="nSUrlDownloadDelegate.ReceivedResponse (download, response)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("download:didReceiveResponse:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="download" Type="Foundation.NSUrlDownload" />
        <Parameter Name="response" Type="Foundation.NSUrlResponse" />
      </Parameters>
      <Docs>
        <param name="download">To be added.</param>
        <param name="response">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public virtual void Resume (Foundation.NSUrlDownload download, Foundation.NSUrlResponse response, long startingByte);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resume(class Foundation.NSUrlDownload download, class Foundation.NSUrlResponse response, int64 startingByte) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlDownloadDelegate.Resume(Foundation.NSUrlDownload,Foundation.NSUrlResponse,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member Resume : Foundation.NSUrlDownload * Foundation.NSUrlResponse * int64 -&gt; unit&#xA;override this.Resume : Foundation.NSUrlDownload * Foundation.NSUrlResponse * int64 -&gt; unit" Usage="nSUrlDownloadDelegate.Resume (download, response, startingByte)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("download:willResumeWithResponse:fromByte:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="download" Type="Foundation.NSUrlDownload" />
        <Parameter Name="response" Type="Foundation.NSUrlResponse" />
        <Parameter Name="startingByte" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="download">To be added.</param>
        <param name="response">To be added.</param>
        <param name="startingByte">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillSendRequest">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSUrlRequest WillSendRequest (Foundation.NSUrlDownload download, Foundation.NSUrlRequest request, Foundation.NSUrlResponse redirectResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSUrlRequest WillSendRequest(class Foundation.NSUrlDownload download, class Foundation.NSUrlRequest request, class Foundation.NSUrlResponse redirectResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlDownloadDelegate.WillSendRequest(Foundation.NSUrlDownload,Foundation.NSUrlRequest,Foundation.NSUrlResponse)" />
      <MemberSignature Language="F#" Value="abstract member WillSendRequest : Foundation.NSUrlDownload * Foundation.NSUrlRequest * Foundation.NSUrlResponse -&gt; Foundation.NSUrlRequest&#xA;override this.WillSendRequest : Foundation.NSUrlDownload * Foundation.NSUrlRequest * Foundation.NSUrlResponse -&gt; Foundation.NSUrlRequest" Usage="nSUrlDownloadDelegate.WillSendRequest (download, request, redirectResponse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("download:willSendRequest:redirectResponse:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="download" Type="Foundation.NSUrlDownload" />
        <Parameter Name="request" Type="Foundation.NSUrlRequest" />
        <Parameter Name="redirectResponse" Type="Foundation.NSUrlResponse" />
      </Parameters>
      <Docs>
        <param name="download">To be added.</param>
        <param name="request">To be added.</param>
        <param name="redirectResponse">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
