<Type Name="NSUrlProtocolClient" FullName="Foundation.NSUrlProtocolClient">
  <TypeSignature Language="C#" Value="public sealed class NSUrlProtocolClient : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NSUrlProtocolClient extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:Foundation.NSUrlProtocolClient" />
  <TypeSignature Language="F#" Value="type NSUrlProtocolClient = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSUrlProtocolClient (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlProtocolClient.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new Foundation.NSUrlProtocolClient : nativeint -&gt; Foundation.NSUrlProtocolClient" Usage="new Foundation.NSUrlProtocolClient handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CachedResponseIsValid">
      <MemberSignature Language="C#" Value="public void CachedResponseIsValid (Foundation.NSUrlProtocol protocol, Foundation.NSCachedUrlResponse cachedResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CachedResponseIsValid(class Foundation.NSUrlProtocol protocol, class Foundation.NSCachedUrlResponse cachedResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlProtocolClient.CachedResponseIsValid(Foundation.NSUrlProtocol,Foundation.NSCachedUrlResponse)" />
      <MemberSignature Language="F#" Value="member this.CachedResponseIsValid : Foundation.NSUrlProtocol * Foundation.NSCachedUrlResponse -&gt; unit" Usage="nSUrlProtocolClient.CachedResponseIsValid (protocol, cachedResponse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocol" Type="Foundation.NSUrlProtocol" />
        <Parameter Name="cachedResponse" Type="Foundation.NSCachedUrlResponse" />
      </Parameters>
      <Docs>
        <param name="protocol">To be added.</param>
        <param name="cachedResponse">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelledAuthenticationChallenge">
      <MemberSignature Language="C#" Value="public void CancelledAuthenticationChallenge (Foundation.NSUrlProtocol protocol, Foundation.NSUrlAuthenticationChallenge challenge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelledAuthenticationChallenge(class Foundation.NSUrlProtocol protocol, class Foundation.NSUrlAuthenticationChallenge challenge) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlProtocolClient.CancelledAuthenticationChallenge(Foundation.NSUrlProtocol,Foundation.NSUrlAuthenticationChallenge)" />
      <MemberSignature Language="F#" Value="member this.CancelledAuthenticationChallenge : Foundation.NSUrlProtocol * Foundation.NSUrlAuthenticationChallenge -&gt; unit" Usage="nSUrlProtocolClient.CancelledAuthenticationChallenge (protocol, challenge)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocol" Type="Foundation.NSUrlProtocol" />
        <Parameter Name="challenge" Type="Foundation.NSUrlAuthenticationChallenge" />
      </Parameters>
      <Docs>
        <param name="protocol">To be added.</param>
        <param name="challenge">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLoaded">
      <MemberSignature Language="C#" Value="public void DataLoaded (Foundation.NSUrlProtocol protocol, Foundation.NSData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataLoaded(class Foundation.NSUrlProtocol protocol, class Foundation.NSData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlProtocolClient.DataLoaded(Foundation.NSUrlProtocol,Foundation.NSData)" />
      <MemberSignature Language="F#" Value="member this.DataLoaded : Foundation.NSUrlProtocol * Foundation.NSData -&gt; unit" Usage="nSUrlProtocolClient.DataLoaded (protocol, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocol" Type="Foundation.NSUrlProtocol" />
        <Parameter Name="data" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="protocol">To be added.</param>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FailedWithError">
      <MemberSignature Language="C#" Value="public void FailedWithError (Foundation.NSUrlProtocol protocol, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FailedWithError(class Foundation.NSUrlProtocol protocol, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlProtocolClient.FailedWithError(Foundation.NSUrlProtocol,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="member this.FailedWithError : Foundation.NSUrlProtocol * Foundation.NSError -&gt; unit" Usage="nSUrlProtocolClient.FailedWithError (protocol, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocol" Type="Foundation.NSUrlProtocol" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="protocol">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishedLoading">
      <MemberSignature Language="C#" Value="public void FinishedLoading (Foundation.NSUrlProtocol protocol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinishedLoading(class Foundation.NSUrlProtocol protocol) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlProtocolClient.FinishedLoading(Foundation.NSUrlProtocol)" />
      <MemberSignature Language="F#" Value="member this.FinishedLoading : Foundation.NSUrlProtocol -&gt; unit" Usage="nSUrlProtocolClient.FinishedLoading protocol" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocol" Type="Foundation.NSUrlProtocol" />
      </Parameters>
      <Docs>
        <param name="protocol">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedAuthenticationChallenge">
      <MemberSignature Language="C#" Value="public void ReceivedAuthenticationChallenge (Foundation.NSUrlProtocol protocol, Foundation.NSUrlAuthenticationChallenge challenge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReceivedAuthenticationChallenge(class Foundation.NSUrlProtocol protocol, class Foundation.NSUrlAuthenticationChallenge challenge) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlProtocolClient.ReceivedAuthenticationChallenge(Foundation.NSUrlProtocol,Foundation.NSUrlAuthenticationChallenge)" />
      <MemberSignature Language="F#" Value="member this.ReceivedAuthenticationChallenge : Foundation.NSUrlProtocol * Foundation.NSUrlAuthenticationChallenge -&gt; unit" Usage="nSUrlProtocolClient.ReceivedAuthenticationChallenge (protocol, challenge)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocol" Type="Foundation.NSUrlProtocol" />
        <Parameter Name="challenge" Type="Foundation.NSUrlAuthenticationChallenge" />
      </Parameters>
      <Docs>
        <param name="protocol">To be added.</param>
        <param name="challenge">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedResponse">
      <MemberSignature Language="C#" Value="public void ReceivedResponse (Foundation.NSUrlProtocol protocol, Foundation.NSUrlResponse response, Foundation.NSUrlCacheStoragePolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReceivedResponse(class Foundation.NSUrlProtocol protocol, class Foundation.NSUrlResponse response, valuetype Foundation.NSUrlCacheStoragePolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlProtocolClient.ReceivedResponse(Foundation.NSUrlProtocol,Foundation.NSUrlResponse,Foundation.NSUrlCacheStoragePolicy)" />
      <MemberSignature Language="F#" Value="member this.ReceivedResponse : Foundation.NSUrlProtocol * Foundation.NSUrlResponse * Foundation.NSUrlCacheStoragePolicy -&gt; unit" Usage="nSUrlProtocolClient.ReceivedResponse (protocol, response, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocol" Type="Foundation.NSUrlProtocol" />
        <Parameter Name="response" Type="Foundation.NSUrlResponse" />
        <Parameter Name="policy" Type="Foundation.NSUrlCacheStoragePolicy" />
      </Parameters>
      <Docs>
        <param name="protocol">To be added.</param>
        <param name="response">To be added.</param>
        <param name="policy">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Redirected">
      <MemberSignature Language="C#" Value="public void Redirected (Foundation.NSUrlProtocol protocol, Foundation.NSUrlRequest redirectedToEequest, Foundation.NSUrlResponse redirectResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Redirected(class Foundation.NSUrlProtocol protocol, class Foundation.NSUrlRequest redirectedToEequest, class Foundation.NSUrlResponse redirectResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlProtocolClient.Redirected(Foundation.NSUrlProtocol,Foundation.NSUrlRequest,Foundation.NSUrlResponse)" />
      <MemberSignature Language="F#" Value="member this.Redirected : Foundation.NSUrlProtocol * Foundation.NSUrlRequest * Foundation.NSUrlResponse -&gt; unit" Usage="nSUrlProtocolClient.Redirected (protocol, redirectedToEequest, redirectResponse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocol" Type="Foundation.NSUrlProtocol" />
        <Parameter Name="redirectedToEequest" Type="Foundation.NSUrlRequest" />
        <Parameter Name="redirectResponse" Type="Foundation.NSUrlResponse" />
      </Parameters>
      <Docs>
        <param name="protocol">To be added.</param>
        <param name="redirectedToEequest">To be added.</param>
        <param name="redirectResponse">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
