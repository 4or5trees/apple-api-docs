<Type Name="IFIFinderSyncProtocol" FullName="FinderSync.IFIFinderSyncProtocol">
  <TypeSignature Language="C#" Value="public interface IFIFinderSyncProtocol : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFIFinderSyncProtocol implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:FinderSync.IFIFinderSyncProtocol" />
  <TypeSignature Language="F#" Value="type IFIFinderSyncProtocol = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="FIFinderSync", WrapperType=typeof(FinderSync.FIFinderSyncProtocolWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetMenu", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(FinderSync.FIMenuKind) }, ReturnType=typeof(AppKit.NSMenu), Selector="menuForMenuKind:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="BeginObservingDirectory", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSUrl) }, Selector="beginObservingDirectoryAtURL:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="EndObservingDirectory", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSUrl) }, Selector="endObservingDirectoryAtURL:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="RequestBadgeIdentifier", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSUrl) }, Selector="requestBadgeIdentifierForURL:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="SupportedServiceNames", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSUrl) }, ReturnType=typeof(System.String[]), Selector="supportedServiceNamesForItemWithURL:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetValues", ParameterBlockProxy=new System.Type[] { null, null, typeof(ObjCRuntime.Trampolines/NIDGetValuesCompletionHandler) }, ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(System.String[]), typeof(Foundation.NSUrl), typeof(FinderSync.GetValuesCompletionHandler) }, Selector="valuesForAttributes:forItemWithURL:completion:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="toolbarItemName", IsProperty=true, IsRequired=false, IsStatic=false, Name="ToolbarItemName", PropertyType=typeof(System.String), Selector="toolbarItemName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.Copy, GetterSelector="toolbarItemImage", IsProperty=true, IsRequired=false, IsStatic=false, Name="ToolbarItemImage", PropertyType=typeof(AppKit.NSImage), Selector="toolbarItemImage")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="toolbarItemToolTip", IsProperty=true, IsRequired=false, IsStatic=false, Name="ToolbarItemToolTip", PropertyType=typeof(System.String), Selector="toolbarItemToolTip")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>
