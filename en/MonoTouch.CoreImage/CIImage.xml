<Type Name="CIImage" FullName="MonoTouch.CoreImage.CIImage">
  <TypeSignature Language="C#" Value="public class CIImage : MonoTouch.Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CIImage extends MonoTouch.Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("CIImage", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a set of instructions to create an image for use by CoreImage.</summary>
    <remarks>
      <para>

	Unlike CoreGraphics images (<see cref="T:MonoTouch.CoreGraphics.CGImage" />) that are objects
	that hold the actual image data to be processed, CIImages
	represents a set of instructions to obtain an image.  These
	recipes are used during the CoreImage filtering, analysis or rendering
	pipeline to actually create the bitmap representation.   

      </para>
      <para>

	CIImages are either the result of loading an image from disk,
	an NSData array, a CoreVideo buffer a CoreGraphics image, or
	the result of processing an image pipeline by CoreImage.

      </para>
      <para>

	CIImages for example are used when chaining various filters
	(<see cref="T:MonoTouch.CoreImage.CIFilter" />) together and
	only their abstract representation is passed between the
	output of one filter and the input to another one.  The image
	might not even reside in the main memory, it could reside
	entirely on the GPU space as an intermediate step between two
	filters.

      </para>
    </remarks>
    <related type="sample" href="http://samples.xamarin.com/Samples/ByGuid?guid=e2a0ccca-ab10-4e41-9c09-11831a8c1380">coreimage</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIImage (MonoTouch.CoreGraphics.CGImage image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.CoreGraphics.CGImage image) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCGImage:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="image" Type="MonoTouch.CoreGraphics.CGImage" />
      </Parameters>
      <Docs>
        <param name="image">CoreGraphics image.</param>
        <summary>Initializes a CoreImage from a CoreGraphics bitmap representation</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIImage (MonoTouch.CoreGraphics.CGLayer layer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.CoreGraphics.CGLayer layer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCGLayer:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="layer" Type="MonoTouch.CoreGraphics.CGLayer" />
      </Parameters>
      <Docs>
        <param name="layer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIImage (MonoTouch.CoreImage.CIColor color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.CoreImage.CIColor color) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithColor:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="color" Type="MonoTouch.CoreImage.CIColor" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIImage (MonoTouch.CoreVideo.CVImageBuffer imageBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.CoreVideo.CVImageBuffer imageBuffer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCVImageBuffer:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="imageBuffer" Type="MonoTouch.CoreVideo.CVImageBuffer" />
      </Parameters>
      <Docs>
        <param name="imageBuffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIImage (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIImage (MonoTouch.Foundation.NSData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSData data) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithData:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIImage (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When you invoke the constructor that takes the NSObjectFlag.Empty you taking advatnage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to you.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is your responsability to completely initialize the object if you chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if your constructors invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, you should instead chain to the proper constructor in your class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#">
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from MonoTouch's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSend_RectangleF (this.Handle, initWithFrame, frame);
	else
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_RectangleF (this.SuperHandle, initWithFrame, frame);
}
</code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIImage (MonoTouch.Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSUrl url) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithContentsOfURL:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIImage (MonoTouch.UIKit.UIImage image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.UIKit.UIImage image) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithImage:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="image" Type="MonoTouch.UIKit.UIImage" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIImage (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:MonoTouch.ObjCRuntime.GetNSObject (System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    You should not invoke this method directly, instead you should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIImage (MonoTouch.CoreGraphics.CGImage image, MonoTouch.Foundation.NSDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.CoreGraphics.CGImage image, class MonoTouch.Foundation.NSDictionary d) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCGImage:options:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="image" Type="MonoTouch.CoreGraphics.CGImage" />
        <Parameter Name="d" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIImage (MonoTouch.CoreGraphics.CGLayer layer, MonoTouch.Foundation.NSDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.CoreGraphics.CGLayer layer, class MonoTouch.Foundation.NSDictionary d) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCGLayer:options:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="layer" Type="MonoTouch.CoreGraphics.CGLayer" />
        <Parameter Name="d" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="layer">To be added.</param>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIImage (MonoTouch.CoreVideo.CVImageBuffer imageBuffer, MonoTouch.Foundation.NSDictionary dict);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.CoreVideo.CVImageBuffer imageBuffer, class MonoTouch.Foundation.NSDictionary dict) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCVImageBuffer:options:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="imageBuffer" Type="MonoTouch.CoreVideo.CVImageBuffer" />
        <Parameter Name="dict" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="imageBuffer">To be added.</param>
        <param name="dict">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIImage (MonoTouch.Foundation.NSData data, MonoTouch.Foundation.NSDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSData data, class MonoTouch.Foundation.NSDictionary d) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithData:options:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
        <Parameter Name="d" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIImage (MonoTouch.Foundation.NSUrl url, MonoTouch.Foundation.NSDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSUrl url, class MonoTouch.Foundation.NSDictionary d) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithContentsOfURL:options:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
        <Parameter Name="d" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIImage (MonoTouch.UIKit.UIImage image, MonoTouch.Foundation.NSDictionary options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.UIKit.UIImage image, class MonoTouch.Foundation.NSDictionary options) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithImage:options")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="image" Type="MonoTouch.UIKit.UIImage" />
        <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIImage (int glTextureName, System.Drawing.SizeF size, bool flipped, MonoTouch.CoreGraphics.CGColorSpace colorSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 glTextureName, valuetype System.Drawing.SizeF size, bool flipped, class MonoTouch.CoreGraphics.CGColorSpace colorSpace) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithTexture:size:flipped:colorSpace:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="glTextureName" Type="System.Int32" />
        <Parameter Name="size" Type="System.Drawing.SizeF" />
        <Parameter Name="flipped" Type="System.Boolean" />
        <Parameter Name="colorSpace" Type="MonoTouch.CoreGraphics.CGColorSpace" />
      </Parameters>
      <Docs>
        <param name="glTextureName">To be added.</param>
        <param name="size">To be added.</param>
        <param name="flipped">To be added.</param>
        <param name="colorSpace">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIImage (MonoTouch.Foundation.NSData d, int bpr, System.Drawing.SizeF size, int f, MonoTouch.CoreGraphics.CGColorSpace colorSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSData d, int32 bpr, valuetype System.Drawing.SizeF size, int32 f, class MonoTouch.CoreGraphics.CGColorSpace colorSpace) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithBitmapData:bytesPerRow:size:format:colorSpace:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="d" Type="MonoTouch.Foundation.NSData" />
        <Parameter Name="bpr" Type="System.Int32" />
        <Parameter Name="size" Type="System.Drawing.SizeF" />
        <Parameter Name="f" Type="System.Int32" />
        <Parameter Name="colorSpace" Type="MonoTouch.CoreGraphics.CGColorSpace" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <param name="bpr">To be added.</param>
        <param name="size">To be added.</param>
        <param name="f">To be added.</param>
        <param name="colorSpace">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each MonoTouch class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyImage">
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreImage.CIImage EmptyImage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class MonoTouch.CoreImage.CIImage EmptyImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("emptyImage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreImage.CIImage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extent">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.RectangleF Extent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF Extent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("extent")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatBGRA8">
      <MemberSignature Language="C#" Value="public static int FormatBGRA8 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 FormatBGRA8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant kCIFormatBGRA8</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatRGBA8">
      <MemberSignature Language="C#" Value="public static int FormatRGBA8 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 FormatRGBA8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant kCIFormatRGBA8</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromCGImage">
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreImage.CIImage FromCGImage (MonoTouch.CoreGraphics.CGImage image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.CoreImage.CIImage FromCGImage(class MonoTouch.CoreGraphics.CGImage image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("imageWithCGImage:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreImage.CIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="MonoTouch.CoreGraphics.CGImage" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromCGImage">
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreImage.CIImage FromCGImage (MonoTouch.CoreGraphics.CGImage image, MonoTouch.CoreGraphics.CGColorSpace colorSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.CoreImage.CIImage FromCGImage(class MonoTouch.CoreGraphics.CGImage image, class MonoTouch.CoreGraphics.CGColorSpace colorSpace) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreImage.CIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="MonoTouch.CoreGraphics.CGImage" />
        <Parameter Name="colorSpace" Type="MonoTouch.CoreGraphics.CGColorSpace" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="colorSpace">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromCGImage">
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreImage.CIImage FromCGImage (MonoTouch.CoreGraphics.CGImage image, MonoTouch.Foundation.NSDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.CoreImage.CIImage FromCGImage(class MonoTouch.CoreGraphics.CGImage image, class MonoTouch.Foundation.NSDictionary d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("imageWithCGImage:options:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreImage.CIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="MonoTouch.CoreGraphics.CGImage" />
        <Parameter Name="d" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromData">
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreImage.CIImage FromData (MonoTouch.Foundation.NSData data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.CoreImage.CIImage FromData(class MonoTouch.Foundation.NSData data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("imageWithData:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreImage.CIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromData">
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreImage.CIImage FromData (MonoTouch.Foundation.NSData data, MonoTouch.Foundation.NSDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.CoreImage.CIImage FromData(class MonoTouch.Foundation.NSData data, class MonoTouch.Foundation.NSDictionary d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("imageWithData:options:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreImage.CIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
        <Parameter Name="d" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromData">
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreImage.CIImage FromData (MonoTouch.Foundation.NSData bitmapData, int bpr, System.Drawing.SizeF size, int ciImageFormat, MonoTouch.CoreGraphics.CGColorSpace colorspace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.CoreImage.CIImage FromData(class MonoTouch.Foundation.NSData bitmapData, int32 bpr, valuetype System.Drawing.SizeF size, int32 ciImageFormat, class MonoTouch.CoreGraphics.CGColorSpace colorspace) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("imageWithBitmapData:bytesPerRow:size:format:colorSpace:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreImage.CIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmapData" Type="MonoTouch.Foundation.NSData" />
        <Parameter Name="bpr" Type="System.Int32" />
        <Parameter Name="size" Type="System.Drawing.SizeF" />
        <Parameter Name="ciImageFormat" Type="System.Int32" />
        <Parameter Name="colorspace" Type="MonoTouch.CoreGraphics.CGColorSpace" />
      </Parameters>
      <Docs>
        <param name="bitmapData">To be added.</param>
        <param name="bpr">To be added.</param>
        <param name="size">To be added.</param>
        <param name="ciImageFormat">To be added.</param>
        <param name="colorspace">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromImageBuffer">
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreImage.CIImage FromImageBuffer (MonoTouch.CoreVideo.CVPixelBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.CoreImage.CIImage FromImageBuffer(class MonoTouch.CoreVideo.CVPixelBuffer buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("imageWithCVPixelBuffer:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreImage.CIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="MonoTouch.CoreVideo.CVPixelBuffer" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromImageBuffer">
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreImage.CIImage FromImageBuffer (MonoTouch.CoreVideo.CVPixelBuffer buffer, MonoTouch.Foundation.NSDictionary dict);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.CoreImage.CIImage FromImageBuffer(class MonoTouch.CoreVideo.CVPixelBuffer buffer, class MonoTouch.Foundation.NSDictionary dict) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("imageWithCVPixelBuffer:options:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreImage.CIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="MonoTouch.CoreVideo.CVPixelBuffer" />
        <Parameter Name="dict" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="dict">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromUrl">
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreImage.CIImage FromUrl (MonoTouch.Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.CoreImage.CIImage FromUrl(class MonoTouch.Foundation.NSUrl url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("imageWithContentsOfURL:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreImage.CIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromUrl">
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreImage.CIImage FromUrl (MonoTouch.Foundation.NSUrl url, MonoTouch.Foundation.NSDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.CoreImage.CIImage FromUrl(class MonoTouch.Foundation.NSUrl url, class MonoTouch.Foundation.NSDictionary d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("imageWithContentsOfURL:options:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreImage.CIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
        <Parameter Name="d" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutoAdjustmentFilters">
      <MemberSignature Language="C#" Value="public MonoTouch.CoreImage.CIFilter[] GetAutoAdjustmentFilters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MonoTouch.CoreImage.CIFilter[] GetAutoAdjustmentFilters() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreImage.CIFilter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutoAdjustmentFilters">
      <MemberSignature Language="C#" Value="public MonoTouch.CoreImage.CIFilter[] GetAutoAdjustmentFilters (MonoTouch.CoreImage.CIAutoAdjustmentFilterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MonoTouch.CoreImage.CIFilter[] GetAutoAdjustmentFilters(class MonoTouch.CoreImage.CIAutoAdjustmentFilterOptions options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreImage.CIFilter[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MonoTouch.CoreImage.CIAutoAdjustmentFilterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageByApplyingTransform">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.CoreImage.CIImage ImageByApplyingTransform (MonoTouch.CoreGraphics.CGAffineTransform matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.CoreImage.CIImage ImageByApplyingTransform(valuetype MonoTouch.CoreGraphics.CGAffineTransform matrix) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("imageByApplyingTransform:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreImage.CIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="MonoTouch.CoreGraphics.CGAffineTransform" />
      </Parameters>
      <Docs>
        <param name="matrix">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageByCroppingToRect">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.CoreImage.CIImage ImageByCroppingToRect (System.Drawing.RectangleF r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.CoreImage.CIImage ImageByCroppingToRect(valuetype System.Drawing.RectangleF r) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("imageByCroppingToRect:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreImage.CIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageWithColor">
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreImage.CIImage ImageWithColor (MonoTouch.CoreImage.CIColor color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.CoreImage.CIImage ImageWithColor(class MonoTouch.CoreImage.CIColor color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("imageWithColor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreImage.CIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="MonoTouch.CoreImage.CIColor" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreImage.CIImage op_Implicit (MonoTouch.CoreGraphics.CGImage image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class MonoTouch.CoreImage.CIImage op_Implicit(class MonoTouch.CoreGraphics.CGImage image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreImage.CIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="MonoTouch.CoreGraphics.CGImage" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
