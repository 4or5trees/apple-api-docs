<Type Name="IIKImageEditPanelDataSource" FullName="ImageKit.IIKImageEditPanelDataSource">
  <TypeSignature Language="C#" Value="public interface IIKImageEditPanelDataSource : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IIKImageEditPanelDataSource implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:ImageKit.IIKImageEditPanelDataSource" />
  <TypeSignature Language="F#" Value="type IIKImageEditPanelDataSource = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="IKImageEditPanelDataSource", WrapperType=typeof(ImageKit.IKImageEditPanelDataSourceWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="SetImageAndProperties", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(CoreGraphics.CGImage), typeof(Foundation.NSDictionary) }, Selector="setImage:imageProperties:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetThumbnail", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(CoreGraphics.CGSize) }, ReturnType=typeof(CoreGraphics.CGImage), Selector="thumbnailWithMaximumSize:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="image", IsProperty=true, IsRequired=true, IsStatic=false, Name="Image", PropertyType=typeof(CoreGraphics.CGImage), Selector="image")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="imageProperties", IsProperty=true, IsRequired=false, IsStatic=false, Name="ImageProperties", PropertyType=typeof(Foundation.NSDictionary), Selector="imageProperties")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="hasAdjustMode", IsProperty=true, IsRequired=false, IsStatic=false, Name="HasAdjustMode", PropertyType=typeof(System.Boolean), Selector="hasAdjustMode")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="hasEffectsMode", IsProperty=true, IsRequired=false, IsStatic=false, Name="HasEffectsMode", PropertyType=typeof(System.Boolean), Selector="hasEffectsMode")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="hasDetailsMode", IsProperty=true, IsRequired=false, IsStatic=false, Name="HasDetailsMode", PropertyType=typeof(System.Boolean), Selector="hasDetailsMode")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGImage Image { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CoreGraphics.CGImage Image" />
      <MemberSignature Language="DocId" Value="P:ImageKit.IIKImageEditPanelDataSource.Image" />
      <MemberSignature Language="F#" Value="member this.Image : CoreGraphics.CGImage" Usage="ImageKit.IIKImageEditPanelDataSource.Image" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("image")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGImage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImageAndProperties">
      <MemberSignature Language="C#" Value="public void SetImageAndProperties (CoreGraphics.CGImage image, Foundation.NSDictionary metaData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetImageAndProperties(class CoreGraphics.CGImage image, class Foundation.NSDictionary metaData) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageKit.IIKImageEditPanelDataSource.SetImageAndProperties(CoreGraphics.CGImage,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="abstract member SetImageAndProperties : CoreGraphics.CGImage * Foundation.NSDictionary -&gt; unit" Usage="iIKImageEditPanelDataSource.SetImageAndProperties (image, metaData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setImage:imageProperties:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="CoreGraphics.CGImage" />
        <Parameter Name="metaData" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="metaData">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
