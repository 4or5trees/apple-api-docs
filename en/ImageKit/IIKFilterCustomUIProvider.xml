<Type Name="IIKFilterCustomUIProvider" FullName="ImageKit.IIKFilterCustomUIProvider">
  <TypeSignature Language="C#" Value="public interface IIKFilterCustomUIProvider : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IIKFilterCustomUIProvider implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:ImageKit.IIKFilterCustomUIProvider" />
  <TypeSignature Language="F#" Value="type IIKFilterCustomUIProvider = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="IKFilterCustomUIProvider", WrapperType=typeof(ImageKit.IKFilterCustomUIProviderWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="ProvideFilterUIView", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Foundation.NSDictionary), typeof(Foundation.NSArray) }, ReturnType=typeof(ImageKit.IKFilterUIView), Selector="provideViewForUIConfiguration:excludedKeys:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ProvideFilterUIView">
      <MemberSignature Language="C#" Value="public ImageKit.IKFilterUIView ProvideFilterUIView (Foundation.NSDictionary configurationOptions, Foundation.NSArray excludedKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class ImageKit.IKFilterUIView ProvideFilterUIView(class Foundation.NSDictionary configurationOptions, class Foundation.NSArray excludedKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageKit.IIKFilterCustomUIProvider.ProvideFilterUIView(Foundation.NSDictionary,Foundation.NSArray)" />
      <MemberSignature Language="F#" Value="abstract member ProvideFilterUIView : Foundation.NSDictionary * Foundation.NSArray -&gt; ImageKit.IKFilterUIView" Usage="iIKFilterCustomUIProvider.ProvideFilterUIView (configurationOptions, excludedKeys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("provideViewForUIConfiguration:excludedKeys:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ImageKit.IKFilterUIView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationOptions" Type="Foundation.NSDictionary" />
        <Parameter Name="excludedKeys" Type="Foundation.NSArray" />
      </Parameters>
      <Docs>
        <param name="configurationOptions">To be added.</param>
        <param name="excludedKeys">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
