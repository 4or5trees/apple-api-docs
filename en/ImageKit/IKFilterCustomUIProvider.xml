<Type Name="IKFilterCustomUIProvider" FullName="ImageKit.IKFilterCustomUIProvider">
  <TypeSignature Language="C#" Value="public abstract class IKFilterCustomUIProvider : Foundation.NSObject, IDisposable, ImageKit.IIKFilterCustomUIProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IKFilterCustomUIProvider extends Foundation.NSObject implements class ImageKit.IIKFilterCustomUIProvider, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:ImageKit.IKFilterCustomUIProvider" />
  <TypeSignature Language="F#" Value="type IKFilterCustomUIProvider = class&#xA;    inherit NSObject&#xA;    interface IIKFilterCustomUIProvider&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ImageKit.IIKFilterCustomUIProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Register("IKFilterCustomUIProvider", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IKFilterCustomUIProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageKit.IKFilterCustomUIProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IKFilterCustomUIProvider (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageKit.IKFilterCustomUIProvider.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new ImageKit.IKFilterCustomUIProvider : Foundation.NSObjectFlag -&gt; ImageKit.IKFilterCustomUIProvider" Usage="new ImageKit.IKFilterCustomUIProvider t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal IKFilterCustomUIProvider (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageKit.IKFilterCustomUIProvider.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new ImageKit.IKFilterCustomUIProvider : nativeint -&gt; ImageKit.IKFilterCustomUIProvider" Usage="new ImageKit.IKFilterCustomUIProvider handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlavorAllowFallback">
      <MemberSignature Language="C#" Value="public static Foundation.NSString FlavorAllowFallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString FlavorAllowFallback" />
      <MemberSignature Language="DocId" Value="P:ImageKit.IKFilterCustomUIProvider.FlavorAllowFallback" />
      <MemberSignature Language="F#" Value="member this.FlavorAllowFallback : Foundation.NSString" Usage="ImageKit.IKFilterCustomUIProvider.FlavorAllowFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("IKUIFlavorAllowFallback", "ImageKit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSize">
      <MemberSignature Language="C#" Value="public static Foundation.NSString MaxSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString MaxSize" />
      <MemberSignature Language="DocId" Value="P:ImageKit.IKFilterCustomUIProvider.MaxSize" />
      <MemberSignature Language="F#" Value="member this.MaxSize : Foundation.NSString" Usage="ImageKit.IKFilterCustomUIProvider.MaxSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("IKUImaxSize", "ImageKit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideFilterUIView">
      <MemberSignature Language="C#" Value="public abstract ImageKit.IKFilterUIView ProvideFilterUIView (Foundation.NSDictionary configurationOptions, Foundation.NSArray excludedKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class ImageKit.IKFilterUIView ProvideFilterUIView(class Foundation.NSDictionary configurationOptions, class Foundation.NSArray excludedKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageKit.IKFilterCustomUIProvider.ProvideFilterUIView(Foundation.NSDictionary,Foundation.NSArray)" />
      <MemberSignature Language="F#" Value="abstract member ProvideFilterUIView : Foundation.NSDictionary * Foundation.NSArray -&gt; ImageKit.IKFilterUIView" Usage="iKFilterCustomUIProvider.ProvideFilterUIView (configurationOptions, excludedKeys)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ImageKit.IIKFilterCustomUIProvider.ProvideFilterUIView(Foundation.NSDictionary,Foundation.NSArray)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("provideViewForUIConfiguration:excludedKeys:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ImageKit.IKFilterUIView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationOptions" Type="Foundation.NSDictionary" />
        <Parameter Name="excludedKeys" Type="Foundation.NSArray" />
      </Parameters>
      <Docs>
        <param name="configurationOptions">To be added.</param>
        <param name="excludedKeys">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeFlavor">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SizeFlavor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SizeFlavor" />
      <MemberSignature Language="DocId" Value="P:ImageKit.IKFilterCustomUIProvider.SizeFlavor" />
      <MemberSignature Language="F#" Value="member this.SizeFlavor : Foundation.NSString" Usage="ImageKit.IKFilterCustomUIProvider.SizeFlavor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("IKUISizeFlavor", "ImageKit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeMini">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SizeMini { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SizeMini" />
      <MemberSignature Language="DocId" Value="P:ImageKit.IKFilterCustomUIProvider.SizeMini" />
      <MemberSignature Language="F#" Value="member this.SizeMini : Foundation.NSString" Usage="ImageKit.IKFilterCustomUIProvider.SizeMini" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("IKUISizeMini", "ImageKit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeRegular">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SizeRegular { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SizeRegular" />
      <MemberSignature Language="DocId" Value="P:ImageKit.IKFilterCustomUIProvider.SizeRegular" />
      <MemberSignature Language="F#" Value="member this.SizeRegular : Foundation.NSString" Usage="ImageKit.IKFilterCustomUIProvider.SizeRegular" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("IKUISizeRegular", "ImageKit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeSmall">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SizeSmall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SizeSmall" />
      <MemberSignature Language="DocId" Value="P:ImageKit.IKFilterCustomUIProvider.SizeSmall" />
      <MemberSignature Language="F#" Value="member this.SizeSmall : Foundation.NSString" Usage="ImageKit.IKFilterCustomUIProvider.SizeSmall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("IKUISizeSmall", "ImageKit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
