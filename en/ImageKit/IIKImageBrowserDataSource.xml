<Type Name="IIKImageBrowserDataSource" FullName="ImageKit.IIKImageBrowserDataSource">
  <TypeSignature Language="C#" Value="public interface IIKImageBrowserDataSource : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IIKImageBrowserDataSource implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:ImageKit.IIKImageBrowserDataSource" />
  <TypeSignature Language="F#" Value="type IIKImageBrowserDataSource = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(IsInformal=true, Name="IKImageBrowserDataSource", WrapperType=typeof(ImageKit.IKImageBrowserDataSourceWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="ItemCount", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(ImageKit.IKImageBrowserView) }, ReturnType=typeof(System.nint), Selector="numberOfItemsInImageBrowser:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GetItem", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(ImageKit.IKImageBrowserView), typeof(System.nint) }, ReturnType=typeof(ImageKit.IIKImageBrowserItem), Selector="imageBrowser:itemAtIndex:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="RemoveItems", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(ImageKit.IKImageBrowserView), typeof(Foundation.NSIndexSet) }, Selector="imageBrowser:removeItemsAtIndexes:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="MoveItems", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(ImageKit.IKImageBrowserView), typeof(Foundation.NSIndexSet), typeof(System.nint) }, ReturnType=typeof(System.Boolean), Selector="imageBrowser:moveItemsAtIndexes:toIndex:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WriteItemsToPasteboard", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(ImageKit.IKImageBrowserView), typeof(Foundation.NSIndexSet), typeof(AppKit.NSPasteboard) }, ReturnType=typeof(System.nint), Selector="imageBrowser:writeItemsAtIndexes:toPasteboard:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GroupCount", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(ImageKit.IKImageBrowserView) }, ReturnType=typeof(System.nint), Selector="numberOfGroupsInImageBrowser:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetGroup", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(ImageKit.IKImageBrowserView), typeof(System.nint) }, ReturnType=typeof(Foundation.NSDictionary), Selector="imageBrowser:groupAtIndex:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public ImageKit.IIKImageBrowserItem GetItem (ImageKit.IKImageBrowserView aBrowser, nint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class ImageKit.IIKImageBrowserItem GetItem(class ImageKit.IKImageBrowserView aBrowser, valuetype System.nint index) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageKit.IIKImageBrowserDataSource.GetItem(ImageKit.IKImageBrowserView,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member GetItem : ImageKit.IKImageBrowserView * nint -&gt; ImageKit.IIKImageBrowserItem" Usage="iIKImageBrowserDataSource.GetItem (aBrowser, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("imageBrowser:itemAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ImageKit.IIKImageBrowserItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aBrowser" Type="ImageKit.IKImageBrowserView" />
        <Parameter Name="index" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="aBrowser">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCount">
      <MemberSignature Language="C#" Value="public nint ItemCount (ImageKit.IKImageBrowserView aBrowser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nint ItemCount(class ImageKit.IKImageBrowserView aBrowser) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageKit.IIKImageBrowserDataSource.ItemCount(ImageKit.IKImageBrowserView)" />
      <MemberSignature Language="F#" Value="abstract member ItemCount : ImageKit.IKImageBrowserView -&gt; nint" Usage="iIKImageBrowserDataSource.ItemCount aBrowser" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("numberOfItemsInImageBrowser:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aBrowser" Type="ImageKit.IKImageBrowserView" />
      </Parameters>
      <Docs>
        <param name="aBrowser">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
