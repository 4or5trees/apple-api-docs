<Type Name="DlsymOption" FullName="ObjCRuntime.DlsymOption">
  <TypeSignature Language="C#" Value="public enum DlsymOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DlsymOption extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <para>This enum is used to specify whether a library requires using dlsym to resolve P/Invokes to native functions or not.</para>
      <para>A library can require using dlsym if there are P/Invokes in the assembly that reference native functions that don't exist on the target platform.</para>
    </summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype ObjCRuntime.DlsymOption Default = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ObjCRuntime.DlsymOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use the default value for the platform (for backwards compatibility reasons the default is to use dlsym on platforms that support it - this may change in the future).</summary>
      </Docs>
    </Member>
    <Member MemberName="Disabled">
      <MemberSignature Language="C#" Value="Disabled" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype ObjCRuntime.DlsymOption Disabled = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ObjCRuntime.DlsymOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>This library does not depend on using dlsym to resolve P/Invokes to native functions.</para>
          <para>This means an AOT compiler can insert a direct call to the native functions in the generated native code. It's faster to use a direct call (and the code is smaller), but if the native function does not exist on the target platform, the app will not compile (the native linker will fail because it can't find the native functions).</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Required">
      <MemberSignature Language="C#" Value="Required" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype ObjCRuntime.DlsymOption Required = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ObjCRuntime.DlsymOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>This library requires using dlsym to resolve native functions.</para>
          <para>This means the AOT compiler can not insert a direct call to the native function for P/Invokes (this is the case when there may be P/Invokes to native functions that don't exist on the target platform).</para>
      </summary>
      </Docs>
    </Member>
  </Members>
</Type>
