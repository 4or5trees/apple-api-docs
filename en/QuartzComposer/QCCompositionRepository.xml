<Type Name="QCCompositionRepository" FullName="QuartzComposer.QCCompositionRepository">
  <TypeSignature Language="C#" Value="public class QCCompositionRepository : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QCCompositionRepository extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:QuartzComposer.QCCompositionRepository" />
  <TypeSignature Language="F#" Value="type QCCompositionRepository = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("QCCompositionRepository", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected QCCompositionRepository (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuartzComposer.QCCompositionRepository.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new QuartzComposer.QCCompositionRepository : Foundation.NSObjectFlag -&gt; QuartzComposer.QCCompositionRepository" Usage="new QuartzComposer.QCCompositionRepository t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal QCCompositionRepository (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuartzComposer.QCCompositionRepository.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new QuartzComposer.QCCompositionRepository : nativeint -&gt; QuartzComposer.QCCompositionRepository" Usage="new QuartzComposer.QCCompositionRepository handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllCompositions">
      <MemberSignature Language="C#" Value="public virtual QuartzComposer.QCComposition[] AllCompositions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class QuartzComposer.QCComposition[] AllCompositions" />
      <MemberSignature Language="DocId" Value="P:QuartzComposer.QCCompositionRepository.AllCompositions" />
      <MemberSignature Language="F#" Value="member this.AllCompositions : QuartzComposer.QCComposition[]" Usage="QuartzComposer.QCCompositionRepository.AllCompositions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("allCompositions")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>QuartzComposer.QCComposition[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:QuartzComposer.QCCompositionRepository.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="QuartzComposer.QCCompositionRepository.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComposition">
      <MemberSignature Language="C#" Value="public virtual QuartzComposer.QCComposition GetComposition (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class QuartzComposer.QCComposition GetComposition(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuartzComposer.QCCompositionRepository.GetComposition(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetComposition : string -&gt; QuartzComposer.QCComposition&#xA;override this.GetComposition : string -&gt; QuartzComposer.QCComposition" Usage="qCCompositionRepository.GetComposition identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("compositionWithIdentifier:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>QuartzComposer.QCComposition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompositions">
      <MemberSignature Language="C#" Value="public virtual QuartzComposer.QCComposition[] GetCompositions (Foundation.NSArray protocols, Foundation.NSDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class QuartzComposer.QCComposition[] GetCompositions(class Foundation.NSArray protocols, class Foundation.NSDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuartzComposer.QCCompositionRepository.GetCompositions(Foundation.NSArray,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="abstract member GetCompositions : Foundation.NSArray * Foundation.NSDictionary -&gt; QuartzComposer.QCComposition[]&#xA;override this.GetCompositions : Foundation.NSArray * Foundation.NSDictionary -&gt; QuartzComposer.QCComposition[]" Usage="qCCompositionRepository.GetCompositions (protocols, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("compositionsWithProtocols:andAttributes:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>QuartzComposer.QCComposition[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocols" Type="Foundation.NSArray" />
        <Parameter Name="attributes" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="protocols">To be added.</param>
        <param name="attributes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedCompositionRepository">
      <MemberSignature Language="C#" Value="public static QuartzComposer.QCCompositionRepository SharedCompositionRepository { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class QuartzComposer.QCCompositionRepository SharedCompositionRepository" />
      <MemberSignature Language="DocId" Value="P:QuartzComposer.QCCompositionRepository.SharedCompositionRepository" />
      <MemberSignature Language="F#" Value="member this.SharedCompositionRepository : QuartzComposer.QCCompositionRepository" Usage="QuartzComposer.QCCompositionRepository.SharedCompositionRepository" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("sharedCompositionRepository")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>QuartzComposer.QCCompositionRepository</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
