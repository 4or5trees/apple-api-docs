<Type Name="CGEventSource" FullName="CoreGraphics.CGEventSource">
  <TypeSignature Language="C#" Value="public sealed class CGEventSource : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CGEventSource extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreGraphics.CGEventSource" />
  <TypeSignature Language="F#" Value="type CGEventSource = class&#xA;    interface IDisposable&#xA;    interface INativeObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGEventSource (CoreGraphics.CGEventSourceStateID stateID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype CoreGraphics.CGEventSourceStateID stateID) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGEventSource.#ctor(CoreGraphics.CGEventSourceStateID)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGEventSource : CoreGraphics.CGEventSourceStateID -&gt; CoreGraphics.CGEventSource" Usage="new CoreGraphics.CGEventSource stateID" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stateID" Type="CoreGraphics.CGEventSourceStateID" />
      </Parameters>
      <Docs>
        <param name="stateID">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGEventSource (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGEventSource.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGEventSource : nativeint -&gt; CoreGraphics.CGEventSource" Usage="new CoreGraphics.CGEventSource handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGEventSource (IntPtr handle, bool ownsHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle, bool ownsHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGEventSource.#ctor(System.IntPtr,System.Boolean)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGEventSource : nativeint * bool -&gt; CoreGraphics.CGEventSource" Usage="new CoreGraphics.CGEventSource (handle, ownsHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="ownsHandle" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <param name="ownsHandle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGEventSource.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cGEventSource.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGEventSource.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.Dispose : bool -&gt; unit" Usage="cGEventSource.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CGEventSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGEventSource.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cGEventSource.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetButtonState">
      <MemberSignature Language="C#" Value="public static bool GetButtonState (CoreGraphics.CGEventSourceStateID stateID, CoreGraphics.CGMouseButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;/System/Library/Frameworks/ApplicationServices.framework/Frameworks/CoreGraphics.framework/CoreGraphics&quot; as &quot;CGEventSourceButtonState&quot; winapi)bool GetButtonState(valuetype CoreGraphics.CGEventSourceStateID stateID, valuetype CoreGraphics.CGMouseButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGEventSource.GetButtonState(CoreGraphics.CGEventSourceStateID,CoreGraphics.CGMouseButton)" />
      <MemberSignature Language="F#" Value="static member GetButtonState : CoreGraphics.CGEventSourceStateID * CoreGraphics.CGMouseButton -&gt; bool" Usage="CoreGraphics.CGEventSource.GetButtonState (stateID, button)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateID" Type="CoreGraphics.CGEventSourceStateID" />
        <Parameter Name="button" Type="CoreGraphics.CGMouseButton" />
      </Parameters>
      <Docs>
        <param name="stateID">To be added.</param>
        <param name="button">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCounterForEventType">
      <MemberSignature Language="C#" Value="public static uint GetCounterForEventType (CoreGraphics.CGEventSourceStateID stateID, CoreGraphics.CGEventType eventType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;/System/Library/Frameworks/ApplicationServices.framework/Frameworks/CoreGraphics.framework/CoreGraphics&quot; as &quot;CGEventSourceCounterForEventType&quot; winapi)unsigned int32 GetCounterForEventType(valuetype CoreGraphics.CGEventSourceStateID stateID, valuetype CoreGraphics.CGEventType eventType) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGEventSource.GetCounterForEventType(CoreGraphics.CGEventSourceStateID,CoreGraphics.CGEventType)" />
      <MemberSignature Language="F#" Value="static member GetCounterForEventType : CoreGraphics.CGEventSourceStateID * CoreGraphics.CGEventType -&gt; uint32" Usage="CoreGraphics.CGEventSource.GetCounterForEventType (stateID, eventType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateID" Type="CoreGraphics.CGEventSourceStateID" />
        <Parameter Name="eventType" Type="CoreGraphics.CGEventType" />
      </Parameters>
      <Docs>
        <param name="stateID">To be added.</param>
        <param name="eventType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFlagsState">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGEventFlags GetFlagsState (CoreGraphics.CGEventSourceStateID stateID);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;/System/Library/Frameworks/ApplicationServices.framework/Frameworks/CoreGraphics.framework/CoreGraphics&quot; as &quot;CGEventSourceFlagsState&quot; winapi)valuetype CoreGraphics.CGEventFlags GetFlagsState(valuetype CoreGraphics.CGEventSourceStateID stateID) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGEventSource.GetFlagsState(CoreGraphics.CGEventSourceStateID)" />
      <MemberSignature Language="F#" Value="static member GetFlagsState : CoreGraphics.CGEventSourceStateID -&gt; CoreGraphics.CGEventFlags" Usage="CoreGraphics.CGEventSource.GetFlagsState stateID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGEventFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateID" Type="CoreGraphics.CGEventSourceStateID" />
      </Parameters>
      <Docs>
        <param name="stateID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyState">
      <MemberSignature Language="C#" Value="public static bool GetKeyState (CoreGraphics.CGEventSourceStateID stateID, ushort keycode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;/System/Library/Frameworks/ApplicationServices.framework/Frameworks/CoreGraphics.framework/CoreGraphics&quot; as &quot;CGEventSourceKeyState&quot; winapi)bool GetKeyState(valuetype CoreGraphics.CGEventSourceStateID stateID, unsigned int16 keycode) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGEventSource.GetKeyState(CoreGraphics.CGEventSourceStateID,System.UInt16)" />
      <MemberSignature Language="F#" Value="static member GetKeyState : CoreGraphics.CGEventSourceStateID * uint16 -&gt; bool" Usage="CoreGraphics.CGEventSource.GetKeyState (stateID, keycode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateID" Type="CoreGraphics.CGEventSourceStateID" />
        <Parameter Name="keycode" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="stateID">To be added.</param>
        <param name="keycode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalEventsFilterDuringSupressionState">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGEventFilterMask GetLocalEventsFilterDuringSupressionState (CoreGraphics.CGEventSuppressionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreGraphics.CGEventFilterMask GetLocalEventsFilterDuringSupressionState(valuetype CoreGraphics.CGEventSuppressionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGEventSource.GetLocalEventsFilterDuringSupressionState(CoreGraphics.CGEventSuppressionState)" />
      <MemberSignature Language="F#" Value="member this.GetLocalEventsFilterDuringSupressionState : CoreGraphics.CGEventSuppressionState -&gt; CoreGraphics.CGEventFilterMask" Usage="cGEventSource.GetLocalEventsFilterDuringSupressionState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGEventFilterMask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="CoreGraphics.CGEventSuppressionState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecondsSinceLastEventType">
      <MemberSignature Language="C#" Value="public static double GetSecondsSinceLastEventType (CoreGraphics.CGEventSourceStateID stateID, CoreGraphics.CGEventType eventType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;/System/Library/Frameworks/ApplicationServices.framework/Frameworks/CoreGraphics.framework/CoreGraphics&quot; as &quot;CGEventSourceSecondsSinceLastEventType&quot; winapi)float64 GetSecondsSinceLastEventType(valuetype CoreGraphics.CGEventSourceStateID stateID, valuetype CoreGraphics.CGEventType eventType) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGEventSource.GetSecondsSinceLastEventType(CoreGraphics.CGEventSourceStateID,CoreGraphics.CGEventType)" />
      <MemberSignature Language="F#" Value="static member GetSecondsSinceLastEventType : CoreGraphics.CGEventSourceStateID * CoreGraphics.CGEventType -&gt; double" Usage="CoreGraphics.CGEventSource.GetSecondsSinceLastEventType (stateID, eventType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateID" Type="CoreGraphics.CGEventSourceStateID" />
        <Parameter Name="eventType" Type="CoreGraphics.CGEventType" />
      </Parameters>
      <Docs>
        <param name="stateID">To be added.</param>
        <param name="eventType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGEventSource.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="CoreGraphics.CGEventSource.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ObjCRuntime.INativeObject.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardType">
      <MemberSignature Language="C#" Value="public int KeyboardType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyboardType" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGEventSource.KeyboardType" />
      <MemberSignature Language="F#" Value="member this.KeyboardType : int with get, set" Usage="CoreGraphics.CGEventSource.KeyboardType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalEventsSupressionInterval">
      <MemberSignature Language="C#" Value="public double LocalEventsSupressionInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LocalEventsSupressionInterval" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGEventSource.LocalEventsSupressionInterval" />
      <MemberSignature Language="F#" Value="member this.LocalEventsSupressionInterval : double with get, set" Usage="CoreGraphics.CGEventSource.LocalEventsSupressionInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerLine">
      <MemberSignature Language="C#" Value="public double PixelsPerLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PixelsPerLine" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGEventSource.PixelsPerLine" />
      <MemberSignature Language="F#" Value="member this.PixelsPerLine : double with get, set" Usage="CoreGraphics.CGEventSource.PixelsPerLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLocalEventsFilterDuringSupressionState">
      <MemberSignature Language="C#" Value="public void SetLocalEventsFilterDuringSupressionState (CoreGraphics.CGEventFilterMask filter, CoreGraphics.CGEventSuppressionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLocalEventsFilterDuringSupressionState(valuetype CoreGraphics.CGEventFilterMask filter, valuetype CoreGraphics.CGEventSuppressionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGEventSource.SetLocalEventsFilterDuringSupressionState(CoreGraphics.CGEventFilterMask,CoreGraphics.CGEventSuppressionState)" />
      <MemberSignature Language="F#" Value="member this.SetLocalEventsFilterDuringSupressionState : CoreGraphics.CGEventFilterMask * CoreGraphics.CGEventSuppressionState -&gt; unit" Usage="cGEventSource.SetLocalEventsFilterDuringSupressionState (filter, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="CoreGraphics.CGEventFilterMask" />
        <Parameter Name="state" Type="CoreGraphics.CGEventSuppressionState" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateID">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGEventSourceStateID StateID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGEventSourceStateID StateID" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGEventSource.StateID" />
      <MemberSignature Language="F#" Value="member this.StateID : CoreGraphics.CGEventSourceStateID" Usage="CoreGraphics.CGEventSource.StateID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGEventSourceStateID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserData">
      <MemberSignature Language="C#" Value="public long UserData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 UserData" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGEventSource.UserData" />
      <MemberSignature Language="F#" Value="member this.UserData : int64 with get, set" Usage="CoreGraphics.CGEventSource.UserData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
