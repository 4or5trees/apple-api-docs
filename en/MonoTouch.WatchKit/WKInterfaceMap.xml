<Type Name="WKInterfaceMap" FullName="MonoTouch.WatchKit.WKInterfaceMap">
  <TypeSignature Language="C#" Value="public class WKInterfaceMap : WatchKit.WKInterfaceObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WKInterfaceMap extends WatchKit.WKInterfaceObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>WatchKit.WKInterfaceObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("WKInterfaceMap", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Availability(Introduced=ObjCRuntime.Platform.iOS_8_2)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A watch control that displays an Apple-provided map.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WKInterfaceMap (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WKInterfaceMap (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAnnotation">
      <MemberSignature Language="C#" Value="public virtual void AddAnnotation (CoreLocation.CLLocationCoordinate2D location, WatchKit.WKInterfaceMapPinColor pinColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAnnotation(valuetype CoreLocation.CLLocationCoordinate2D location, valuetype WatchKit.WKInterfaceMapPinColor pinColor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("addAnnotation:withPinColor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="CoreLocation.CLLocationCoordinate2D" />
        <Parameter Name="pinColor" Type="WatchKit.WKInterfaceMapPinColor" />
      </Parameters>
      <Docs>
        <param name="location">The location at which to add the annotation.</param>
        <param name="pinColor">The color of the pin for the annotation.</param>
        <summary>Places a pin whose tip is at the specified <paramref name="location"/>.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAnnotation">
      <MemberSignature Language="C#" Value="public virtual void AddAnnotation (CoreLocation.CLLocationCoordinate2D location, string name, CoreGraphics.CGPoint offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAnnotation(valuetype CoreLocation.CLLocationCoordinate2D location, string name, valuetype CoreGraphics.CGPoint offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("addAnnotation:withImageNamed:centerOffset:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="CoreLocation.CLLocationCoordinate2D" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="offset" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="location">The location at which to add the annotation.</param>
        <param name="name">The name of the image to display.</param>
        <param name="offset">The offset, in points, at which to place the center of the image relative to the <paramref name="location"/>.</param>
        <summary>Adds an image at the specified location.</summary>
        <remarks>
          <para>If <paramref name="offset"/> is [0,0], the image is displayed just above and horizontally centered relative to the <paramref name="location"/>.</para>
          <para>The system searches for the file <paramref name="name"/> first in the Watch app's bundle and then on the device-side cache. If the file is not found, a red pin is displayed at the <paramref name="location"/>.</para>

        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAnnotation">
      <MemberSignature Language="C#" Value="public virtual void AddAnnotation (CoreLocation.CLLocationCoordinate2D location, UIKit.UIImage image, CoreGraphics.CGPoint offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAnnotation(valuetype CoreLocation.CLLocationCoordinate2D location, class UIKit.UIImage image, valuetype CoreGraphics.CGPoint offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("addAnnotation:withImage:centerOffset:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="CoreLocation.CLLocationCoordinate2D" />
        <Parameter Name="image" Type="UIKit.UIImage" />
        <Parameter Name="offset" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="location">The location at which to add the annotation.</param>
        <param name="image">The image to display.</param>
        <param name="offset">The offset, in points, at which to place the center of the image relative to the <paramref name="location"/>.</param>
        <summary>Adds an image at the specified location.</summary>
        <remarks>
          <para>If <paramref name="offset"/> is [0,0], the image is displayed just above and horizontally centered relative to the <paramref name="location"/>.</para>
          <para>If <paramref name="image"/> is <see langword="null"/>, a red pin is displayed at the <paramref name="location"/>.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllAnnotations">
      <MemberSignature Language="C#" Value="public virtual void RemoveAllAnnotations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAllAnnotations() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("removeAllAnnotations")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all pins and image annotations from the map.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRegion">
      <MemberSignature Language="C#" Value="public virtual void SetRegion (MapKit.MKCoordinateRegion coordinateRegion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRegion(valuetype MapKit.MKCoordinateRegion coordinateRegion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setRegion:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coordinateRegion" Type="MapKit.MKCoordinateRegion" />
      </Parameters>
      <Docs>
        <param name="coordinateRegion">The area to display.</param>
        <summary>Specifies the area displayed by the map.</summary>
        <remarks>
          <para>If the visible area of the map changes, new tiles may be needed to render. Loading tiles requires the user's connected iPhone to have an active network connection.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVisible">
      <MemberSignature Language="C#" Value="public virtual void SetVisible (MapKit.MKMapRect mapRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVisible(valuetype MapKit.MKMapRect mapRect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setVisibleMapRect:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapRect" Type="MapKit.MKMapRect" />
      </Parameters>
      <Docs>
        <param name="mapRect">The area to display.</param>
        <summary>Specifies the area displayed by the map.</summary>
        <remarks>
           <para>If the visible area of the map changes, new tiles may be needed to render. Loading tiles requires the user's connected iPhone to have an active network connection.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
