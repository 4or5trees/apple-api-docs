<Type Name="WKUserNotificationInterfaceController" FullName="MonoTouch.WatchKit.WKUserNotificationInterfaceController">
  <TypeSignature Language="C#" Value="public class WKUserNotificationInterfaceController : WatchKit.WKInterfaceController" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WKUserNotificationInterfaceController extends WatchKit.WKInterfaceController" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>WatchKit.WKInterfaceController</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("WKUserNotificationInterfaceController", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Availability(Introduced=ObjCRuntime.Platform.iOS_8_2)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A sub-class of <see cref="T:WatchKit.WKInterfaceController" /> that adds methods that are called when a notification arrives.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WKUserNotificationInterfaceController ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WKUserNotificationInterfaceController (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WKUserNotificationInterfaceController (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidReceiveLocalNotification">
      <MemberSignature Language="C#" Value="public virtual void DidReceiveLocalNotification (UIKit.UILocalNotification localNotification, Action&lt;WatchKit.WKUserNotificationInterfaceType&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidReceiveLocalNotification(class UIKit.UILocalNotification localNotification, class System.Action`1&lt;valuetype WatchKit.WKUserNotificationInterfaceType&gt; completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("didReceiveLocalNotification:withCompletion:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localNotification" Type="UIKit.UILocalNotification" />
        <Parameter Name="completionHandler" Type="System.Action&lt;WatchKit.WKUserNotificationInterfaceType&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V46))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="localNotification">The notification.</param>
        <param name="completionHandler">To be called after the app has configured the interface to be displayed.</param>
        <summary>Called when a location notification has been received.</summary>
        <remarks>
          <para>Application developers must call the <paramref name="completionHandler"/> after they have configured the desired notification interface. If the <paramref name="completionHandler"/> is not called, the Watch will display the application's static notification interface.</para>
          
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidReceiveRemoteNotification">
      <MemberSignature Language="C#" Value="public virtual void DidReceiveRemoteNotification (Foundation.NSDictionary remoteNotification, Action&lt;WatchKit.WKUserNotificationInterfaceType&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidReceiveRemoteNotification(class Foundation.NSDictionary remoteNotification, class System.Action`1&lt;valuetype WatchKit.WKUserNotificationInterfaceType&gt; completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("didReceiveRemoteNotification:withCompletion:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteNotification" Type="Foundation.NSDictionary" />
        <Parameter Name="completionHandler" Type="System.Action&lt;WatchKit.WKUserNotificationInterfaceType&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V46))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="remoteNotification">The notification.</param>
        <param name="completionHandler">To be called after the app has configured the interface to be displayed.</param>
        <summary>Called when a remote notification has been received.</summary>
        <remarks><para>Application developers must call the <paramref name="completionHandler"/> after they have configured the desired notification interface. If the <paramref name="completionHandler"/> is not called, the Watch will display the application's static notification interface.</para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
