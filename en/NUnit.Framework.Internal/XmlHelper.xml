<Type Name="XmlHelper" FullName="NUnit.Framework.Internal.XmlHelper">
  <TypeSignature Language="C#" Value="public class XmlHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlHelper extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>0.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            XmlHelper provides static methods for basic XML operations
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public static void AddAttribute (System.Xml.XmlNode node, string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAttribute(class System.Xml.XmlNode node, string name, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">The node to which the attribute should be added.</param>
        <param name="name">The name of the attribute.</param>
        <param name="value">The value of the attribute.</param>
        <summary>
            Adds an attribute with a specified name and value to an existing XmlNode.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddElement">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlNode AddElement (System.Xml.XmlNode node, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlNode AddElement(class System.Xml.XmlNode node, string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">The node to which the element should be added.</param>
        <param name="name">The element name.</param>
        <summary>
            Adds a new element as a child of an existing XmlNode and returns it.
            </summary>
        <returns>The newly created child element</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddElementWithCDataSection">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlNode AddElementWithCDataSection (System.Xml.XmlNode node, string name, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlNode AddElementWithCDataSection(class System.Xml.XmlNode node, string name, string data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">The node to which the element should be added.</param>
        <param name="name">The element name.</param>
        <param name="data">The data for the CDataSection.</param>
        <summary>
            Adds the a new element as a child of an existing node and returns it.
            A CDataSection is added to the new element using the data provided.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTopLevelElement">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlNode CreateTopLevelElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlNode CreateTopLevelElement(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The element name.</param>
        <summary>
            Creates a new top level element node.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatAttributeValue">
      <MemberSignature Language="C#" Value="public static string FormatAttributeValue (string original);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatAttributeValue(string original) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="original">The string to be used</param>
        <summary>
            Makes a string safe for use as an attribute, replacing
            characters characters that can't be used with their
            corresponding xml representations.
            </summary>
        <returns>A new string with the values replaced</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
