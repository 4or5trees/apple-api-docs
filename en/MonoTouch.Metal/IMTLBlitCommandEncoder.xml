<Type Name="IMTLBlitCommandEncoder" FullName="MonoTouch.Metal.IMTLBlitCommandEncoder">
  <TypeSignature Language="C#" Value="public interface IMTLBlitCommandEncoder : IDisposable, MonoTouch.Metal.IMTLCommandEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMTLBlitCommandEncoder implements class MonoTouch.Metal.IMTLCommandEncoder, class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.Metal.IMTLCommandEncoder</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol(Name="MTLBlitCommandEncoder", WrapperType=typeof(MonoTouch.Metal.MTLBlitCommandEncoderWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_8_0)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyFromBuffer">
      <MemberSignature Language="C#" Value="public void CopyFromBuffer (MonoTouch.Metal.IMTLBuffer sourceBuffer, uint sourceOffset, MonoTouch.Metal.IMTLBuffer destinationBuffer, uint destinationOffset, uint size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromBuffer(class MonoTouch.Metal.IMTLBuffer sourceBuffer, unsigned int32 sourceOffset, class MonoTouch.Metal.IMTLBuffer destinationBuffer, unsigned int32 destinationOffset, unsigned int32 size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
        <Parameter Name="sourceOffset" Type="System.UInt32" />
        <Parameter Name="destinationBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
        <Parameter Name="destinationOffset" Type="System.UInt32" />
        <Parameter Name="size" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="sourceBuffer">To be added.</param>
        <param name="sourceOffset">To be added.</param>
        <param name="destinationBuffer">To be added.</param>
        <param name="destinationOffset">To be added.</param>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFromBuffer">
      <MemberSignature Language="C#" Value="public void CopyFromBuffer (MonoTouch.Metal.IMTLBuffer sourceBuffer, uint sourceOffset, uint sourceBytesPerRow, uint sourceBytesPerImage, MonoTouch.Metal.MTLSize sourceSize, MonoTouch.Metal.IMTLTexture destinationTexture, uint destinationSlice, uint destinationLevel, MonoTouch.Metal.MTLOrigin destinationOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromBuffer(class MonoTouch.Metal.IMTLBuffer sourceBuffer, unsigned int32 sourceOffset, unsigned int32 sourceBytesPerRow, unsigned int32 sourceBytesPerImage, valuetype MonoTouch.Metal.MTLSize sourceSize, class MonoTouch.Metal.IMTLTexture destinationTexture, unsigned int32 destinationSlice, unsigned int32 destinationLevel, valuetype MonoTouch.Metal.MTLOrigin destinationOrigin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
        <Parameter Name="sourceOffset" Type="System.UInt32" />
        <Parameter Name="sourceBytesPerRow" Type="System.UInt32" />
        <Parameter Name="sourceBytesPerImage" Type="System.UInt32" />
        <Parameter Name="sourceSize" Type="MonoTouch.Metal.MTLSize" />
        <Parameter Name="destinationTexture" Type="MonoTouch.Metal.IMTLTexture" />
        <Parameter Name="destinationSlice" Type="System.UInt32" />
        <Parameter Name="destinationLevel" Type="System.UInt32" />
        <Parameter Name="destinationOrigin" Type="MonoTouch.Metal.MTLOrigin" />
      </Parameters>
      <Docs>
        <param name="sourceBuffer">To be added.</param>
        <param name="sourceOffset">To be added.</param>
        <param name="sourceBytesPerRow">To be added.</param>
        <param name="sourceBytesPerImage">To be added.</param>
        <param name="sourceSize">To be added.</param>
        <param name="destinationTexture">To be added.</param>
        <param name="destinationSlice">To be added.</param>
        <param name="destinationLevel">To be added.</param>
        <param name="destinationOrigin">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFromTexture">
      <MemberSignature Language="C#" Value="public void CopyFromTexture (MonoTouch.Metal.IMTLTexture sourceTexture, uint sourceSlice, uint sourceLevel, MonoTouch.Metal.MTLOrigin sourceOrigin, MonoTouch.Metal.MTLSize sourceSize, MonoTouch.Metal.IMTLBuffer destinationBuffer, uint destinationOffset, uint destinatinBytesPerRow, uint destinationBytesPerImage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromTexture(class MonoTouch.Metal.IMTLTexture sourceTexture, unsigned int32 sourceSlice, unsigned int32 sourceLevel, valuetype MonoTouch.Metal.MTLOrigin sourceOrigin, valuetype MonoTouch.Metal.MTLSize sourceSize, class MonoTouch.Metal.IMTLBuffer destinationBuffer, unsigned int32 destinationOffset, unsigned int32 destinatinBytesPerRow, unsigned int32 destinationBytesPerImage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceTexture" Type="MonoTouch.Metal.IMTLTexture" />
        <Parameter Name="sourceSlice" Type="System.UInt32" />
        <Parameter Name="sourceLevel" Type="System.UInt32" />
        <Parameter Name="sourceOrigin" Type="MonoTouch.Metal.MTLOrigin" />
        <Parameter Name="sourceSize" Type="MonoTouch.Metal.MTLSize" />
        <Parameter Name="destinationBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
        <Parameter Name="destinationOffset" Type="System.UInt32" />
        <Parameter Name="destinatinBytesPerRow" Type="System.UInt32" />
        <Parameter Name="destinationBytesPerImage" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="sourceTexture">To be added.</param>
        <param name="sourceSlice">To be added.</param>
        <param name="sourceLevel">To be added.</param>
        <param name="sourceOrigin">To be added.</param>
        <param name="sourceSize">To be added.</param>
        <param name="destinationBuffer">To be added.</param>
        <param name="destinationOffset">To be added.</param>
        <param name="destinatinBytesPerRow">To be added.</param>
        <param name="destinationBytesPerImage">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFromTexture">
      <MemberSignature Language="C#" Value="public void CopyFromTexture (MonoTouch.Metal.IMTLTexture sourceTexture, uint sourceSlice, uint sourceLevel, MonoTouch.Metal.MTLOrigin sourceOrigin, MonoTouch.Metal.MTLSize sourceSize, MonoTouch.Metal.IMTLTexture destinationTexture, uint destinationSlice, uint destinationLevel, MonoTouch.Metal.MTLOrigin destinationOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromTexture(class MonoTouch.Metal.IMTLTexture sourceTexture, unsigned int32 sourceSlice, unsigned int32 sourceLevel, valuetype MonoTouch.Metal.MTLOrigin sourceOrigin, valuetype MonoTouch.Metal.MTLSize sourceSize, class MonoTouch.Metal.IMTLTexture destinationTexture, unsigned int32 destinationSlice, unsigned int32 destinationLevel, valuetype MonoTouch.Metal.MTLOrigin destinationOrigin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceTexture" Type="MonoTouch.Metal.IMTLTexture" />
        <Parameter Name="sourceSlice" Type="System.UInt32" />
        <Parameter Name="sourceLevel" Type="System.UInt32" />
        <Parameter Name="sourceOrigin" Type="MonoTouch.Metal.MTLOrigin" />
        <Parameter Name="sourceSize" Type="MonoTouch.Metal.MTLSize" />
        <Parameter Name="destinationTexture" Type="MonoTouch.Metal.IMTLTexture" />
        <Parameter Name="destinationSlice" Type="System.UInt32" />
        <Parameter Name="destinationLevel" Type="System.UInt32" />
        <Parameter Name="destinationOrigin" Type="MonoTouch.Metal.MTLOrigin" />
      </Parameters>
      <Docs>
        <param name="sourceTexture">To be added.</param>
        <param name="sourceSlice">To be added.</param>
        <param name="sourceLevel">To be added.</param>
        <param name="sourceOrigin">To be added.</param>
        <param name="sourceSize">To be added.</param>
        <param name="destinationTexture">To be added.</param>
        <param name="destinationSlice">To be added.</param>
        <param name="destinationLevel">To be added.</param>
        <param name="destinationOrigin">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillBuffer">
      <MemberSignature Language="C#" Value="public void FillBuffer (MonoTouch.Metal.IMTLBuffer buffer, MonoTouch.Foundation.NSRange range, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FillBuffer(class MonoTouch.Metal.IMTLBuffer buffer, valuetype MonoTouch.Foundation.NSRange range, unsigned int8 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("fillBuffer:range:value:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="MonoTouch.Metal.IMTLBuffer" />
        <Parameter Name="range" Type="MonoTouch.Foundation.NSRange" />
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="range">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateMipmapsForTexture">
      <MemberSignature Language="C#" Value="public void GenerateMipmapsForTexture (MonoTouch.Metal.IMTLTexture texture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateMipmapsForTexture(class MonoTouch.Metal.IMTLTexture texture) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("generateMipmapsForTexture:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="MonoTouch.Metal.IMTLTexture" />
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
