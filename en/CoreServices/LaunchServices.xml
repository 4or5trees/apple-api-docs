<Type Name="LaunchServices" FullName="CoreServices.LaunchServices">
  <TypeSignature Language="C#" Value="public static class LaunchServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LaunchServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:CoreServices.LaunchServices" />
  <TypeSignature Language="F#" Value="type LaunchServices = class" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CanUrlAcceptUrl">
      <MemberSignature Language="C#" Value="public static bool CanUrlAcceptUrl (Foundation.NSUrl itemUrl, Foundation.NSUrl targetUrl, CoreServices.LSRoles roles = CoreServices.LSRoles.All, CoreServices.LSAcceptanceFlags acceptanceFlags = CoreServices.LSAcceptanceFlags.Default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanUrlAcceptUrl(class Foundation.NSUrl itemUrl, class Foundation.NSUrl targetUrl, valuetype CoreServices.LSRoles roles, valuetype CoreServices.LSAcceptanceFlags acceptanceFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.LaunchServices.CanUrlAcceptUrl(Foundation.NSUrl,Foundation.NSUrl,CoreServices.LSRoles,CoreServices.LSAcceptanceFlags)" />
      <MemberSignature Language="F#" Value="static member CanUrlAcceptUrl : Foundation.NSUrl * Foundation.NSUrl * CoreServices.LSRoles * CoreServices.LSAcceptanceFlags -&gt; bool" Usage="CoreServices.LaunchServices.CanUrlAcceptUrl (itemUrl, targetUrl, roles, acceptanceFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemUrl" Type="Foundation.NSUrl" />
        <Parameter Name="targetUrl" Type="Foundation.NSUrl" />
        <Parameter Name="roles" Type="CoreServices.LSRoles" />
        <Parameter Name="acceptanceFlags" Type="CoreServices.LSAcceptanceFlags" />
      </Parameters>
      <Docs>
        <param name="itemUrl">To be added.</param>
        <param name="targetUrl">To be added.</param>
        <param name="roles">To be added.</param>
        <param name="acceptanceFlags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUrlAcceptUrl">
      <MemberSignature Language="C#" Value="public static bool CanUrlAcceptUrl (Foundation.NSUrl itemUrl, Foundation.NSUrl targetUrl, CoreServices.LSRoles roles, CoreServices.LSAcceptanceFlags acceptanceFlags, out CoreServices.LSResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanUrlAcceptUrl(class Foundation.NSUrl itemUrl, class Foundation.NSUrl targetUrl, valuetype CoreServices.LSRoles roles, valuetype CoreServices.LSAcceptanceFlags acceptanceFlags, [out] valuetype CoreServices.LSResult&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.LaunchServices.CanUrlAcceptUrl(Foundation.NSUrl,Foundation.NSUrl,CoreServices.LSRoles,CoreServices.LSAcceptanceFlags,CoreServices.LSResult@)" />
      <MemberSignature Language="F#" Value="static member CanUrlAcceptUrl : Foundation.NSUrl * Foundation.NSUrl * CoreServices.LSRoles * CoreServices.LSAcceptanceFlags *  -&gt; bool" Usage="CoreServices.LaunchServices.CanUrlAcceptUrl (itemUrl, targetUrl, roles, acceptanceFlags, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemUrl" Type="Foundation.NSUrl" />
        <Parameter Name="targetUrl" Type="Foundation.NSUrl" />
        <Parameter Name="roles" Type="CoreServices.LSRoles" />
        <Parameter Name="acceptanceFlags" Type="CoreServices.LSAcceptanceFlags" />
        <Parameter Name="result" Type="CoreServices.LSResult" RefType="out" />
      </Parameters>
      <Docs>
        <param name="itemUrl">To be added.</param>
        <param name="targetUrl">To be added.</param>
        <param name="roles">To be added.</param>
        <param name="acceptanceFlags">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllHandlersForUrlScheme">
      <MemberSignature Language="C#" Value="public static string[] GetAllHandlersForUrlScheme (string urlScheme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetAllHandlersForUrlScheme(string urlScheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.LaunchServices.GetAllHandlersForUrlScheme(System.String)" />
      <MemberSignature Language="F#" Value="static member GetAllHandlersForUrlScheme : string -&gt; string[]" Usage="CoreServices.LaunchServices.GetAllHandlersForUrlScheme urlScheme" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlScheme" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlScheme">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoleHandlersForContentType">
      <MemberSignature Language="C#" Value="public static string[] GetAllRoleHandlersForContentType (string contentType, CoreServices.LSRoles roles = CoreServices.LSRoles.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetAllRoleHandlersForContentType(string contentType, valuetype CoreServices.LSRoles roles) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.LaunchServices.GetAllRoleHandlersForContentType(System.String,CoreServices.LSRoles)" />
      <MemberSignature Language="F#" Value="static member GetAllRoleHandlersForContentType : string * CoreServices.LSRoles -&gt; string[]" Usage="CoreServices.LaunchServices.GetAllRoleHandlersForContentType (contentType, roles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="roles" Type="CoreServices.LSRoles" />
      </Parameters>
      <Docs>
        <param name="contentType">To be added.</param>
        <param name="roles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationUrlsForBundleIdentifier">
      <MemberSignature Language="C#" Value="public static Foundation.NSUrl[] GetApplicationUrlsForBundleIdentifier (string bundleIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSUrl[] GetApplicationUrlsForBundleIdentifier(string bundleIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.LaunchServices.GetApplicationUrlsForBundleIdentifier(System.String)" />
      <MemberSignature Language="F#" Value="static member GetApplicationUrlsForBundleIdentifier : string -&gt; Foundation.NSUrl[]" Usage="CoreServices.LaunchServices.GetApplicationUrlsForBundleIdentifier bundleIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrl[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bundleIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bundleIdentifier">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationUrlsForUrl">
      <MemberSignature Language="C#" Value="public static Foundation.NSUrl[] GetApplicationUrlsForUrl (Foundation.NSUrl url, CoreServices.LSRoles roles = CoreServices.LSRoles.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSUrl[] GetApplicationUrlsForUrl(class Foundation.NSUrl url, valuetype CoreServices.LSRoles roles) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.LaunchServices.GetApplicationUrlsForUrl(Foundation.NSUrl,CoreServices.LSRoles)" />
      <MemberSignature Language="F#" Value="static member GetApplicationUrlsForUrl : Foundation.NSUrl * CoreServices.LSRoles -&gt; Foundation.NSUrl[]" Usage="CoreServices.LaunchServices.GetApplicationUrlsForUrl (url, roles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrl[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="roles" Type="CoreServices.LSRoles" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="roles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultApplicationUrlForContentType">
      <MemberSignature Language="C#" Value="public static Foundation.NSUrl GetDefaultApplicationUrlForContentType (string contentType, CoreServices.LSRoles roles = CoreServices.LSRoles.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSUrl GetDefaultApplicationUrlForContentType(string contentType, valuetype CoreServices.LSRoles roles) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.LaunchServices.GetDefaultApplicationUrlForContentType(System.String,CoreServices.LSRoles)" />
      <MemberSignature Language="F#" Value="static member GetDefaultApplicationUrlForContentType : string * CoreServices.LSRoles -&gt; Foundation.NSUrl" Usage="CoreServices.LaunchServices.GetDefaultApplicationUrlForContentType (contentType, roles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="roles" Type="CoreServices.LSRoles" />
      </Parameters>
      <Docs>
        <param name="contentType">To be added.</param>
        <param name="roles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultApplicationUrlForUrl">
      <MemberSignature Language="C#" Value="public static Foundation.NSUrl GetDefaultApplicationUrlForUrl (Foundation.NSUrl url, CoreServices.LSRoles roles = CoreServices.LSRoles.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSUrl GetDefaultApplicationUrlForUrl(class Foundation.NSUrl url, valuetype CoreServices.LSRoles roles) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.LaunchServices.GetDefaultApplicationUrlForUrl(Foundation.NSUrl,CoreServices.LSRoles)" />
      <MemberSignature Language="F#" Value="static member GetDefaultApplicationUrlForUrl : Foundation.NSUrl * CoreServices.LSRoles -&gt; Foundation.NSUrl" Usage="CoreServices.LaunchServices.GetDefaultApplicationUrlForUrl (url, roles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="roles" Type="CoreServices.LSRoles" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="roles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultHandlerForUrlScheme">
      <MemberSignature Language="C#" Value="public static string GetDefaultHandlerForUrlScheme (string urlScheme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultHandlerForUrlScheme(string urlScheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.LaunchServices.GetDefaultHandlerForUrlScheme(System.String)" />
      <MemberSignature Language="F#" Value="static member GetDefaultHandlerForUrlScheme : string -&gt; string" Usage="CoreServices.LaunchServices.GetDefaultHandlerForUrlScheme urlScheme" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlScheme" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlScheme">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultRoleHandlerForContentType">
      <MemberSignature Language="C#" Value="public static string GetDefaultRoleHandlerForContentType (string contentType, CoreServices.LSRoles roles = CoreServices.LSRoles.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultRoleHandlerForContentType(string contentType, valuetype CoreServices.LSRoles roles) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.LaunchServices.GetDefaultRoleHandlerForContentType(System.String,CoreServices.LSRoles)" />
      <MemberSignature Language="F#" Value="static member GetDefaultRoleHandlerForContentType : string * CoreServices.LSRoles -&gt; string" Usage="CoreServices.LaunchServices.GetDefaultRoleHandlerForContentType (contentType, roles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="roles" Type="CoreServices.LSRoles" />
      </Parameters>
      <Docs>
        <param name="contentType">To be added.</param>
        <param name="roles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static CoreServices.LSResult Open (Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreServices.LSResult Open(class Foundation.NSUrl url) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.LaunchServices.Open(Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="static member Open : Foundation.NSUrl -&gt; CoreServices.LSResult" Usage="CoreServices.LaunchServices.Open url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreServices.LSResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static CoreServices.LSResult Open (Foundation.NSUrl url, out Foundation.NSUrl launchedUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreServices.LSResult Open(class Foundation.NSUrl url, [out] class Foundation.NSUrl&amp; launchedUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.LaunchServices.Open(Foundation.NSUrl,Foundation.NSUrl@)" />
      <MemberSignature Language="F#" Value="static member Open : Foundation.NSUrl *  -&gt; CoreServices.LSResult" Usage="CoreServices.LaunchServices.Open (url, launchedUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreServices.LSResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="launchedUrl" Type="Foundation.NSUrl" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="launchedUrl">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static CoreServices.LSResult Register (Foundation.NSUrl url, bool update);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreServices.LSResult Register(class Foundation.NSUrl url, bool update) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.LaunchServices.Register(Foundation.NSUrl,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member Register : Foundation.NSUrl * bool -&gt; CoreServices.LSResult" Usage="CoreServices.LaunchServices.Register (url, update)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreServices.LSResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="update" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="update">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultHandlerForUrlScheme">
      <MemberSignature Language="C#" Value="public static CoreServices.LSResult SetDefaultHandlerForUrlScheme (string urlScheme, string handlerBundleId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreServices.LSResult SetDefaultHandlerForUrlScheme(string urlScheme, string handlerBundleId) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.LaunchServices.SetDefaultHandlerForUrlScheme(System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member SetDefaultHandlerForUrlScheme : string * string -&gt; CoreServices.LSResult" Usage="CoreServices.LaunchServices.SetDefaultHandlerForUrlScheme (urlScheme, handlerBundleId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreServices.LSResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlScheme" Type="System.String" />
        <Parameter Name="handlerBundleId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlScheme">To be added.</param>
        <param name="handlerBundleId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultRoleHandlerForContentType">
      <MemberSignature Language="C#" Value="public static CoreServices.LSResult SetDefaultRoleHandlerForContentType (string contentType, string handlerBundleId, CoreServices.LSRoles roles = CoreServices.LSRoles.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreServices.LSResult SetDefaultRoleHandlerForContentType(string contentType, string handlerBundleId, valuetype CoreServices.LSRoles roles) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.LaunchServices.SetDefaultRoleHandlerForContentType(System.String,System.String,CoreServices.LSRoles)" />
      <MemberSignature Language="F#" Value="static member SetDefaultRoleHandlerForContentType : string * string * CoreServices.LSRoles -&gt; CoreServices.LSResult" Usage="CoreServices.LaunchServices.SetDefaultRoleHandlerForContentType (contentType, handlerBundleId, roles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreServices.LSResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="handlerBundleId" Type="System.String" />
        <Parameter Name="roles" Type="CoreServices.LSRoles" />
      </Parameters>
      <Docs>
        <param name="contentType">To be added.</param>
        <param name="handlerBundleId">To be added.</param>
        <param name="roles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
