<Type Name="IMDLMeshBufferAllocator" FullName="MonoTouch.ModelIO.IMDLMeshBufferAllocator">
  <TypeSignature Language="C#" Value="public interface IMDLMeshBufferAllocator : IDisposable, MonoTouch.ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMDLMeshBufferAllocator implements class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol(Name="MDLMeshBufferAllocator", WrapperType=typeof(MonoTouch.ModelIO.MDLMeshBufferAllocatorWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_9_0)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.Mac_10_11)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Interface representing the required methods (if any) of the protocol <see cref="T:MonoTouch.ModelIO.MDLMeshBufferAllocator" />.</para>
    </summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:MonoTouch.ModelIO.MDLMeshBufferAllocator" />.</para>
      <para>If you create objects that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:MonoTouch.ModelIO.MDLMeshBufferAllocator" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:MonoTouch.ModelIO.MDLMeshBufferAllocator_Extensions" /> class as extension methods to the interface, allowing you to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="NewBuffer">
      <MemberSignature Language="C#" Value="public MonoTouch.ModelIO.IMDLMeshBuffer NewBuffer (uint length, MonoTouch.ModelIO.MDLMeshBufferType type);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.ModelIO.IMDLMeshBuffer NewBuffer(unsigned int32 length, valuetype MonoTouch.ModelIO.MDLMeshBufferType type) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public MonoTouch.ModelIO.IMDLMeshBuffer NewBuffer (nuint length, MonoTouch.ModelIO.MDLMeshBufferType type);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.ModelIO.IMDLMeshBuffer NewBuffer(valuetype System.nuint length, valuetype MonoTouch.ModelIO.MDLMeshBufferType type) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("newBuffer:type:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.ModelIO.IMDLMeshBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="type" Type="MonoTouch.ModelIO.MDLMeshBufferType" />
        <Parameter Name="length" Type="System.nuint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewBufferFromZone">
      <MemberSignature Language="C#" Value="public MonoTouch.ModelIO.IMDLMeshBuffer NewBufferFromZone (MonoTouch.ModelIO.IMDLMeshBufferZone zone, MonoTouch.Foundation.NSData data, MonoTouch.ModelIO.MDLMeshBufferType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.ModelIO.IMDLMeshBuffer NewBufferFromZone(class MonoTouch.ModelIO.IMDLMeshBufferZone zone, class MonoTouch.Foundation.NSData data, valuetype MonoTouch.ModelIO.MDLMeshBufferType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("newBufferFromZone:data:type:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.ModelIO.IMDLMeshBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="MonoTouch.ModelIO.IMDLMeshBufferZone" />
        <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
        <Parameter Name="type" Type="MonoTouch.ModelIO.MDLMeshBufferType" />
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <param name="data">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewBufferFromZone">
      <MemberSignature Language="C#" Value="public MonoTouch.ModelIO.IMDLMeshBuffer NewBufferFromZone (MonoTouch.ModelIO.IMDLMeshBufferZone zone, uint length, MonoTouch.ModelIO.MDLMeshBufferType type);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.ModelIO.IMDLMeshBuffer NewBufferFromZone(class MonoTouch.ModelIO.IMDLMeshBufferZone zone, unsigned int32 length, valuetype MonoTouch.ModelIO.MDLMeshBufferType type) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public MonoTouch.ModelIO.IMDLMeshBuffer NewBufferFromZone (MonoTouch.ModelIO.IMDLMeshBufferZone zone, nuint length, MonoTouch.ModelIO.MDLMeshBufferType type);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.ModelIO.IMDLMeshBuffer NewBufferFromZone(class MonoTouch.ModelIO.IMDLMeshBufferZone zone, valuetype System.nuint length, valuetype MonoTouch.ModelIO.MDLMeshBufferType type) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("newBufferFromZone:length:type:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.ModelIO.IMDLMeshBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="MonoTouch.ModelIO.IMDLMeshBufferZone" />
        <Parameter Name="length" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="type" Type="MonoTouch.ModelIO.MDLMeshBufferType" />
        <Parameter Name="length" Type="System.nuint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <param name="length">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewBufferWithData">
      <MemberSignature Language="C#" Value="public MonoTouch.ModelIO.IMDLMeshBuffer NewBufferWithData (MonoTouch.Foundation.NSData data, MonoTouch.ModelIO.MDLMeshBufferType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.ModelIO.IMDLMeshBuffer NewBufferWithData(class MonoTouch.Foundation.NSData data, valuetype MonoTouch.ModelIO.MDLMeshBufferType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("newBufferWithData:type:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.ModelIO.IMDLMeshBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
        <Parameter Name="type" Type="MonoTouch.ModelIO.MDLMeshBufferType" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewZone">
      <MemberSignature Language="C#" Value="public MonoTouch.ModelIO.IMDLMeshBufferZone NewZone (uint capacity);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.ModelIO.IMDLMeshBufferZone NewZone(unsigned int32 capacity) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public MonoTouch.ModelIO.IMDLMeshBufferZone NewZone (nuint capacity);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.ModelIO.IMDLMeshBufferZone NewZone(valuetype System.nuint capacity) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("newZone:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.ModelIO.IMDLMeshBufferZone</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capacity" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="capacity" Type="System.nuint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="capacity">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
