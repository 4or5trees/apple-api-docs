<Type Name="INSTextViewDelegate" FullName="AppKit.INSTextViewDelegate">
  <TypeSignature Language="C#" Value="public interface INSTextViewDelegate : AppKit.INSTextDelegate, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INSTextViewDelegate implements class AppKit.INSTextDelegate, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AppKit.INSTextViewDelegate" />
  <TypeSignature Language="F#" Value="type INSTextViewDelegate = interface&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSTextDelegate" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>AppKit.INSTextDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="NSTextViewDelegate", WrapperType=typeof(AppKit.NSTextViewDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="LinkClicked", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(Foundation.NSObject), typeof(System.nuint) }, ReturnType=typeof(System.Boolean), Selector="textView:clickedOnLink:atIndex:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="CellClicked", ParameterByRef=new System.Boolean[] { false, false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(AppKit.NSTextAttachmentCell), typeof(CoreGraphics.CGRect), typeof(System.nuint) }, Selector="textView:clickedOnCell:inRect:atIndex:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="CellDoubleClicked", ParameterByRef=new System.Boolean[] { false, false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(AppKit.NSTextAttachmentCell), typeof(CoreGraphics.CGRect), typeof(System.nuint) }, Selector="textView:doubleClickedOnCell:inRect:atIndex:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetWritablePasteboardTypes", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(AppKit.NSTextAttachmentCell), typeof(System.nuint) }, ReturnType=typeof(System.String[]), Selector="textView:writablePasteboardTypesForCell:atIndex:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WriteCell", ParameterByRef=new System.Boolean[] { false, false, false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(AppKit.NSTextAttachmentCell), typeof(System.nuint), typeof(AppKit.NSPasteboard), typeof(System.String) }, ReturnType=typeof(System.Boolean), Selector="textView:writeCell:atIndex:toPasteboard:type:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WillChangeSelection", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(Foundation.NSRange), typeof(Foundation.NSRange) }, ReturnType=typeof(Foundation.NSRange), Selector="textView:willChangeSelectionFromCharacterRange:toCharacterRange:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WillChangeSelectionFromRanges", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(Foundation.NSValue[]), typeof(Foundation.NSValue[]) }, ReturnType=typeof(Foundation.NSValue[]), Selector="textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldChangeTextInRanges", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(Foundation.NSValue[]), typeof(System.String[]) }, ReturnType=typeof(System.Boolean), Selector="textView:shouldChangeTextInRanges:replacementStrings:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldChangeTypingAttributes", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(Foundation.NSDictionary), typeof(Foundation.NSDictionary) }, ReturnType=typeof(Foundation.NSDictionary), Selector="textView:shouldChangeTypingAttributes:toAttributes:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidChangeSelection", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSNotification) }, Selector="textViewDidChangeSelection:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidChangeTypingAttributes", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSNotification) }, Selector="textViewDidChangeTypingAttributes:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WillDisplayToolTip", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(System.String), typeof(System.nuint) }, ReturnType=typeof(System.String), Selector="textView:willDisplayToolTip:forCharacterAtIndex:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetCompletions", ParameterByRef=new System.Boolean[] { false, false, false, true }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(System.String[]), typeof(Foundation.NSRange), typeof(System.nint) }, ReturnType=typeof(System.String[]), Selector="textView:completions:forPartialWordRange:indexOfSelectedItem:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldChangeTextInRange", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(Foundation.NSRange), typeof(System.String) }, ReturnType=typeof(System.Boolean), Selector="textView:shouldChangeTextInRange:replacementString:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DoCommandBySelector", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(ObjCRuntime.Selector) }, ReturnType=typeof(System.Boolean), Selector="textView:doCommandBySelector:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldSetSpellingState", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(System.nint), typeof(Foundation.NSRange) }, ReturnType=typeof(System.nint), Selector="textView:shouldSetSpellingState:range:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="MenuForEvent", ParameterByRef=new System.Boolean[] { false, false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(AppKit.NSMenu), typeof(AppKit.NSEvent), typeof(System.nuint) }, ReturnType=typeof(AppKit.NSMenu), Selector="textView:menu:forEvent:atIndex:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WillCheckText", ParameterByRef=new System.Boolean[] { false, false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(Foundation.NSRange), typeof(Foundation.NSDictionary), typeof(Foundation.NSTextCheckingTypes) }, ReturnType=typeof(Foundation.NSDictionary), Selector="textView:willCheckTextInRange:options:types:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidCheckText", ParameterByRef=new System.Boolean[] { false, false, false, false, false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(Foundation.NSRange), typeof(Foundation.NSTextCheckingTypes), typeof(Foundation.NSDictionary), typeof(Foundation.NSTextCheckingResult[]), typeof(Foundation.NSOrthography), typeof(System.nint) }, ReturnType=typeof(Foundation.NSTextCheckingResult[]), Selector="textView:didCheckTextInRange:types:options:results:orthography:wordCount:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DraggedCell", ParameterByRef=new System.Boolean[] { false, false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(AppKit.NSTextAttachmentCell), typeof(CoreGraphics.CGRect), typeof(AppKit.NSEvent) }, Selector="textView:draggedCell:inRect:event:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetUndoManager", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView) }, ReturnType=typeof(Foundation.NSUndoManager), Selector="undoManagerForTextView:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldUpdateTouchBarItemIdentifiers", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(System.String[]) }, ReturnType=typeof(System.String[]), Selector="textView:shouldUpdateTouchBarItemIdentifiers:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetCandidates", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(Foundation.NSRange) }, ReturnType=typeof(Foundation.NSObject[]), Selector="textView:candidatesForSelectedRange:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetTextCheckingCandidates", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(Foundation.NSTextCheckingResult[]), typeof(Foundation.NSRange) }, ReturnType=typeof(Foundation.NSTextCheckingResult[]), Selector="textView:candidates:forSelectedRange:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldSelectCandidates", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSTextView), typeof(System.nuint) }, ReturnType=typeof(System.Boolean), Selector="textView:shouldSelectCandidateAtIndex:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>
