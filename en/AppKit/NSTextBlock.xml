<Type Name="NSTextBlock" FullName="AppKit.NSTextBlock">
  <TypeSignature Language="C#" Value="public class NSTextBlock : Foundation.NSObject, Foundation.INSCoding, Foundation.INSCopying, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSTextBlock extends Foundation.NSObject implements class Foundation.INSCoding, class Foundation.INSCopying, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AppKit.NSTextBlock" />
  <TypeSignature Language="F#" Value="type NSTextBlock = class&#xA;    inherit NSObject&#xA;    interface INSCoding&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSCopying" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("NSTextBlock", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextBlock (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextBlock : Foundation.NSCoder -&gt; AppKit.NSTextBlock" Usage="new AppKit.NSTextBlock coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSTextBlock (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextBlock : Foundation.NSObjectFlag -&gt; AppKit.NSTextBlock" Usage="new AppKit.NSTextBlock t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSTextBlock (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextBlock : nativeint -&gt; AppKit.NSTextBlock" Usage="new AppKit.NSTextBlock handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSColor BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSColor BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextBlock.BackgroundColor" />
      <MemberSignature Language="F#" Value="member this.BackgroundColor : AppKit.NSColor with get, set" Usage="AppKit.NSTextBlock.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("backgroundColor", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setBackgroundColor:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextBlock.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AppKit.NSTextBlock.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentWidth">
      <MemberSignature Language="C#" Value="public virtual nfloat ContentWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ContentWidth" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextBlock.ContentWidth" />
      <MemberSignature Language="F#" Value="member this.ContentWidth : nfloat" Usage="AppKit.NSTextBlock.ContentWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("contentWidth")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentWidthValueType">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSTextBlockValueType ContentWidthValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AppKit.NSTextBlockValueType ContentWidthValueType" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextBlock.ContentWidthValueType" />
      <MemberSignature Language="F#" Value="member this.ContentWidthValueType : AppKit.NSTextBlockValueType" Usage="AppKit.NSTextBlock.ContentWidthValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("contentWidthValueType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSTextBlockValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject Copy (Foundation.NSZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject Copy(class Foundation.NSZone zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.Copy(Foundation.NSZone)" />
      <MemberSignature Language="F#" Value="override this.Copy : Foundation.NSZone -&gt; Foundation.NSObject" Usage="nSTextBlock.Copy zone" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCopying.Copy(Foundation.NSZone)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyWithZone:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public virtual void DrawBackground (CoreGraphics.CGRect frameRect, AppKit.NSView controlView, Foundation.NSRange charRange, AppKit.NSLayoutManager layoutManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawBackground(valuetype CoreGraphics.CGRect frameRect, class AppKit.NSView controlView, valuetype Foundation.NSRange charRange, class AppKit.NSLayoutManager layoutManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.DrawBackground(CoreGraphics.CGRect,AppKit.NSView,Foundation.NSRange,AppKit.NSLayoutManager)" />
      <MemberSignature Language="F#" Value="abstract member DrawBackground : CoreGraphics.CGRect * AppKit.NSView * Foundation.NSRange * AppKit.NSLayoutManager -&gt; unit&#xA;override this.DrawBackground : CoreGraphics.CGRect * AppKit.NSView * Foundation.NSRange * AppKit.NSLayoutManager -&gt; unit" Usage="nSTextBlock.DrawBackground (frameRect, controlView, charRange, layoutManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawBackgroundWithFrame:inView:characterRange:layoutManager:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frameRect" Type="CoreGraphics.CGRect" />
        <Parameter Name="controlView" Type="AppKit.NSView" />
        <Parameter Name="charRange" Type="Foundation.NSRange" />
        <Parameter Name="layoutManager" Type="AppKit.NSLayoutManager" />
      </Parameters>
      <Docs>
        <param name="frameRect">To be added.</param>
        <param name="controlView">To be added.</param>
        <param name="charRange">To be added.</param>
        <param name="layoutManager">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeTo">
      <MemberSignature Language="C#" Value="public virtual void EncodeTo (Foundation.NSCoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeTo(class Foundation.NSCoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.EncodeTo(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member EncodeTo : Foundation.NSCoder -&gt; unit&#xA;override this.EncodeTo : Foundation.NSCoder -&gt; unit" Usage="nSTextBlock.EncodeTo encoder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCoding.EncodeTo(Foundation.NSCoder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="encoder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBorderColor">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSColor GetBorderColor (AppKit.NSRectEdge edge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSColor GetBorderColor(valuetype AppKit.NSRectEdge edge) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.GetBorderColor(AppKit.NSRectEdge)" />
      <MemberSignature Language="F#" Value="abstract member GetBorderColor : AppKit.NSRectEdge -&gt; AppKit.NSColor&#xA;override this.GetBorderColor : AppKit.NSRectEdge -&gt; AppKit.NSColor" Usage="nSTextBlock.GetBorderColor edge" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("borderColorForEdge:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSColor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edge" Type="AppKit.NSRectEdge" />
      </Parameters>
      <Docs>
        <param name="edge">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoundsRect">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect GetBoundsRect (CoreGraphics.CGRect contentRect, CoreGraphics.CGRect rect, AppKit.NSTextContainer textContainer, Foundation.NSRange charRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGRect GetBoundsRect(valuetype CoreGraphics.CGRect contentRect, valuetype CoreGraphics.CGRect rect, class AppKit.NSTextContainer textContainer, valuetype Foundation.NSRange charRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.GetBoundsRect(CoreGraphics.CGRect,CoreGraphics.CGRect,AppKit.NSTextContainer,Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member GetBoundsRect : CoreGraphics.CGRect * CoreGraphics.CGRect * AppKit.NSTextContainer * Foundation.NSRange -&gt; CoreGraphics.CGRect&#xA;override this.GetBoundsRect : CoreGraphics.CGRect * CoreGraphics.CGRect * AppKit.NSTextContainer * Foundation.NSRange -&gt; CoreGraphics.CGRect" Usage="nSTextBlock.GetBoundsRect (contentRect, rect, textContainer, charRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("boundsRectForContentRect:inRect:textContainer:characterRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentRect" Type="CoreGraphics.CGRect" />
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
        <Parameter Name="textContainer" Type="AppKit.NSTextContainer" />
        <Parameter Name="charRange" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="contentRect">To be added.</param>
        <param name="rect">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="charRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRectForLayout">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect GetRectForLayout (CoreGraphics.CGPoint startingPoint, CoreGraphics.CGRect rect, AppKit.NSTextContainer textContainer, Foundation.NSRange charRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGRect GetRectForLayout(valuetype CoreGraphics.CGPoint startingPoint, valuetype CoreGraphics.CGRect rect, class AppKit.NSTextContainer textContainer, valuetype Foundation.NSRange charRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.GetRectForLayout(CoreGraphics.CGPoint,CoreGraphics.CGRect,AppKit.NSTextContainer,Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member GetRectForLayout : CoreGraphics.CGPoint * CoreGraphics.CGRect * AppKit.NSTextContainer * Foundation.NSRange -&gt; CoreGraphics.CGRect&#xA;override this.GetRectForLayout : CoreGraphics.CGPoint * CoreGraphics.CGRect * AppKit.NSTextContainer * Foundation.NSRange -&gt; CoreGraphics.CGRect" Usage="nSTextBlock.GetRectForLayout (startingPoint, rect, textContainer, charRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rectForLayoutAtPoint:inRect:textContainer:characterRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingPoint" Type="CoreGraphics.CGPoint" />
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
        <Parameter Name="textContainer" Type="AppKit.NSTextContainer" />
        <Parameter Name="charRange" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="startingPoint">To be added.</param>
        <param name="rect">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="charRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual nfloat GetValue (AppKit.NSTextBlockDimension dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat GetValue(valuetype AppKit.NSTextBlockDimension dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.GetValue(AppKit.NSTextBlockDimension)" />
      <MemberSignature Language="F#" Value="abstract member GetValue : AppKit.NSTextBlockDimension -&gt; nfloat&#xA;override this.GetValue : AppKit.NSTextBlockDimension -&gt; nfloat" Usage="nSTextBlock.GetValue dimension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("valueForDimension:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="AppKit.NSTextBlockDimension" />
      </Parameters>
      <Docs>
        <param name="dimension">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueType">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSTextBlockValueType GetValueType (AppKit.NSTextBlockDimension dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype AppKit.NSTextBlockValueType GetValueType(valuetype AppKit.NSTextBlockDimension dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.GetValueType(AppKit.NSTextBlockDimension)" />
      <MemberSignature Language="F#" Value="abstract member GetValueType : AppKit.NSTextBlockDimension -&gt; AppKit.NSTextBlockValueType&#xA;override this.GetValueType : AppKit.NSTextBlockDimension -&gt; AppKit.NSTextBlockValueType" Usage="nSTextBlock.GetValueType dimension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("valueTypeForDimension:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSTextBlockValueType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="AppKit.NSTextBlockDimension" />
      </Parameters>
      <Docs>
        <param name="dimension">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWidth">
      <MemberSignature Language="C#" Value="public virtual nfloat GetWidth (AppKit.NSTextBlockLayer layer, AppKit.NSRectEdge edge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat GetWidth(valuetype AppKit.NSTextBlockLayer layer, valuetype AppKit.NSRectEdge edge) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.GetWidth(AppKit.NSTextBlockLayer,AppKit.NSRectEdge)" />
      <MemberSignature Language="F#" Value="abstract member GetWidth : AppKit.NSTextBlockLayer * AppKit.NSRectEdge -&gt; nfloat&#xA;override this.GetWidth : AppKit.NSTextBlockLayer * AppKit.NSRectEdge -&gt; nfloat" Usage="nSTextBlock.GetWidth (layer, edge)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("widthForLayer:edge:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layer" Type="AppKit.NSTextBlockLayer" />
        <Parameter Name="edge" Type="AppKit.NSRectEdge" />
      </Parameters>
      <Docs>
        <param name="layer">To be added.</param>
        <param name="edge">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBorderColor">
      <MemberSignature Language="C#" Value="public virtual void SetBorderColor (AppKit.NSColor color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBorderColor(class AppKit.NSColor color) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.SetBorderColor(AppKit.NSColor)" />
      <MemberSignature Language="F#" Value="abstract member SetBorderColor : AppKit.NSColor -&gt; unit&#xA;override this.SetBorderColor : AppKit.NSColor -&gt; unit" Usage="nSTextBlock.SetBorderColor color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setBorderColor:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="AppKit.NSColor" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBorderColor">
      <MemberSignature Language="C#" Value="public virtual void SetBorderColor (AppKit.NSColor color, AppKit.NSRectEdge edge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBorderColor(class AppKit.NSColor color, valuetype AppKit.NSRectEdge edge) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.SetBorderColor(AppKit.NSColor,AppKit.NSRectEdge)" />
      <MemberSignature Language="F#" Value="abstract member SetBorderColor : AppKit.NSColor * AppKit.NSRectEdge -&gt; unit&#xA;override this.SetBorderColor : AppKit.NSColor * AppKit.NSRectEdge -&gt; unit" Usage="nSTextBlock.SetBorderColor (color, edge)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setBorderColor:forEdge:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="AppKit.NSColor" />
        <Parameter Name="edge" Type="AppKit.NSRectEdge" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <param name="edge">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContentWidth">
      <MemberSignature Language="C#" Value="public virtual void SetContentWidth (nfloat val, AppKit.NSTextBlockValueType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContentWidth(valuetype System.nfloat val, valuetype AppKit.NSTextBlockValueType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.SetContentWidth(System.nfloat,AppKit.NSTextBlockValueType)" />
      <MemberSignature Language="F#" Value="abstract member SetContentWidth : nfloat * AppKit.NSTextBlockValueType -&gt; unit&#xA;override this.SetContentWidth : nfloat * AppKit.NSTextBlockValueType -&gt; unit" Usage="nSTextBlock.SetContentWidth (val, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setContentWidth:type:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="System.nfloat" />
        <Parameter Name="type" Type="AppKit.NSTextBlockValueType" />
      </Parameters>
      <Docs>
        <param name="val">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (nfloat val, AppKit.NSTextBlockValueType type, AppKit.NSTextBlockDimension dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(valuetype System.nfloat val, valuetype AppKit.NSTextBlockValueType type, valuetype AppKit.NSTextBlockDimension dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.SetValue(System.nfloat,AppKit.NSTextBlockValueType,AppKit.NSTextBlockDimension)" />
      <MemberSignature Language="F#" Value="abstract member SetValue : nfloat * AppKit.NSTextBlockValueType * AppKit.NSTextBlockDimension -&gt; unit&#xA;override this.SetValue : nfloat * AppKit.NSTextBlockValueType * AppKit.NSTextBlockDimension -&gt; unit" Usage="nSTextBlock.SetValue (val, type, dimension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setValue:type:forDimension:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="System.nfloat" />
        <Parameter Name="type" Type="AppKit.NSTextBlockValueType" />
        <Parameter Name="dimension" Type="AppKit.NSTextBlockDimension" />
      </Parameters>
      <Docs>
        <param name="val">To be added.</param>
        <param name="type">To be added.</param>
        <param name="dimension">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWidth">
      <MemberSignature Language="C#" Value="public virtual void SetWidth (nfloat val, AppKit.NSTextBlockValueType type, AppKit.NSTextBlockLayer layer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWidth(valuetype System.nfloat val, valuetype AppKit.NSTextBlockValueType type, valuetype AppKit.NSTextBlockLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.SetWidth(System.nfloat,AppKit.NSTextBlockValueType,AppKit.NSTextBlockLayer)" />
      <MemberSignature Language="F#" Value="abstract member SetWidth : nfloat * AppKit.NSTextBlockValueType * AppKit.NSTextBlockLayer -&gt; unit&#xA;override this.SetWidth : nfloat * AppKit.NSTextBlockValueType * AppKit.NSTextBlockLayer -&gt; unit" Usage="nSTextBlock.SetWidth (val, type, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setWidth:type:forLayer:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="System.nfloat" />
        <Parameter Name="type" Type="AppKit.NSTextBlockValueType" />
        <Parameter Name="layer" Type="AppKit.NSTextBlockLayer" />
      </Parameters>
      <Docs>
        <param name="val">To be added.</param>
        <param name="type">To be added.</param>
        <param name="layer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWidth">
      <MemberSignature Language="C#" Value="public virtual void SetWidth (nfloat val, AppKit.NSTextBlockValueType type, AppKit.NSTextBlockLayer layer, AppKit.NSRectEdge edge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWidth(valuetype System.nfloat val, valuetype AppKit.NSTextBlockValueType type, valuetype AppKit.NSTextBlockLayer layer, valuetype AppKit.NSRectEdge edge) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.SetWidth(System.nfloat,AppKit.NSTextBlockValueType,AppKit.NSTextBlockLayer,AppKit.NSRectEdge)" />
      <MemberSignature Language="F#" Value="abstract member SetWidth : nfloat * AppKit.NSTextBlockValueType * AppKit.NSTextBlockLayer * AppKit.NSRectEdge -&gt; unit&#xA;override this.SetWidth : nfloat * AppKit.NSTextBlockValueType * AppKit.NSTextBlockLayer * AppKit.NSRectEdge -&gt; unit" Usage="nSTextBlock.SetWidth (val, type, layer, edge)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setWidth:type:forLayer:edge:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="System.nfloat" />
        <Parameter Name="type" Type="AppKit.NSTextBlockValueType" />
        <Parameter Name="layer" Type="AppKit.NSTextBlockLayer" />
        <Parameter Name="edge" Type="AppKit.NSRectEdge" />
      </Parameters>
      <Docs>
        <param name="val">To be added.</param>
        <param name="type">To be added.</param>
        <param name="layer">To be added.</param>
        <param name="edge">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSTextBlockVerticalAlignment VerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AppKit.NSTextBlockVerticalAlignment VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextBlock.VerticalAlignment" />
      <MemberSignature Language="F#" Value="member this.VerticalAlignment : AppKit.NSTextBlockVerticalAlignment with get, set" Usage="AppKit.NSTextBlock.VerticalAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("verticalAlignment")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setVerticalAlignment:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSTextBlockVerticalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthValueTypeForLayer">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSTextBlockValueType WidthValueTypeForLayer (AppKit.NSTextBlockLayer layer, AppKit.NSRectEdge edge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype AppKit.NSTextBlockValueType WidthValueTypeForLayer(valuetype AppKit.NSTextBlockLayer layer, valuetype AppKit.NSRectEdge edge) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextBlock.WidthValueTypeForLayer(AppKit.NSTextBlockLayer,AppKit.NSRectEdge)" />
      <MemberSignature Language="F#" Value="abstract member WidthValueTypeForLayer : AppKit.NSTextBlockLayer * AppKit.NSRectEdge -&gt; AppKit.NSTextBlockValueType&#xA;override this.WidthValueTypeForLayer : AppKit.NSTextBlockLayer * AppKit.NSRectEdge -&gt; AppKit.NSTextBlockValueType" Usage="nSTextBlock.WidthValueTypeForLayer (layer, edge)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("widthValueTypeForLayer:edge:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSTextBlockValueType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layer" Type="AppKit.NSTextBlockLayer" />
        <Parameter Name="edge" Type="AppKit.NSRectEdge" />
      </Parameters>
      <Docs>
        <param name="layer">To be added.</param>
        <param name="edge">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
