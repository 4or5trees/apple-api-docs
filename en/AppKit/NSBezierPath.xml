<Type Name="NSBezierPath" FullName="AppKit.NSBezierPath">
  <TypeSignature Language="C#" Value="public class NSBezierPath : Foundation.NSObject, Foundation.INSCopying, Foundation.INSSecureCoding, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSBezierPath extends Foundation.NSObject implements class Foundation.INSCoding, class Foundation.INSCopying, class Foundation.INSSecureCoding, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AppKit.NSBezierPath" />
  <TypeSignature Language="F#" Value="type NSBezierPath = class&#xA;    inherit NSObject&#xA;    interface INSCoding&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSCopying&#xA;    interface INSSecureCoding" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSSecureCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("NSBezierPath", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSBezierPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSBezierPath (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new AppKit.NSBezierPath : Foundation.NSCoder -&gt; AppKit.NSBezierPath" Usage="new AppKit.NSBezierPath coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSBezierPath (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AppKit.NSBezierPath : Foundation.NSObjectFlag -&gt; AppKit.NSBezierPath" Usage="new AppKit.NSBezierPath t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSBezierPath (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AppKit.NSBezierPath : nativeint -&gt; AppKit.NSBezierPath" Usage="new AppKit.NSBezierPath handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClip">
      <MemberSignature Language="C#" Value="public virtual void AddClip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddClip() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.AddClip" />
      <MemberSignature Language="F#" Value="abstract member AddClip : unit -&gt; unit&#xA;override this.AddClip : unit -&gt; unit" Usage="nSBezierPath.AddClip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("addClip")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (AppKit.NSBezierPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class AppKit.NSBezierPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.Append(AppKit.NSBezierPath)" />
      <MemberSignature Language="F#" Value="member this.Append : AppKit.NSBezierPath -&gt; unit" Usage="nSBezierPath.Append path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="AppKit.NSBezierPath" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (CoreGraphics.CGPoint[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(valuetype CoreGraphics.CGPoint[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.Append(CoreGraphics.CGPoint[])" />
      <MemberSignature Language="F#" Value="member this.Append : CoreGraphics.CGPoint[] -&gt; unit" Usage="nSBezierPath.Append points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="CoreGraphics.CGPoint[]" />
      </Parameters>
      <Docs>
        <param name="points">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (uint[] glyphs, AppKit.NSFont font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(unsigned int32[] glyphs, class AppKit.NSFont font) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.Append(System.UInt32[],AppKit.NSFont)" />
      <MemberSignature Language="F#" Value="member this.Append : uint32[] * AppKit.NSFont -&gt; unit" Usage="nSBezierPath.Append (glyphs, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphs" Type="System.UInt32[]" />
        <Parameter Name="font" Type="AppKit.NSFont" />
      </Parameters>
      <Docs>
        <param name="glyphs">To be added.</param>
        <param name="font">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPath">
      <MemberSignature Language="C#" Value="public virtual void AppendPath (AppKit.NSBezierPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendPath(class AppKit.NSBezierPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.AppendPath(AppKit.NSBezierPath)" />
      <MemberSignature Language="F#" Value="abstract member AppendPath : AppKit.NSBezierPath -&gt; unit&#xA;override this.AppendPath : AppKit.NSBezierPath -&gt; unit" Usage="nSBezierPath.AppendPath path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("appendBezierPath:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="AppKit.NSBezierPath" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPathWithArc">
      <MemberSignature Language="C#" Value="public virtual void AppendPathWithArc (CoreGraphics.CGPoint point1, CoreGraphics.CGPoint point2, nfloat radius);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendPathWithArc(valuetype CoreGraphics.CGPoint point1, valuetype CoreGraphics.CGPoint point2, valuetype System.nfloat radius) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.AppendPathWithArc(CoreGraphics.CGPoint,CoreGraphics.CGPoint,System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member AppendPathWithArc : CoreGraphics.CGPoint * CoreGraphics.CGPoint * nfloat -&gt; unit&#xA;override this.AppendPathWithArc : CoreGraphics.CGPoint * CoreGraphics.CGPoint * nfloat -&gt; unit" Usage="nSBezierPath.AppendPathWithArc (point1, point2, radius)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("appendBezierPathWithArcFromPoint:toPoint:radius:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="CoreGraphics.CGPoint" />
        <Parameter Name="point2" Type="CoreGraphics.CGPoint" />
        <Parameter Name="radius" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="point1">To be added.</param>
        <param name="point2">To be added.</param>
        <param name="radius">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPathWithArc">
      <MemberSignature Language="C#" Value="public virtual void AppendPathWithArc (CoreGraphics.CGPoint center, nfloat radius, nfloat startAngle, nfloat endAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendPathWithArc(valuetype CoreGraphics.CGPoint center, valuetype System.nfloat radius, valuetype System.nfloat startAngle, valuetype System.nfloat endAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.AppendPathWithArc(CoreGraphics.CGPoint,System.nfloat,System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member AppendPathWithArc : CoreGraphics.CGPoint * nfloat * nfloat * nfloat -&gt; unit&#xA;override this.AppendPathWithArc : CoreGraphics.CGPoint * nfloat * nfloat * nfloat -&gt; unit" Usage="nSBezierPath.AppendPathWithArc (center, radius, startAngle, endAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="center" Type="CoreGraphics.CGPoint" />
        <Parameter Name="radius" Type="System.nfloat" />
        <Parameter Name="startAngle" Type="System.nfloat" />
        <Parameter Name="endAngle" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="center">To be added.</param>
        <param name="radius">To be added.</param>
        <param name="startAngle">To be added.</param>
        <param name="endAngle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPathWithArc">
      <MemberSignature Language="C#" Value="public virtual void AppendPathWithArc (CoreGraphics.CGPoint center, nfloat radius, nfloat startAngle, nfloat endAngle, bool clockwise);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendPathWithArc(valuetype CoreGraphics.CGPoint center, valuetype System.nfloat radius, valuetype System.nfloat startAngle, valuetype System.nfloat endAngle, bool clockwise) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.AppendPathWithArc(CoreGraphics.CGPoint,System.nfloat,System.nfloat,System.nfloat,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member AppendPathWithArc : CoreGraphics.CGPoint * nfloat * nfloat * nfloat * bool -&gt; unit&#xA;override this.AppendPathWithArc : CoreGraphics.CGPoint * nfloat * nfloat * nfloat * bool -&gt; unit" Usage="nSBezierPath.AppendPathWithArc (center, radius, startAngle, endAngle, clockwise)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="center" Type="CoreGraphics.CGPoint" />
        <Parameter Name="radius" Type="System.nfloat" />
        <Parameter Name="startAngle" Type="System.nfloat" />
        <Parameter Name="endAngle" Type="System.nfloat" />
        <Parameter Name="clockwise" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="center">To be added.</param>
        <param name="radius">To be added.</param>
        <param name="startAngle">To be added.</param>
        <param name="endAngle">To be added.</param>
        <param name="clockwise">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPathWithCGGlyph">
      <MemberSignature Language="C#" Value="public virtual void AppendPathWithCGGlyph (ushort glyph, AppKit.NSFont font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendPathWithCGGlyph(unsigned int16 glyph, class AppKit.NSFont font) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.AppendPathWithCGGlyph(System.UInt16,AppKit.NSFont)" />
      <MemberSignature Language="F#" Value="abstract member AppendPathWithCGGlyph : uint16 * AppKit.NSFont -&gt; unit&#xA;override this.AppendPathWithCGGlyph : uint16 * AppKit.NSFont -&gt; unit" Usage="nSBezierPath.AppendPathWithCGGlyph (glyph, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("appendBezierPathWithCGGlyph:inFont:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyph" Type="System.UInt16" />
        <Parameter Name="font" Type="AppKit.NSFont" />
      </Parameters>
      <Docs>
        <param name="glyph">To be added.</param>
        <param name="font">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPathWithGlyph">
      <MemberSignature Language="C#" Value="public virtual void AppendPathWithGlyph (uint glyph, AppKit.NSFont font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendPathWithGlyph(unsigned int32 glyph, class AppKit.NSFont font) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.AppendPathWithGlyph(System.UInt32,AppKit.NSFont)" />
      <MemberSignature Language="F#" Value="abstract member AppendPathWithGlyph : uint32 * AppKit.NSFont -&gt; unit&#xA;override this.AppendPathWithGlyph : uint32 * AppKit.NSFont -&gt; unit" Usage="nSBezierPath.AppendPathWithGlyph (glyph, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("appendBezierPathWithGlyph:inFont:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, "Use 'AppendPathWithCGGlyph (CGGlyph, NSFont)' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyph" Type="System.UInt32" />
        <Parameter Name="font" Type="AppKit.NSFont" />
      </Parameters>
      <Docs>
        <param name="glyph">To be added.</param>
        <param name="font">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPathWithGlyphs">
      <MemberSignature Language="C#" Value="public void AppendPathWithGlyphs (uint[] glyphs, AppKit.NSFont font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendPathWithGlyphs(unsigned int32[] glyphs, class AppKit.NSFont font) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.AppendPathWithGlyphs(System.UInt32[],AppKit.NSFont)" />
      <MemberSignature Language="F#" Value="member this.AppendPathWithGlyphs : uint32[] * AppKit.NSFont -&gt; unit" Usage="nSBezierPath.AppendPathWithGlyphs (glyphs, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use 'Append (uint[], NSFont)' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphs" Type="System.UInt32[]" />
        <Parameter Name="font" Type="AppKit.NSFont" />
      </Parameters>
      <Docs>
        <param name="glyphs">To be added.</param>
        <param name="font">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPathWithOvalInRect">
      <MemberSignature Language="C#" Value="public virtual void AppendPathWithOvalInRect (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendPathWithOvalInRect(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.AppendPathWithOvalInRect(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member AppendPathWithOvalInRect : CoreGraphics.CGRect -&gt; unit&#xA;override this.AppendPathWithOvalInRect : CoreGraphics.CGRect -&gt; unit" Usage="nSBezierPath.AppendPathWithOvalInRect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("appendBezierPathWithOvalInRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPathWithPackedGlyphs">
      <MemberSignature Language="C#" Value="public virtual void AppendPathWithPackedGlyphs (IntPtr packedGlyphs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendPathWithPackedGlyphs(native int packedGlyphs) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.AppendPathWithPackedGlyphs(System.IntPtr)" />
      <MemberSignature Language="F#" Value="abstract member AppendPathWithPackedGlyphs : nativeint -&gt; unit&#xA;override this.AppendPathWithPackedGlyphs : nativeint -&gt; unit" Usage="nSBezierPath.AppendPathWithPackedGlyphs packedGlyphs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("appendBezierPathWithPackedGlyphs:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, "Use 'Append (uint[], NSFont)' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packedGlyphs" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="packedGlyphs">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPathWithPoints">
      <MemberSignature Language="C#" Value="public void AppendPathWithPoints (CoreGraphics.CGPoint[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendPathWithPoints(valuetype CoreGraphics.CGPoint[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.AppendPathWithPoints(CoreGraphics.CGPoint[])" />
      <MemberSignature Language="F#" Value="member this.AppendPathWithPoints : CoreGraphics.CGPoint[] -&gt; unit" Usage="nSBezierPath.AppendPathWithPoints points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use 'Append (CGPoint[])' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="CoreGraphics.CGPoint[]" />
      </Parameters>
      <Docs>
        <param name="points">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPathWithRect">
      <MemberSignature Language="C#" Value="public virtual void AppendPathWithRect (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendPathWithRect(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.AppendPathWithRect(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member AppendPathWithRect : CoreGraphics.CGRect -&gt; unit&#xA;override this.AppendPathWithRect : CoreGraphics.CGRect -&gt; unit" Usage="nSBezierPath.AppendPathWithRect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("appendBezierPathWithRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPathWithRoundedRect">
      <MemberSignature Language="C#" Value="public virtual void AppendPathWithRoundedRect (CoreGraphics.CGRect rect, nfloat xRadius, nfloat yRadius);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendPathWithRoundedRect(valuetype CoreGraphics.CGRect rect, valuetype System.nfloat xRadius, valuetype System.nfloat yRadius) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.AppendPathWithRoundedRect(CoreGraphics.CGRect,System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member AppendPathWithRoundedRect : CoreGraphics.CGRect * nfloat * nfloat -&gt; unit&#xA;override this.AppendPathWithRoundedRect : CoreGraphics.CGRect * nfloat * nfloat -&gt; unit" Usage="nSBezierPath.AppendPathWithRoundedRect (rect, xRadius, yRadius)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("appendBezierPathWithRoundedRect:xRadius:yRadius:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
        <Parameter Name="xRadius" Type="System.nfloat" />
        <Parameter Name="yRadius" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <param name="xRadius">To be added.</param>
        <param name="yRadius">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BezierPathByFlatteningPath">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSBezierPath BezierPathByFlatteningPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSBezierPath BezierPathByFlatteningPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.BezierPathByFlatteningPath" />
      <MemberSignature Language="F#" Value="abstract member BezierPathByFlatteningPath : unit -&gt; AppKit.NSBezierPath&#xA;override this.BezierPathByFlatteningPath : unit -&gt; AppKit.NSBezierPath" Usage="nSBezierPath.BezierPathByFlatteningPath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("bezierPathByFlatteningPath")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSBezierPath</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BezierPathByReversingPath">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSBezierPath BezierPathByReversingPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSBezierPath BezierPathByReversingPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.BezierPathByReversingPath" />
      <MemberSignature Language="F#" Value="abstract member BezierPathByReversingPath : unit -&gt; AppKit.NSBezierPath&#xA;override this.BezierPathByReversingPath : unit -&gt; AppKit.NSBezierPath" Usage="nSBezierPath.BezierPathByReversingPath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("bezierPathByReversingPath")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSBezierPath</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGRect Bounds" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSBezierPath.Bounds" />
      <MemberSignature Language="F#" Value="member this.Bounds : CoreGraphics.CGRect" Usage="AppKit.NSBezierPath.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("bounds")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSBezierPath.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AppKit.NSBezierPath.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipRect">
      <MemberSignature Language="C#" Value="public static void ClipRect (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClipRect(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.ClipRect(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="static member ClipRect : CoreGraphics.CGRect -&gt; unit" Usage="AppKit.NSBezierPath.ClipRect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("clipRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClosePath">
      <MemberSignature Language="C#" Value="public virtual void ClosePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClosePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.ClosePath" />
      <MemberSignature Language="F#" Value="abstract member ClosePath : unit -&gt; unit&#xA;override this.ClosePath : unit -&gt; unit" Usage="nSBezierPath.ClosePath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("closePath")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (CoreGraphics.CGPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(valuetype CoreGraphics.CGPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.Contains(CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member Contains : CoreGraphics.CGPoint -&gt; bool&#xA;override this.Contains : CoreGraphics.CGPoint -&gt; bool" Usage="nSBezierPath.Contains point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("containsPoint:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlPointBounds">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect ControlPointBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGRect ControlPointBounds" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSBezierPath.ControlPointBounds" />
      <MemberSignature Language="F#" Value="member this.ControlPointBounds : CoreGraphics.CGRect" Usage="AppKit.NSBezierPath.ControlPointBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("controlPointBounds")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject Copy (Foundation.NSZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject Copy(class Foundation.NSZone zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.Copy(Foundation.NSZone)" />
      <MemberSignature Language="F#" Value="override this.Copy : Foundation.NSZone -&gt; Foundation.NSObject" Usage="nSBezierPath.Copy zone" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCopying.Copy(Foundation.NSZone)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyWithZone:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentPoint">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGPoint CurrentPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGPoint CurrentPoint" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSBezierPath.CurrentPoint" />
      <MemberSignature Language="F#" Value="member this.CurrentPoint : CoreGraphics.CGPoint" Usage="AppKit.NSBezierPath.CurrentPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("currentPoint")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurveTo">
      <MemberSignature Language="C#" Value="public virtual void CurveTo (CoreGraphics.CGPoint endPoint, CoreGraphics.CGPoint controlPoint1, CoreGraphics.CGPoint controlPoint2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CurveTo(valuetype CoreGraphics.CGPoint endPoint, valuetype CoreGraphics.CGPoint controlPoint1, valuetype CoreGraphics.CGPoint controlPoint2) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.CurveTo(CoreGraphics.CGPoint,CoreGraphics.CGPoint,CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member CurveTo : CoreGraphics.CGPoint * CoreGraphics.CGPoint * CoreGraphics.CGPoint -&gt; unit&#xA;override this.CurveTo : CoreGraphics.CGPoint * CoreGraphics.CGPoint * CoreGraphics.CGPoint -&gt; unit" Usage="nSBezierPath.CurveTo (endPoint, controlPoint1, controlPoint2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("curveToPoint:controlPoint1:controlPoint2:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endPoint" Type="CoreGraphics.CGPoint" />
        <Parameter Name="controlPoint1" Type="CoreGraphics.CGPoint" />
        <Parameter Name="controlPoint2" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="endPoint">To be added.</param>
        <param name="controlPoint1">To be added.</param>
        <param name="controlPoint2">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFlatness">
      <MemberSignature Language="C#" Value="public static nfloat DefaultFlatness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.nfloat DefaultFlatness" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSBezierPath.DefaultFlatness" />
      <MemberSignature Language="F#" Value="member this.DefaultFlatness : nfloat with get, set" Usage="AppKit.NSBezierPath.DefaultFlatness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("defaultFlatness")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDefaultFlatness:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultLineCapStyle">
      <MemberSignature Language="C#" Value="public static AppKit.NSLineCapStyle DefaultLineCapStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype AppKit.NSLineCapStyle DefaultLineCapStyle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSBezierPath.DefaultLineCapStyle" />
      <MemberSignature Language="F#" Value="member this.DefaultLineCapStyle : AppKit.NSLineCapStyle with get, set" Usage="AppKit.NSBezierPath.DefaultLineCapStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("defaultLineCapStyle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDefaultLineCapStyle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSLineCapStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultLineJoinStyle">
      <MemberSignature Language="C#" Value="public static AppKit.NSLineJoinStyle DefaultLineJoinStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype AppKit.NSLineJoinStyle DefaultLineJoinStyle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSBezierPath.DefaultLineJoinStyle" />
      <MemberSignature Language="F#" Value="member this.DefaultLineJoinStyle : AppKit.NSLineJoinStyle with get, set" Usage="AppKit.NSBezierPath.DefaultLineJoinStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("defaultLineJoinStyle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDefaultLineJoinStyle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSLineJoinStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultLineWidth">
      <MemberSignature Language="C#" Value="public static nfloat DefaultLineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.nfloat DefaultLineWidth" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSBezierPath.DefaultLineWidth" />
      <MemberSignature Language="F#" Value="member this.DefaultLineWidth : nfloat with get, set" Usage="AppKit.NSBezierPath.DefaultLineWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("defaultLineWidth")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDefaultLineWidth:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMiterLimit">
      <MemberSignature Language="C#" Value="public static nfloat DefaultMiterLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.nfloat DefaultMiterLimit" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSBezierPath.DefaultMiterLimit" />
      <MemberSignature Language="F#" Value="member this.DefaultMiterLimit : nfloat with get, set" Usage="AppKit.NSBezierPath.DefaultMiterLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("defaultMiterLimit")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDefaultMiterLimit:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultWindingRule">
      <MemberSignature Language="C#" Value="public static AppKit.NSWindingRule DefaultWindingRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype AppKit.NSWindingRule DefaultWindingRule" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSBezierPath.DefaultWindingRule" />
      <MemberSignature Language="F#" Value="member this.DefaultWindingRule : AppKit.NSWindingRule with get, set" Usage="AppKit.NSBezierPath.DefaultWindingRule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("defaultWindingRule")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDefaultWindingRule:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSWindingRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawPackedGlyphsAtPoint">
      <MemberSignature Language="C#" Value="public static void DrawPackedGlyphsAtPoint (IntPtr packedGlyphs, CoreGraphics.CGPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawPackedGlyphsAtPoint(native int packedGlyphs, valuetype CoreGraphics.CGPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.DrawPackedGlyphsAtPoint(System.IntPtr,CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="static member DrawPackedGlyphsAtPoint : nativeint * CoreGraphics.CGPoint -&gt; unit" Usage="AppKit.NSBezierPath.DrawPackedGlyphsAtPoint (packedGlyphs, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawPackedGlyphs:atPoint:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packedGlyphs" Type="System.IntPtr" />
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="packedGlyphs">To be added.</param>
        <param name="point">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementAt">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSBezierPathElement ElementAt (nint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype AppKit.NSBezierPathElement ElementAt(valuetype System.nint index) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.ElementAt(System.nint)" />
      <MemberSignature Language="F#" Value="abstract member ElementAt : nint -&gt; AppKit.NSBezierPathElement&#xA;override this.ElementAt : nint -&gt; AppKit.NSBezierPathElement" Usage="nSBezierPath.ElementAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("elementAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSBezierPathElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementAt">
      <MemberSignature Language="C#" Value="public AppKit.NSBezierPathElement ElementAt (nint index, out CoreGraphics.CGPoint[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AppKit.NSBezierPathElement ElementAt(valuetype System.nint index, [out] valuetype CoreGraphics.CGPoint[]&amp; points) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.ElementAt(System.nint,CoreGraphics.CGPoint[]@)" />
      <MemberSignature Language="F#" Value="member this.ElementAt : nint *  -&gt; AppKit.NSBezierPathElement" Usage="nSBezierPath.ElementAt (index, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSBezierPathElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.nint" />
        <Parameter Name="points" Type="CoreGraphics.CGPoint[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="points">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementCount">
      <MemberSignature Language="C#" Value="public virtual nint ElementCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint ElementCount" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSBezierPath.ElementCount" />
      <MemberSignature Language="F#" Value="member this.ElementCount : nint" Usage="AppKit.NSBezierPath.ElementCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("elementCount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeTo">
      <MemberSignature Language="C#" Value="public virtual void EncodeTo (Foundation.NSCoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeTo(class Foundation.NSCoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.EncodeTo(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member EncodeTo : Foundation.NSCoder -&gt; unit&#xA;override this.EncodeTo : Foundation.NSCoder -&gt; unit" Usage="nSBezierPath.EncodeTo encoder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCoding.EncodeTo(Foundation.NSCoder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="encoder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public virtual void Fill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fill() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.Fill" />
      <MemberSignature Language="F#" Value="abstract member Fill : unit -&gt; unit&#xA;override this.Fill : unit -&gt; unit" Usage="nSBezierPath.Fill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fill")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillRect">
      <MemberSignature Language="C#" Value="public static void FillRect (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FillRect(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.FillRect(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="static member FillRect : CoreGraphics.CGRect -&gt; unit" Usage="AppKit.NSBezierPath.FillRect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fillRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatness">
      <MemberSignature Language="C#" Value="public virtual nfloat Flatness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat Flatness" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSBezierPath.Flatness" />
      <MemberSignature Language="F#" Value="member this.Flatness : nfloat with get, set" Usage="AppKit.NSBezierPath.Flatness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("flatness")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setFlatness:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromOvalInRect">
      <MemberSignature Language="C#" Value="public static AppKit.NSBezierPath FromOvalInRect (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSBezierPath FromOvalInRect(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.FromOvalInRect(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="static member FromOvalInRect : CoreGraphics.CGRect -&gt; AppKit.NSBezierPath" Usage="AppKit.NSBezierPath.FromOvalInRect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("bezierPathWithOvalInRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSBezierPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromRect">
      <MemberSignature Language="C#" Value="public static AppKit.NSBezierPath FromRect (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSBezierPath FromRect(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.FromRect(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="static member FromRect : CoreGraphics.CGRect -&gt; AppKit.NSBezierPath" Usage="AppKit.NSBezierPath.FromRect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("bezierPathWithRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSBezierPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromRoundedRect">
      <MemberSignature Language="C#" Value="public static AppKit.NSBezierPath FromRoundedRect (CoreGraphics.CGRect rect, nfloat xRadius, nfloat yRadius);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSBezierPath FromRoundedRect(valuetype CoreGraphics.CGRect rect, valuetype System.nfloat xRadius, valuetype System.nfloat yRadius) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.FromRoundedRect(CoreGraphics.CGRect,System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="static member FromRoundedRect : CoreGraphics.CGRect * nfloat * nfloat -&gt; AppKit.NSBezierPath" Usage="AppKit.NSBezierPath.FromRoundedRect (rect, xRadius, yRadius)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("bezierPathWithRoundedRect:xRadius:yRadius:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSBezierPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
        <Parameter Name="xRadius" Type="System.nfloat" />
        <Parameter Name="yRadius" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <param name="xRadius">To be added.</param>
        <param name="yRadius">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineDash">
      <MemberSignature Language="C#" Value="public void GetLineDash (out nfloat[] pattern, out nfloat phase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetLineDash([out] valuetype System.nfloat[]&amp; pattern, [out] valuetype System.nfloat&amp; phase) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.GetLineDash(System.nfloat[]@,System.nfloat@)" />
      <MemberSignature Language="F#" Value="member this.GetLineDash :  *  -&gt; unit" Usage="nSBezierPath.GetLineDash (pattern, phase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.nfloat[]" RefType="out" />
        <Parameter Name="phase" Type="System.nfloat" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pattern">To be added.</param>
        <param name="phase">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public virtual bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSBezierPath.IsEmpty" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="AppKit.NSBezierPath.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isEmpty")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineCapStyle">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSLineCapStyle LineCapStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AppKit.NSLineCapStyle LineCapStyle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSBezierPath.LineCapStyle" />
      <MemberSignature Language="F#" Value="member this.LineCapStyle : AppKit.NSLineCapStyle with get, set" Usage="AppKit.NSBezierPath.LineCapStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("lineCapStyle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setLineCapStyle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSLineCapStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineJoinStyle">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSLineJoinStyle LineJoinStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AppKit.NSLineJoinStyle LineJoinStyle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSBezierPath.LineJoinStyle" />
      <MemberSignature Language="F#" Value="member this.LineJoinStyle : AppKit.NSLineJoinStyle with get, set" Usage="AppKit.NSBezierPath.LineJoinStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("lineJoinStyle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setLineJoinStyle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSLineJoinStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineTo">
      <MemberSignature Language="C#" Value="public virtual void LineTo (CoreGraphics.CGPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineTo(valuetype CoreGraphics.CGPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.LineTo(CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member LineTo : CoreGraphics.CGPoint -&gt; unit&#xA;override this.LineTo : CoreGraphics.CGPoint -&gt; unit" Usage="nSBezierPath.LineTo point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("lineToPoint:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineWidth">
      <MemberSignature Language="C#" Value="public virtual nfloat LineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat LineWidth" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSBezierPath.LineWidth" />
      <MemberSignature Language="F#" Value="member this.LineWidth : nfloat with get, set" Usage="AppKit.NSBezierPath.LineWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("lineWidth")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setLineWidth:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MiterLimit">
      <MemberSignature Language="C#" Value="public virtual nfloat MiterLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat MiterLimit" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSBezierPath.MiterLimit" />
      <MemberSignature Language="F#" Value="member this.MiterLimit : nfloat with get, set" Usage="AppKit.NSBezierPath.MiterLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("miterLimit")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMiterLimit:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public virtual void MoveTo (CoreGraphics.CGPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveTo(valuetype CoreGraphics.CGPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.MoveTo(CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member MoveTo : CoreGraphics.CGPoint -&gt; unit&#xA;override this.MoveTo : CoreGraphics.CGPoint -&gt; unit" Usage="nSBezierPath.MoveTo point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("moveToPoint:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelativeCurveTo">
      <MemberSignature Language="C#" Value="public virtual void RelativeCurveTo (CoreGraphics.CGPoint endPoint, CoreGraphics.CGPoint controlPoint1, CoreGraphics.CGPoint controlPoint2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RelativeCurveTo(valuetype CoreGraphics.CGPoint endPoint, valuetype CoreGraphics.CGPoint controlPoint1, valuetype CoreGraphics.CGPoint controlPoint2) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.RelativeCurveTo(CoreGraphics.CGPoint,CoreGraphics.CGPoint,CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member RelativeCurveTo : CoreGraphics.CGPoint * CoreGraphics.CGPoint * CoreGraphics.CGPoint -&gt; unit&#xA;override this.RelativeCurveTo : CoreGraphics.CGPoint * CoreGraphics.CGPoint * CoreGraphics.CGPoint -&gt; unit" Usage="nSBezierPath.RelativeCurveTo (endPoint, controlPoint1, controlPoint2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("relativeCurveToPoint:controlPoint1:controlPoint2:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endPoint" Type="CoreGraphics.CGPoint" />
        <Parameter Name="controlPoint1" Type="CoreGraphics.CGPoint" />
        <Parameter Name="controlPoint2" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="endPoint">To be added.</param>
        <param name="controlPoint1">To be added.</param>
        <param name="controlPoint2">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelativeLineTo">
      <MemberSignature Language="C#" Value="public virtual void RelativeLineTo (CoreGraphics.CGPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RelativeLineTo(valuetype CoreGraphics.CGPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.RelativeLineTo(CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member RelativeLineTo : CoreGraphics.CGPoint -&gt; unit&#xA;override this.RelativeLineTo : CoreGraphics.CGPoint -&gt; unit" Usage="nSBezierPath.RelativeLineTo point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("relativeLineToPoint:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelativeMoveTo">
      <MemberSignature Language="C#" Value="public virtual void RelativeMoveTo (CoreGraphics.CGPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RelativeMoveTo(valuetype CoreGraphics.CGPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.RelativeMoveTo(CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member RelativeMoveTo : CoreGraphics.CGPoint -&gt; unit&#xA;override this.RelativeMoveTo : CoreGraphics.CGPoint -&gt; unit" Usage="nSBezierPath.RelativeMoveTo point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("relativeMoveToPoint:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllPoints">
      <MemberSignature Language="C#" Value="public virtual void RemoveAllPoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAllPoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.RemoveAllPoints" />
      <MemberSignature Language="F#" Value="abstract member RemoveAllPoints : unit -&gt; unit&#xA;override this.RemoveAllPoints : unit -&gt; unit" Usage="nSBezierPath.RemoveAllPoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("removeAllPoints")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAssociatedPointsAtIndex">
      <MemberSignature Language="C#" Value="public void SetAssociatedPointsAtIndex (CoreGraphics.CGPoint[] points, nint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAssociatedPointsAtIndex(valuetype CoreGraphics.CGPoint[] points, valuetype System.nint index) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.SetAssociatedPointsAtIndex(CoreGraphics.CGPoint[],System.nint)" />
      <MemberSignature Language="F#" Value="member this.SetAssociatedPointsAtIndex : CoreGraphics.CGPoint[] * nint -&gt; unit" Usage="nSBezierPath.SetAssociatedPointsAtIndex (points, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="CoreGraphics.CGPoint[]" />
        <Parameter Name="index" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="points">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public virtual void SetClip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetClip() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.SetClip" />
      <MemberSignature Language="F#" Value="abstract member SetClip : unit -&gt; unit&#xA;override this.SetClip : unit -&gt; unit" Usage="nSBezierPath.SetClip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setClip")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLineDash">
      <MemberSignature Language="C#" Value="public void SetLineDash (nfloat[] pattern, nfloat phase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLineDash(valuetype System.nfloat[] pattern, valuetype System.nfloat phase) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.SetLineDash(System.nfloat[],System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.SetLineDash : nfloat[] * nfloat -&gt; unit" Usage="nSBezierPath.SetLineDash (pattern, phase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.nfloat[]" />
        <Parameter Name="phase" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="pattern">To be added.</param>
        <param name="phase">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stroke">
      <MemberSignature Language="C#" Value="public virtual void Stroke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stroke() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.Stroke" />
      <MemberSignature Language="F#" Value="abstract member Stroke : unit -&gt; unit&#xA;override this.Stroke : unit -&gt; unit" Usage="nSBezierPath.Stroke " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("stroke")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeLine">
      <MemberSignature Language="C#" Value="public static void StrokeLine (CoreGraphics.CGPoint point1, CoreGraphics.CGPoint point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StrokeLine(valuetype CoreGraphics.CGPoint point1, valuetype CoreGraphics.CGPoint point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.StrokeLine(CoreGraphics.CGPoint,CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="static member StrokeLine : CoreGraphics.CGPoint * CoreGraphics.CGPoint -&gt; unit" Usage="AppKit.NSBezierPath.StrokeLine (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("strokeLineFromPoint:toPoint:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="CoreGraphics.CGPoint" />
        <Parameter Name="point2" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="point1">To be added.</param>
        <param name="point2">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeRect">
      <MemberSignature Language="C#" Value="public static void StrokeRect (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StrokeRect(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.StrokeRect(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="static member StrokeRect : CoreGraphics.CGRect -&gt; unit" Usage="AppKit.NSBezierPath.StrokeRect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("strokeRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformUsingAffineTransform">
      <MemberSignature Language="C#" Value="public virtual void TransformUsingAffineTransform (Foundation.NSAffineTransform transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransformUsingAffineTransform(class Foundation.NSAffineTransform transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSBezierPath.TransformUsingAffineTransform(Foundation.NSAffineTransform)" />
      <MemberSignature Language="F#" Value="abstract member TransformUsingAffineTransform : Foundation.NSAffineTransform -&gt; unit&#xA;override this.TransformUsingAffineTransform : Foundation.NSAffineTransform -&gt; unit" Usage="nSBezierPath.TransformUsingAffineTransform transform" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("transformUsingAffineTransform:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="Foundation.NSAffineTransform" />
      </Parameters>
      <Docs>
        <param name="transform">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindingRule">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSWindingRule WindingRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AppKit.NSWindingRule WindingRule" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSBezierPath.WindingRule" />
      <MemberSignature Language="F#" Value="member this.WindingRule : AppKit.NSWindingRule with get, set" Usage="AppKit.NSBezierPath.WindingRule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("windingRule")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setWindingRule:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSWindingRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
