<Type Name="NSButtonCell" FullName="AppKit.NSButtonCell">
  <TypeSignature Language="C#" Value="public class NSButtonCell : AppKit.NSActionCell" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSButtonCell extends AppKit.NSActionCell" />
  <TypeSignature Language="DocId" Value="T:AppKit.NSButtonCell" />
  <TypeSignature Language="F#" Value="type NSButtonCell = class&#xA;    inherit NSActionCell" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>AppKit.NSActionCell</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("NSButtonCell", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSButtonCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSButtonCell.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSButtonCell (AppKit.NSImage image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class AppKit.NSImage image) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSButtonCell.#ctor(AppKit.NSImage)" />
      <MemberSignature Language="F#" Value="new AppKit.NSButtonCell : AppKit.NSImage -&gt; AppKit.NSButtonCell" Usage="new AppKit.NSButtonCell image" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initImageCell:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="image" Type="AppKit.NSImage" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSButtonCell (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSButtonCell.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new AppKit.NSButtonCell : Foundation.NSCoder -&gt; AppKit.NSButtonCell" Usage="new AppKit.NSButtonCell coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSButtonCell (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSButtonCell.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AppKit.NSButtonCell : Foundation.NSObjectFlag -&gt; AppKit.NSButtonCell" Usage="new AppKit.NSButtonCell t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSButtonCell (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSButtonCell.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AppKit.NSButtonCell : nativeint -&gt; AppKit.NSButtonCell" Usage="new AppKit.NSButtonCell handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSButtonCell (string aString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string aString) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSButtonCell.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new AppKit.NSButtonCell : string -&gt; AppKit.NSButtonCell" Usage="new AppKit.NSButtonCell aString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initTextCell:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="aString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="aString">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternateImage">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSImage AlternateImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSImage AlternateImage" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.AlternateImage" />
      <MemberSignature Language="F#" Value="member this.AlternateImage : AppKit.NSImage with get, set" Usage="AppKit.NSButtonCell.AlternateImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("alternateImage", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAlternateImage:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSImage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternateMnemonic">
      <MemberSignature Language="C#" Value="public virtual string AlternateMnemonic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlternateMnemonic" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.AlternateMnemonic" />
      <MemberSignature Language="F#" Value="member this.AlternateMnemonic : string with get, set" Usage="AppKit.NSButtonCell.AlternateMnemonic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, "This method still will set Title with the ampersand stripped from the value, but does nothing else. Set the Title directly.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("alternateMnemonic")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, "This method still will set Title with the ampersand stripped from the value, but does nothing else. Set the Title directly.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAlternateTitleWithMnemonic:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, "This method still will set Title with the ampersand stripped from the value, but does nothing else. Set the Title directly.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternateMnemonicLocation">
      <MemberSignature Language="C#" Value="public virtual nint AlternateMnemonicLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint AlternateMnemonicLocation" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.AlternateMnemonicLocation" />
      <MemberSignature Language="F#" Value="member this.AlternateMnemonicLocation : nint with get, set" Usage="AppKit.NSButtonCell.AlternateMnemonicLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, "This method no longer does anything and should not be called.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("alternateMnemonicLocation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, "This method no longer does anything and should not be called.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAlternateMnemonicLocation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, "This method no longer does anything and should not be called.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternateTitle">
      <MemberSignature Language="C#" Value="public virtual string AlternateTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlternateTitle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.AlternateTitle" />
      <MemberSignature Language="F#" Value="member this.AlternateTitle : string with get, set" Usage="AppKit.NSButtonCell.AlternateTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("alternateTitle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAlternateTitle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributedAlternateTitle">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSAttributedString AttributedAlternateTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSAttributedString AttributedAlternateTitle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.AttributedAlternateTitle" />
      <MemberSignature Language="F#" Value="member this.AttributedAlternateTitle : Foundation.NSAttributedString with get, set" Usage="AppKit.NSButtonCell.AttributedAlternateTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("attributedAlternateTitle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAttributedAlternateTitle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSAttributedString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributedTitle">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSAttributedString AttributedTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSAttributedString AttributedTitle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.AttributedTitle" />
      <MemberSignature Language="F#" Value="member this.AttributedTitle : Foundation.NSAttributedString with get, set" Usage="AppKit.NSButtonCell.AttributedTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("attributedTitle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAttributedTitle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSAttributedString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSColor BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSColor BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.BackgroundColor" />
      <MemberSignature Language="F#" Value="member this.BackgroundColor : AppKit.NSColor with get, set" Usage="AppKit.NSButtonCell.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("backgroundColor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setBackgroundColor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BezelStyle">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSBezelStyle BezelStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AppKit.NSBezelStyle BezelStyle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.BezelStyle" />
      <MemberSignature Language="F#" Value="member this.BezelStyle : AppKit.NSBezelStyle with get, set" Usage="AppKit.NSButtonCell.BezelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("bezelStyle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setBezelStyle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSBezelStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AppKit.NSButtonCell.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBezelWithFrame">
      <MemberSignature Language="C#" Value="public virtual void DrawBezelWithFrame (CoreGraphics.CGRect frame, AppKit.NSView controlView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawBezelWithFrame(valuetype CoreGraphics.CGRect frame, class AppKit.NSView controlView) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSButtonCell.DrawBezelWithFrame(CoreGraphics.CGRect,AppKit.NSView)" />
      <MemberSignature Language="F#" Value="abstract member DrawBezelWithFrame : CoreGraphics.CGRect * AppKit.NSView -&gt; unit&#xA;override this.DrawBezelWithFrame : CoreGraphics.CGRect * AppKit.NSView -&gt; unit" Usage="nSButtonCell.DrawBezelWithFrame (frame, controlView)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawBezelWithFrame:inView:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="CoreGraphics.CGRect" />
        <Parameter Name="controlView" Type="AppKit.NSView" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <param name="controlView">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public virtual void DrawImage (AppKit.NSImage image, CoreGraphics.CGRect frame, AppKit.NSView controlView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawImage(class AppKit.NSImage image, valuetype CoreGraphics.CGRect frame, class AppKit.NSView controlView) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSButtonCell.DrawImage(AppKit.NSImage,CoreGraphics.CGRect,AppKit.NSView)" />
      <MemberSignature Language="F#" Value="abstract member DrawImage : AppKit.NSImage * CoreGraphics.CGRect * AppKit.NSView -&gt; unit&#xA;override this.DrawImage : AppKit.NSImage * CoreGraphics.CGRect * AppKit.NSView -&gt; unit" Usage="nSButtonCell.DrawImage (image, frame, controlView)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawImage:withFrame:inView:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="AppKit.NSImage" />
        <Parameter Name="frame" Type="CoreGraphics.CGRect" />
        <Parameter Name="controlView" Type="AppKit.NSView" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="frame">To be added.</param>
        <param name="controlView">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawTitle">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect DrawTitle (Foundation.NSAttributedString title, CoreGraphics.CGRect frame, AppKit.NSView controlView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGRect DrawTitle(class Foundation.NSAttributedString title, valuetype CoreGraphics.CGRect frame, class AppKit.NSView controlView) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSButtonCell.DrawTitle(Foundation.NSAttributedString,CoreGraphics.CGRect,AppKit.NSView)" />
      <MemberSignature Language="F#" Value="abstract member DrawTitle : Foundation.NSAttributedString * CoreGraphics.CGRect * AppKit.NSView -&gt; CoreGraphics.CGRect&#xA;override this.DrawTitle : Foundation.NSAttributedString * CoreGraphics.CGRect * AppKit.NSView -&gt; CoreGraphics.CGRect" Usage="nSButtonCell.DrawTitle (title, frame, controlView)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawTitle:withFrame:inView:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="Foundation.NSAttributedString" />
        <Parameter Name="frame" Type="CoreGraphics.CGRect" />
        <Parameter Name="controlView" Type="AppKit.NSView" />
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <param name="frame">To be added.</param>
        <param name="controlView">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeriodicDelay">
      <MemberSignature Language="C#" Value="public virtual void GetPeriodicDelay (out float delay, out float interval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetPeriodicDelay([out] float32&amp; delay, [out] float32&amp; interval) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSButtonCell.GetPeriodicDelay(System.Single@,System.Single@)" />
      <MemberSignature Language="F#" Value="override this.GetPeriodicDelay :  *  -&gt; unit" Usage="nSButtonCell.GetPeriodicDelay (delay, interval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("getPeriodicDelay:interval:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delay" Type="System.Single" RefType="out" />
        <Parameter Name="interval" Type="System.Single" RefType="out" />
      </Parameters>
      <Docs>
        <param name="delay">To be added.</param>
        <param name="interval">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightsBy">
      <MemberSignature Language="C#" Value="public virtual nint HighlightsBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint HighlightsBy" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.HighlightsBy" />
      <MemberSignature Language="F#" Value="member this.HighlightsBy : nint with get, set" Usage="AppKit.NSButtonCell.HighlightsBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("highlightsBy")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setHighlightsBy:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageDimsWhenDisabled">
      <MemberSignature Language="C#" Value="public virtual bool ImageDimsWhenDisabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ImageDimsWhenDisabled" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.ImageDimsWhenDisabled" />
      <MemberSignature Language="F#" Value="member this.ImageDimsWhenDisabled : bool with get, set" Usage="AppKit.NSButtonCell.ImageDimsWhenDisabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("imageDimsWhenDisabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setImageDimsWhenDisabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImagePosition">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSCellImagePosition ImagePosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AppKit.NSCellImagePosition ImagePosition" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.ImagePosition" />
      <MemberSignature Language="F#" Value="member this.ImagePosition : AppKit.NSCellImagePosition with get, set" Usage="AppKit.NSButtonCell.ImagePosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("imagePosition")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setImagePosition:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSCellImagePosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageScale">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSImageScale ImageScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AppKit.NSImageScale ImageScale" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.ImageScale" />
      <MemberSignature Language="F#" Value="member this.ImageScale : AppKit.NSImageScale with get, set" Usage="AppKit.NSButtonCell.ImageScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("imageScaling")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setImageScaling:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSImageScale</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpaque">
      <MemberSignature Language="C#" Value="public virtual bool IsOpaque { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpaque" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.IsOpaque" />
      <MemberSignature Language="F#" Value="member this.IsOpaque : bool" Usage="AppKit.NSButtonCell.IsOpaque" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isOpaque")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyEquivalent">
      <MemberSignature Language="C#" Value="public virtual string KeyEquivalent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyEquivalent" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.KeyEquivalent" />
      <MemberSignature Language="F#" Value="member this.KeyEquivalent : string with get, set" Usage="AppKit.NSButtonCell.KeyEquivalent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("keyEquivalent")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setKeyEquivalent:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyEquivalentFont">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSFont KeyEquivalentFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSFont KeyEquivalentFont" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.KeyEquivalentFont" />
      <MemberSignature Language="F#" Value="member this.KeyEquivalentFont : AppKit.NSFont with get, set" Usage="AppKit.NSButtonCell.KeyEquivalentFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("keyEquivalentFont", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setKeyEquivalentFont:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSFont</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyEquivalentModifierMask">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSEventModifierMask KeyEquivalentModifierMask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AppKit.NSEventModifierMask KeyEquivalentModifierMask" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.KeyEquivalentModifierMask" />
      <MemberSignature Language="F#" Value="member this.KeyEquivalentModifierMask : AppKit.NSEventModifierMask with get, set" Usage="AppKit.NSButtonCell.KeyEquivalentModifierMask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("keyEquivalentModifierMask")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setKeyEquivalentModifierMask:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSEventModifierMask</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEntered">
      <MemberSignature Language="C#" Value="public virtual void MouseEntered (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseEntered(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSButtonCell.MouseEntered(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member MouseEntered : AppKit.NSEvent -&gt; unit&#xA;override this.MouseEntered : AppKit.NSEvent -&gt; unit" Usage="nSButtonCell.MouseEntered theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("mouseEntered:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseExited">
      <MemberSignature Language="C#" Value="public virtual void MouseExited (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseExited(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSButtonCell.MouseExited(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member MouseExited : AppKit.NSEvent -&gt; unit&#xA;override this.MouseExited : AppKit.NSEvent -&gt; unit" Usage="nSButtonCell.MouseExited theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("mouseExited:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public virtual void PerformClick (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformClick(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSButtonCell.PerformClick(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="override this.PerformClick : Foundation.NSObject -&gt; unit" Usage="nSButtonCell.PerformClick sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("performClick:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetButtonType">
      <MemberSignature Language="C#" Value="public virtual void SetButtonType (AppKit.NSButtonType aType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetButtonType(valuetype AppKit.NSButtonType aType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSButtonCell.SetButtonType(AppKit.NSButtonType)" />
      <MemberSignature Language="F#" Value="abstract member SetButtonType : AppKit.NSButtonType -&gt; unit&#xA;override this.SetButtonType : AppKit.NSButtonType -&gt; unit" Usage="nSButtonCell.SetButtonType aType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setButtonType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aType" Type="AppKit.NSButtonType" />
      </Parameters>
      <Docs>
        <param name="aType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFont">
      <MemberSignature Language="C#" Value="public virtual void SetFont (AppKit.NSFont fontObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFont(class AppKit.NSFont fontObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSButtonCell.SetFont(AppKit.NSFont)" />
      <MemberSignature Language="F#" Value="abstract member SetFont : AppKit.NSFont -&gt; unit&#xA;override this.SetFont : AppKit.NSFont -&gt; unit" Usage="nSButtonCell.SetFont fontObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setFont:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontObj" Type="AppKit.NSFont" />
      </Parameters>
      <Docs>
        <param name="fontObj">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGradientType">
      <MemberSignature Language="C#" Value="public virtual void SetGradientType (AppKit.NSGradientType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetGradientType(valuetype AppKit.NSGradientType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSButtonCell.SetGradientType(AppKit.NSGradientType)" />
      <MemberSignature Language="F#" Value="abstract member SetGradientType : AppKit.NSGradientType -&gt; unit&#xA;override this.SetGradientType : AppKit.NSGradientType -&gt; unit" Usage="nSButtonCell.SetGradientType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setGradientType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, "The GradientType property is unused, and setting it has no effect.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="AppKit.NSGradientType" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeyEquivalentFont">
      <MemberSignature Language="C#" Value="public virtual void SetKeyEquivalentFont (string fontName, nfloat fontSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetKeyEquivalentFont(string fontName, valuetype System.nfloat fontSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSButtonCell.SetKeyEquivalentFont(System.String,System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member SetKeyEquivalentFont : string * nfloat -&gt; unit&#xA;override this.SetKeyEquivalentFont : string * nfloat -&gt; unit" Usage="nSButtonCell.SetKeyEquivalentFont (fontName, fontSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setKeyEquivalentFont:size:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontName" Type="System.String" />
        <Parameter Name="fontSize" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="fontName">To be added.</param>
        <param name="fontSize">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPeriodicDelay">
      <MemberSignature Language="C#" Value="public virtual void SetPeriodicDelay (float delay, float interval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPeriodicDelay(float32 delay, float32 interval) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSButtonCell.SetPeriodicDelay(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetPeriodicDelay : single * single -&gt; unit&#xA;override this.SetPeriodicDelay : single * single -&gt; unit" Usage="nSButtonCell.SetPeriodicDelay (delay, interval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setPeriodicDelay:interval:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delay" Type="System.Single" />
        <Parameter Name="interval" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="delay">To be added.</param>
        <param name="interval">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowsBorderOnlyWhileMouseInside">
      <MemberSignature Language="C#" Value="public virtual bool ShowsBorderOnlyWhileMouseInside { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowsBorderOnlyWhileMouseInside" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.ShowsBorderOnlyWhileMouseInside" />
      <MemberSignature Language="F#" Value="member this.ShowsBorderOnlyWhileMouseInside : bool with get, set" Usage="AppKit.NSButtonCell.ShowsBorderOnlyWhileMouseInside" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("showsBorderOnlyWhileMouseInside")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setShowsBorderOnlyWhileMouseInside:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowsStateBy">
      <MemberSignature Language="C#" Value="public virtual nint ShowsStateBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint ShowsStateBy" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.ShowsStateBy" />
      <MemberSignature Language="F#" Value="member this.ShowsStateBy : nint with get, set" Usage="AppKit.NSButtonCell.ShowsStateBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("showsStateBy")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setShowsStateBy:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sound">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSSound Sound { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSSound Sound" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.Sound" />
      <MemberSignature Language="F#" Value="member this.Sound : AppKit.NSSound with get, set" Usage="AppKit.NSButtonCell.Sound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("sound")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setSound:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSSound</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.Title" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="AppKit.NSButtonCell.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("title")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setTitle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transparent">
      <MemberSignature Language="C#" Value="public virtual bool Transparent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Transparent" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSButtonCell.Transparent" />
      <MemberSignature Language="F#" Value="member this.Transparent : bool with get, set" Usage="AppKit.NSButtonCell.Transparent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isTransparent")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setTransparent:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
