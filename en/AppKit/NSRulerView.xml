<Type Name="NSRulerView" FullName="AppKit.NSRulerView">
  <TypeSignature Language="C#" Value="public class NSRulerView : AppKit.NSView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSRulerView extends AppKit.NSView" />
  <TypeSignature Language="DocId" Value="T:AppKit.NSRulerView" />
  <TypeSignature Language="F#" Value="type NSRulerView = class&#xA;    inherit NSView" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>AppKit.NSView</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("NSRulerView", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSRulerView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSRulerView.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSRulerView (CoreGraphics.CGRect frameRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype CoreGraphics.CGRect frameRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSRulerView.#ctor(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="new AppKit.NSRulerView : CoreGraphics.CGRect -&gt; AppKit.NSRulerView" Usage="new AppKit.NSRulerView frameRect" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithFrame:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="frameRect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="frameRect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSRulerView (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSRulerView.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new AppKit.NSRulerView : Foundation.NSCoder -&gt; AppKit.NSRulerView" Usage="new AppKit.NSRulerView coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSRulerView (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSRulerView.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AppKit.NSRulerView : Foundation.NSObjectFlag -&gt; AppKit.NSRulerView" Usage="new AppKit.NSRulerView t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSRulerView (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSRulerView.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AppKit.NSRulerView : nativeint -&gt; AppKit.NSRulerView" Usage="new AppKit.NSRulerView handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSRulerView (AppKit.NSScrollView scrollView, AppKit.NSRulerOrientation orientation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class AppKit.NSScrollView scrollView, valuetype AppKit.NSRulerOrientation orientation) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSRulerView.#ctor(AppKit.NSScrollView,AppKit.NSRulerOrientation)" />
      <MemberSignature Language="F#" Value="new AppKit.NSRulerView : AppKit.NSScrollView * AppKit.NSRulerOrientation -&gt; AppKit.NSRulerView" Usage="new AppKit.NSRulerView (scrollView, orientation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithScrollView:orientation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="scrollView" Type="AppKit.NSScrollView" />
        <Parameter Name="orientation" Type="AppKit.NSRulerOrientation" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <param name="orientation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessoryView">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSView AccessoryView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSView AccessoryView" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSRulerView.AccessoryView" />
      <MemberSignature Language="F#" Value="member this.AccessoryView : AppKit.NSView with get, set" Usage="AppKit.NSRulerView.AccessoryView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("accessoryView", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAccessoryView:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMarker">
      <MemberSignature Language="C#" Value="public virtual void AddMarker (AppKit.NSRulerMarker marker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddMarker(class AppKit.NSRulerMarker marker) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSRulerView.AddMarker(AppKit.NSRulerMarker)" />
      <MemberSignature Language="F#" Value="abstract member AddMarker : AppKit.NSRulerMarker -&gt; unit&#xA;override this.AddMarker : AppKit.NSRulerMarker -&gt; unit" Usage="nSRulerView.AddMarker marker" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("addMarker:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="marker" Type="AppKit.NSRulerMarker" />
      </Parameters>
      <Docs>
        <param name="marker">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaselineLocation">
      <MemberSignature Language="C#" Value="public virtual nfloat BaselineLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat BaselineLocation" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSRulerView.BaselineLocation" />
      <MemberSignature Language="F#" Value="member this.BaselineLocation : nfloat" Usage="AppKit.NSRulerView.BaselineLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("baselineLocation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSRulerView.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AppKit.NSRulerView.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientView">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSView ClientView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSView ClientView" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSRulerView.ClientView" />
      <MemberSignature Language="F#" Value="member this.ClientView : AppKit.NSView with get, set" Usage="AppKit.NSRulerView.ClientView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("clientView", ObjCRuntime.ArgumentSemantic.Weak)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setClientView:", ObjCRuntime.ArgumentSemantic.Weak)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSRulerView.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="nSRulerView.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawHashMarksAndLabels">
      <MemberSignature Language="C#" Value="public virtual void DrawHashMarksAndLabels (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawHashMarksAndLabels(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSRulerView.DrawHashMarksAndLabels(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member DrawHashMarksAndLabels : CoreGraphics.CGRect -&gt; unit&#xA;override this.DrawHashMarksAndLabels : CoreGraphics.CGRect -&gt; unit" Usage="nSRulerView.DrawHashMarksAndLabels rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawHashMarksAndLabelsInRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMarkers">
      <MemberSignature Language="C#" Value="public virtual void DrawMarkers (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawMarkers(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSRulerView.DrawMarkers(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member DrawMarkers : CoreGraphics.CGRect -&gt; unit&#xA;override this.DrawMarkers : CoreGraphics.CGRect -&gt; unit" Usage="nSRulerView.DrawMarkers rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawMarkersInRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateHashMarks">
      <MemberSignature Language="C#" Value="public virtual void InvalidateHashMarks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateHashMarks() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSRulerView.InvalidateHashMarks" />
      <MemberSignature Language="F#" Value="abstract member InvalidateHashMarks : unit -&gt; unit&#xA;override this.InvalidateHashMarks : unit -&gt; unit" Usage="nSRulerView.InvalidateHashMarks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("invalidateHashMarks")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlipped">
      <MemberSignature Language="C#" Value="public virtual bool IsFlipped { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFlipped" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSRulerView.IsFlipped" />
      <MemberSignature Language="F#" Value="member this.IsFlipped : bool" Usage="AppKit.NSRulerView.IsFlipped" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isFlipped")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Markers">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSRulerMarker[] Markers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSRulerMarker[] Markers" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSRulerView.Markers" />
      <MemberSignature Language="F#" Value="member this.Markers : AppKit.NSRulerMarker[] with get, set" Usage="AppKit.NSRulerView.Markers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("markers", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMarkers:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSRulerMarker[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasurementUnits">
      <MemberSignature Language="C#" Value="public virtual string MeasurementUnits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MeasurementUnits" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSRulerView.MeasurementUnits" />
      <MemberSignature Language="F#" Value="member this.MeasurementUnits : string with get, set" Usage="AppKit.NSRulerView.MeasurementUnits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("measurementUnits")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMeasurementUnits:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveRulerline">
      <MemberSignature Language="C#" Value="public virtual void MoveRulerline (nfloat oldLocation, nfloat newLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveRulerline(valuetype System.nfloat oldLocation, valuetype System.nfloat newLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSRulerView.MoveRulerline(System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member MoveRulerline : nfloat * nfloat -&gt; unit&#xA;override this.MoveRulerline : nfloat * nfloat -&gt; unit" Usage="nSRulerView.MoveRulerline (oldLocation, newLocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("moveRulerlineFromLocation:toLocation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldLocation" Type="System.nfloat" />
        <Parameter Name="newLocation" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="oldLocation">To be added.</param>
        <param name="newLocation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSRulerOrientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AppKit.NSRulerOrientation Orientation" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSRulerView.Orientation" />
      <MemberSignature Language="F#" Value="member this.Orientation : AppKit.NSRulerOrientation with get, set" Usage="AppKit.NSRulerView.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("orientation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setOrientation:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSRulerOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginOffset">
      <MemberSignature Language="C#" Value="public virtual nfloat OriginOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat OriginOffset" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSRulerView.OriginOffset" />
      <MemberSignature Language="F#" Value="member this.OriginOffset : nfloat with get, set" Usage="AppKit.NSRulerView.OriginOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("originOffset")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setOriginOffset:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterUnit">
      <MemberSignature Language="C#" Value="public static void RegisterUnit (string unitName, string abbreviation, nfloat conversionFactor, Foundation.NSNumber[] stepUpCycle, Foundation.NSNumber[] stepDownCycle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterUnit(string unitName, string abbreviation, valuetype System.nfloat conversionFactor, class Foundation.NSNumber[] stepUpCycle, class Foundation.NSNumber[] stepDownCycle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSRulerView.RegisterUnit(System.String,System.String,System.nfloat,Foundation.NSNumber[],Foundation.NSNumber[])" />
      <MemberSignature Language="F#" Value="static member RegisterUnit : string * string * nfloat * Foundation.NSNumber[] * Foundation.NSNumber[] -&gt; unit" Usage="AppKit.NSRulerView.RegisterUnit (unitName, abbreviation, conversionFactor, stepUpCycle, stepDownCycle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("registerUnitWithName:abbreviation:unitToPointsConversionFactor:stepUpCycle:stepDownCycle:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unitName" Type="System.String" />
        <Parameter Name="abbreviation" Type="System.String" />
        <Parameter Name="conversionFactor" Type="System.nfloat" />
        <Parameter Name="stepUpCycle" Type="Foundation.NSNumber[]" />
        <Parameter Name="stepDownCycle" Type="Foundation.NSNumber[]" />
      </Parameters>
      <Docs>
        <param name="unitName">To be added.</param>
        <param name="abbreviation">To be added.</param>
        <param name="conversionFactor">To be added.</param>
        <param name="stepUpCycle">To be added.</param>
        <param name="stepDownCycle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMarker">
      <MemberSignature Language="C#" Value="public virtual void RemoveMarker (AppKit.NSRulerMarker marker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveMarker(class AppKit.NSRulerMarker marker) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSRulerView.RemoveMarker(AppKit.NSRulerMarker)" />
      <MemberSignature Language="F#" Value="abstract member RemoveMarker : AppKit.NSRulerMarker -&gt; unit&#xA;override this.RemoveMarker : AppKit.NSRulerMarker -&gt; unit" Usage="nSRulerView.RemoveMarker marker" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("removeMarker:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="marker" Type="AppKit.NSRulerMarker" />
      </Parameters>
      <Docs>
        <param name="marker">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredThickness">
      <MemberSignature Language="C#" Value="public virtual nfloat RequiredThickness { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat RequiredThickness" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSRulerView.RequiredThickness" />
      <MemberSignature Language="F#" Value="member this.RequiredThickness : nfloat" Usage="AppKit.NSRulerView.RequiredThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("requiredThickness")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReservedThicknessForAccessoryView">
      <MemberSignature Language="C#" Value="public virtual nfloat ReservedThicknessForAccessoryView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ReservedThicknessForAccessoryView" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSRulerView.ReservedThicknessForAccessoryView" />
      <MemberSignature Language="F#" Value="member this.ReservedThicknessForAccessoryView : nfloat with get, set" Usage="AppKit.NSRulerView.ReservedThicknessForAccessoryView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("reservedThicknessForAccessoryView")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setReservedThicknessForAccessoryView:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReservedThicknessForMarkers">
      <MemberSignature Language="C#" Value="public virtual nfloat ReservedThicknessForMarkers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ReservedThicknessForMarkers" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSRulerView.ReservedThicknessForMarkers" />
      <MemberSignature Language="F#" Value="member this.ReservedThicknessForMarkers : nfloat with get, set" Usage="AppKit.NSRulerView.ReservedThicknessForMarkers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("reservedThicknessForMarkers")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setReservedThicknessForMarkers:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleThickness">
      <MemberSignature Language="C#" Value="public virtual nfloat RuleThickness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat RuleThickness" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSRulerView.RuleThickness" />
      <MemberSignature Language="F#" Value="member this.RuleThickness : nfloat with get, set" Usage="AppKit.NSRulerView.RuleThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("ruleThickness")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setRuleThickness:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollView">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSScrollView ScrollView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSScrollView ScrollView" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSRulerView.ScrollView" />
      <MemberSignature Language="F#" Value="member this.ScrollView : AppKit.NSScrollView with get, set" Usage="AppKit.NSRulerView.ScrollView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("scrollView", ObjCRuntime.ArgumentSemantic.Weak)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setScrollView:", ObjCRuntime.ArgumentSemantic.Weak)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSScrollView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackMarker">
      <MemberSignature Language="C#" Value="public virtual bool TrackMarker (AppKit.NSRulerMarker marker, AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TrackMarker(class AppKit.NSRulerMarker marker, class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSRulerView.TrackMarker(AppKit.NSRulerMarker,AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member TrackMarker : AppKit.NSRulerMarker * AppKit.NSEvent -&gt; bool&#xA;override this.TrackMarker : AppKit.NSRulerMarker * AppKit.NSEvent -&gt; bool" Usage="nSRulerView.TrackMarker (marker, theEvent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("trackMarker:withMouseEvent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="marker" Type="AppKit.NSRulerMarker" />
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="marker">To be added.</param>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
