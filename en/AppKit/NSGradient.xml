<Type Name="NSGradient" FullName="AppKit.NSGradient">
  <TypeSignature Language="C#" Value="public class NSGradient : Foundation.NSObject, Foundation.INSCopying, Foundation.INSSecureCoding, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSGradient extends Foundation.NSObject implements class Foundation.INSCoding, class Foundation.INSCopying, class Foundation.INSSecureCoding, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AppKit.NSGradient" />
  <TypeSignature Language="F#" Value="type NSGradient = class&#xA;    inherit NSObject&#xA;    interface INSCoding&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSCopying&#xA;    interface INSSecureCoding" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSSecureCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("NSGradient", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSGradient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSGradient (AppKit.NSColor[] colorArray);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class AppKit.NSColor[] colorArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.#ctor(AppKit.NSColor[])" />
      <MemberSignature Language="F#" Value="new AppKit.NSGradient : AppKit.NSColor[] -&gt; AppKit.NSGradient" Usage="new AppKit.NSGradient colorArray" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithColors:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="colorArray" Type="AppKit.NSColor[]" />
      </Parameters>
      <Docs>
        <param name="colorArray">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSGradient (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new AppKit.NSGradient : Foundation.NSCoder -&gt; AppKit.NSGradient" Usage="new AppKit.NSGradient coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSGradient (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AppKit.NSGradient : Foundation.NSObjectFlag -&gt; AppKit.NSGradient" Usage="new AppKit.NSGradient t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSGradient (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AppKit.NSGradient : nativeint -&gt; AppKit.NSGradient" Usage="new AppKit.NSGradient handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSGradient (AppKit.NSColor startingColor, AppKit.NSColor endingColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class AppKit.NSColor startingColor, class AppKit.NSColor endingColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.#ctor(AppKit.NSColor,AppKit.NSColor)" />
      <MemberSignature Language="F#" Value="new AppKit.NSGradient : AppKit.NSColor * AppKit.NSColor -&gt; AppKit.NSGradient" Usage="new AppKit.NSGradient (startingColor, endingColor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithStartingColor:endingColor:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="startingColor" Type="AppKit.NSColor" />
        <Parameter Name="endingColor" Type="AppKit.NSColor" />
      </Parameters>
      <Docs>
        <param name="startingColor">To be added.</param>
        <param name="endingColor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSGradient (AppKit.NSColor[] colors, double[] locations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class AppKit.NSColor[] colors, float64[] locations) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.#ctor(AppKit.NSColor[],System.Double[])" />
      <MemberSignature Language="F#" Value="new AppKit.NSGradient : AppKit.NSColor[] * double[] -&gt; AppKit.NSGradient" Usage="new AppKit.NSGradient (colors, locations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="colors" Type="AppKit.NSColor[]" />
        <Parameter Name="locations" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="colors">To be added.</param>
        <param name="locations">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSGradient (AppKit.NSColor[] colors, float[] locations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class AppKit.NSColor[] colors, float32[] locations) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.#ctor(AppKit.NSColor[],System.Single[])" />
      <MemberSignature Language="F#" Value="new AppKit.NSGradient : AppKit.NSColor[] * single[] -&gt; AppKit.NSGradient" Usage="new AppKit.NSGradient (colors, locations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="colors" Type="AppKit.NSColor[]" />
        <Parameter Name="locations" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="colors">To be added.</param>
        <param name="locations">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSGradient (AppKit.NSColor[] colors, double[] locations, AppKit.NSColorSpace colorSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class AppKit.NSColor[] colors, float64[] locations, class AppKit.NSColorSpace colorSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.#ctor(AppKit.NSColor[],System.Double[],AppKit.NSColorSpace)" />
      <MemberSignature Language="F#" Value="new AppKit.NSGradient : AppKit.NSColor[] * double[] * AppKit.NSColorSpace -&gt; AppKit.NSGradient" Usage="new AppKit.NSGradient (colors, locations, colorSpace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="colors" Type="AppKit.NSColor[]" />
        <Parameter Name="locations" Type="System.Double[]" />
        <Parameter Name="colorSpace" Type="AppKit.NSColorSpace" />
      </Parameters>
      <Docs>
        <param name="colors">To be added.</param>
        <param name="locations">To be added.</param>
        <param name="colorSpace">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSGradient (AppKit.NSColor[] colors, float[] locations, AppKit.NSColorSpace colorSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class AppKit.NSColor[] colors, float32[] locations, class AppKit.NSColorSpace colorSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.#ctor(AppKit.NSColor[],System.Single[],AppKit.NSColorSpace)" />
      <MemberSignature Language="F#" Value="new AppKit.NSGradient : AppKit.NSColor[] * single[] * AppKit.NSColorSpace -&gt; AppKit.NSGradient" Usage="new AppKit.NSGradient (colors, locations, colorSpace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="colors" Type="AppKit.NSColor[]" />
        <Parameter Name="locations" Type="System.Single[]" />
        <Parameter Name="colorSpace" Type="AppKit.NSColorSpace" />
      </Parameters>
      <Docs>
        <param name="colors">To be added.</param>
        <param name="locations">To be added.</param>
        <param name="colorSpace">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSGradient.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AppKit.NSGradient.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorSpace">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSColorSpace ColorSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSColorSpace ColorSpace" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSGradient.ColorSpace" />
      <MemberSignature Language="F#" Value="member this.ColorSpace : AppKit.NSColorSpace" Usage="AppKit.NSGradient.ColorSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("colorSpace")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSColorSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorStopsCount">
      <MemberSignature Language="C#" Value="public virtual nint ColorStopsCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint ColorStopsCount" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSGradient.ColorStopsCount" />
      <MemberSignature Language="F#" Value="member this.ColorStopsCount : nint" Usage="AppKit.NSGradient.ColorStopsCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("numberOfColorStops")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject Copy (Foundation.NSZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject Copy(class Foundation.NSZone zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.Copy(Foundation.NSZone)" />
      <MemberSignature Language="F#" Value="override this.Copy : Foundation.NSZone -&gt; Foundation.NSObject" Usage="nSGradient.Copy zone" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCopying.Copy(Foundation.NSZone)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyWithZone:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawFromCenterRadius">
      <MemberSignature Language="C#" Value="public virtual void DrawFromCenterRadius (CoreGraphics.CGPoint startCenter, nfloat startRadius, CoreGraphics.CGPoint endCenter, nfloat endRadius, AppKit.NSGradientDrawingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawFromCenterRadius(valuetype CoreGraphics.CGPoint startCenter, valuetype System.nfloat startRadius, valuetype CoreGraphics.CGPoint endCenter, valuetype System.nfloat endRadius, valuetype AppKit.NSGradientDrawingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.DrawFromCenterRadius(CoreGraphics.CGPoint,System.nfloat,CoreGraphics.CGPoint,System.nfloat,AppKit.NSGradientDrawingOptions)" />
      <MemberSignature Language="F#" Value="abstract member DrawFromCenterRadius : CoreGraphics.CGPoint * nfloat * CoreGraphics.CGPoint * nfloat * AppKit.NSGradientDrawingOptions -&gt; unit&#xA;override this.DrawFromCenterRadius : CoreGraphics.CGPoint * nfloat * CoreGraphics.CGPoint * nfloat * AppKit.NSGradientDrawingOptions -&gt; unit" Usage="nSGradient.DrawFromCenterRadius (startCenter, startRadius, endCenter, endRadius, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawFromCenter:radius:toCenter:radius:options:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startCenter" Type="CoreGraphics.CGPoint" />
        <Parameter Name="startRadius" Type="System.nfloat" />
        <Parameter Name="endCenter" Type="CoreGraphics.CGPoint" />
        <Parameter Name="endRadius" Type="System.nfloat" />
        <Parameter Name="options" Type="AppKit.NSGradientDrawingOptions" />
      </Parameters>
      <Docs>
        <param name="startCenter">To be added.</param>
        <param name="startRadius">To be added.</param>
        <param name="endCenter">To be added.</param>
        <param name="endRadius">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawFromPoint">
      <MemberSignature Language="C#" Value="public virtual void DrawFromPoint (CoreGraphics.CGPoint startingPoint, CoreGraphics.CGPoint endingPoint, AppKit.NSGradientDrawingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawFromPoint(valuetype CoreGraphics.CGPoint startingPoint, valuetype CoreGraphics.CGPoint endingPoint, valuetype AppKit.NSGradientDrawingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.DrawFromPoint(CoreGraphics.CGPoint,CoreGraphics.CGPoint,AppKit.NSGradientDrawingOptions)" />
      <MemberSignature Language="F#" Value="abstract member DrawFromPoint : CoreGraphics.CGPoint * CoreGraphics.CGPoint * AppKit.NSGradientDrawingOptions -&gt; unit&#xA;override this.DrawFromPoint : CoreGraphics.CGPoint * CoreGraphics.CGPoint * AppKit.NSGradientDrawingOptions -&gt; unit" Usage="nSGradient.DrawFromPoint (startingPoint, endingPoint, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawFromPoint:toPoint:options:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingPoint" Type="CoreGraphics.CGPoint" />
        <Parameter Name="endingPoint" Type="CoreGraphics.CGPoint" />
        <Parameter Name="options" Type="AppKit.NSGradientDrawingOptions" />
      </Parameters>
      <Docs>
        <param name="startingPoint">To be added.</param>
        <param name="endingPoint">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawInBezierPath">
      <MemberSignature Language="C#" Value="public virtual void DrawInBezierPath (AppKit.NSBezierPath path, CoreGraphics.CGPoint relativeCenterPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawInBezierPath(class AppKit.NSBezierPath path, valuetype CoreGraphics.CGPoint relativeCenterPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.DrawInBezierPath(AppKit.NSBezierPath,CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member DrawInBezierPath : AppKit.NSBezierPath * CoreGraphics.CGPoint -&gt; unit&#xA;override this.DrawInBezierPath : AppKit.NSBezierPath * CoreGraphics.CGPoint -&gt; unit" Usage="nSGradient.DrawInBezierPath (path, relativeCenterPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawInBezierPath:relativeCenterPosition:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="AppKit.NSBezierPath" />
        <Parameter Name="relativeCenterPosition" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="relativeCenterPosition">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawInBezierPath">
      <MemberSignature Language="C#" Value="public virtual void DrawInBezierPath (AppKit.NSBezierPath path, nfloat angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawInBezierPath(class AppKit.NSBezierPath path, valuetype System.nfloat angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.DrawInBezierPath(AppKit.NSBezierPath,System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member DrawInBezierPath : AppKit.NSBezierPath * nfloat -&gt; unit&#xA;override this.DrawInBezierPath : AppKit.NSBezierPath * nfloat -&gt; unit" Usage="nSGradient.DrawInBezierPath (path, angle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawInBezierPath:angle:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="AppKit.NSBezierPath" />
        <Parameter Name="angle" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="angle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawInRect">
      <MemberSignature Language="C#" Value="public virtual void DrawInRect (CoreGraphics.CGRect rect, CoreGraphics.CGPoint relativeCenterPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawInRect(valuetype CoreGraphics.CGRect rect, valuetype CoreGraphics.CGPoint relativeCenterPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.DrawInRect(CoreGraphics.CGRect,CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member DrawInRect : CoreGraphics.CGRect * CoreGraphics.CGPoint -&gt; unit&#xA;override this.DrawInRect : CoreGraphics.CGRect * CoreGraphics.CGPoint -&gt; unit" Usage="nSGradient.DrawInRect (rect, relativeCenterPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawInRect:relativeCenterPosition:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
        <Parameter Name="relativeCenterPosition" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <param name="relativeCenterPosition">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawInRect">
      <MemberSignature Language="C#" Value="public virtual void DrawInRect (CoreGraphics.CGRect rect, nfloat angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawInRect(valuetype CoreGraphics.CGRect rect, valuetype System.nfloat angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.DrawInRect(CoreGraphics.CGRect,System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member DrawInRect : CoreGraphics.CGRect * nfloat -&gt; unit&#xA;override this.DrawInRect : CoreGraphics.CGRect * nfloat -&gt; unit" Usage="nSGradient.DrawInRect (rect, angle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawInRect:angle:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
        <Parameter Name="angle" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <param name="angle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeTo">
      <MemberSignature Language="C#" Value="public virtual void EncodeTo (Foundation.NSCoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeTo(class Foundation.NSCoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.EncodeTo(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member EncodeTo : Foundation.NSCoder -&gt; unit&#xA;override this.EncodeTo : Foundation.NSCoder -&gt; unit" Usage="nSGradient.EncodeTo encoder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCoding.EncodeTo(Foundation.NSCoder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="encoder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColor">
      <MemberSignature Language="C#" Value="public virtual void GetColor (out AppKit.NSColor color, out nfloat location, nint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetColor([out] class AppKit.NSColor&amp; color, [out] valuetype System.nfloat&amp; location, valuetype System.nint index) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.GetColor(AppKit.NSColor@,System.nfloat@,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member GetColor :  *  * nint -&gt; unit&#xA;override this.GetColor :  *  * nint -&gt; unit" Usage="nSGradient.GetColor (color, location, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("getColor:location:atIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="AppKit.NSColor" RefType="out" />
        <Parameter Name="location" Type="System.nfloat" RefType="out" />
        <Parameter Name="index" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <param name="location">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterpolatedColor">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSColor GetInterpolatedColor (nfloat location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSColor GetInterpolatedColor(valuetype System.nfloat location) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSGradient.GetInterpolatedColor(System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member GetInterpolatedColor : nfloat -&gt; AppKit.NSColor&#xA;override this.GetInterpolatedColor : nfloat -&gt; AppKit.NSColor" Usage="nSGradient.GetInterpolatedColor location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("interpolatedColorAtLocation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSColor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
