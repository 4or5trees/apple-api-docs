<Type Name="INSPasteboardTypeOwner" FullName="AppKit.INSPasteboardTypeOwner">
  <TypeSignature Language="C#" Value="public interface INSPasteboardTypeOwner : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INSPasteboardTypeOwner implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AppKit.INSPasteboardTypeOwner" />
  <TypeSignature Language="F#" Value="type INSPasteboardTypeOwner = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="NSPasteboardTypeOwner", WrapperType=typeof(AppKit.NSPasteboardTypeOwnerWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="ProvideData", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSPasteboard), typeof(System.String) }, Selector="pasteboard:provideDataForType:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PasteboardChangedOwner", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(AppKit.NSPasteboard) }, Selector="pasteboardChangedOwner:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ProvideData">
      <MemberSignature Language="C#" Value="public void ProvideData (AppKit.NSPasteboard sender, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProvideData(class AppKit.NSPasteboard sender, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.INSPasteboardTypeOwner.ProvideData(AppKit.NSPasteboard,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ProvideData : AppKit.NSPasteboard * string -&gt; unit" Usage="iNSPasteboardTypeOwner.ProvideData (sender, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pasteboard:provideDataForType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="AppKit.NSPasteboard" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
