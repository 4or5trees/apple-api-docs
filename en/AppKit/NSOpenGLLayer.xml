<Type Name="NSOpenGLLayer" FullName="AppKit.NSOpenGLLayer">
  <TypeSignature Language="C#" Value="public class NSOpenGLLayer : CoreAnimation.CAOpenGLLayer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSOpenGLLayer extends CoreAnimation.CAOpenGLLayer" />
  <TypeSignature Language="DocId" Value="T:AppKit.NSOpenGLLayer" />
  <TypeSignature Language="F#" Value="type NSOpenGLLayer = class&#xA;    inherit CAOpenGLLayer" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CoreAnimation.CAOpenGLLayer</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("NSOpenGLLayer", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.None, "Use 'Metal' Framework instead.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSOpenGLLayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSOpenGLLayer.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSOpenGLLayer (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSOpenGLLayer.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new AppKit.NSOpenGLLayer : Foundation.NSCoder -&gt; AppKit.NSOpenGLLayer" Usage="new AppKit.NSOpenGLLayer coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSOpenGLLayer (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSOpenGLLayer.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AppKit.NSOpenGLLayer : Foundation.NSObjectFlag -&gt; AppKit.NSOpenGLLayer" Usage="new AppKit.NSOpenGLLayer t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSOpenGLLayer (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSOpenGLLayer.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AppKit.NSOpenGLLayer : nativeint -&gt; AppKit.NSOpenGLLayer" Usage="new AppKit.NSOpenGLLayer handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDraw">
      <MemberSignature Language="C#" Value="public virtual bool CanDraw (AppKit.NSOpenGLContext context, AppKit.NSOpenGLPixelFormat pixelFormat, double t, ref CoreVideo.CVTimeStamp ts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDraw(class AppKit.NSOpenGLContext context, class AppKit.NSOpenGLPixelFormat pixelFormat, float64 t, valuetype CoreVideo.CVTimeStamp&amp; ts) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSOpenGLLayer.CanDraw(AppKit.NSOpenGLContext,AppKit.NSOpenGLPixelFormat,System.Double,CoreVideo.CVTimeStamp@)" />
      <MemberSignature Language="F#" Value="abstract member CanDraw : AppKit.NSOpenGLContext * AppKit.NSOpenGLPixelFormat * double *  -&gt; bool&#xA;override this.CanDraw : AppKit.NSOpenGLContext * AppKit.NSOpenGLPixelFormat * double *  -&gt; bool" Usage="nSOpenGLLayer.CanDraw (context, pixelFormat, t, ts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("canDrawInOpenGLContext:pixelFormat:forLayerTime:displayTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AppKit.NSOpenGLContext" />
        <Parameter Name="pixelFormat" Type="AppKit.NSOpenGLPixelFormat" />
        <Parameter Name="t" Type="System.Double" />
        <Parameter Name="ts" Type="CoreVideo.CVTimeStamp" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="pixelFormat">To be added.</param>
        <param name="t">To be added.</param>
        <param name="ts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSOpenGLLayer.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AppKit.NSOpenGLLayer.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSOpenGLLayer.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="nSOpenGLLayer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public virtual void Draw (AppKit.NSOpenGLContext context, AppKit.NSOpenGLPixelFormat pixelFormat, double t, ref CoreVideo.CVTimeStamp ts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(class AppKit.NSOpenGLContext context, class AppKit.NSOpenGLPixelFormat pixelFormat, float64 t, valuetype CoreVideo.CVTimeStamp&amp; ts) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSOpenGLLayer.Draw(AppKit.NSOpenGLContext,AppKit.NSOpenGLPixelFormat,System.Double,CoreVideo.CVTimeStamp@)" />
      <MemberSignature Language="F#" Value="abstract member Draw : AppKit.NSOpenGLContext * AppKit.NSOpenGLPixelFormat * double *  -&gt; unit&#xA;override this.Draw : AppKit.NSOpenGLContext * AppKit.NSOpenGLPixelFormat * double *  -&gt; unit" Usage="nSOpenGLLayer.Draw (context, pixelFormat, t, ts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawInOpenGLContext:pixelFormat:forLayerTime:displayTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AppKit.NSOpenGLContext" />
        <Parameter Name="pixelFormat" Type="AppKit.NSOpenGLPixelFormat" />
        <Parameter Name="t" Type="System.Double" />
        <Parameter Name="ts" Type="CoreVideo.CVTimeStamp" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="pixelFormat">To be added.</param>
        <param name="t">To be added.</param>
        <param name="ts">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOpenGLContext">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSOpenGLContext GetOpenGLContext (AppKit.NSOpenGLPixelFormat pixelFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSOpenGLContext GetOpenGLContext(class AppKit.NSOpenGLPixelFormat pixelFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSOpenGLLayer.GetOpenGLContext(AppKit.NSOpenGLPixelFormat)" />
      <MemberSignature Language="F#" Value="abstract member GetOpenGLContext : AppKit.NSOpenGLPixelFormat -&gt; AppKit.NSOpenGLContext&#xA;override this.GetOpenGLContext : AppKit.NSOpenGLPixelFormat -&gt; AppKit.NSOpenGLContext" Usage="nSOpenGLLayer.GetOpenGLContext pixelFormat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("openGLContextForPixelFormat:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSOpenGLContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixelFormat" Type="AppKit.NSOpenGLPixelFormat" />
      </Parameters>
      <Docs>
        <param name="pixelFormat">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOpenGLPixelFormat">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSOpenGLPixelFormat GetOpenGLPixelFormat (uint mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSOpenGLPixelFormat GetOpenGLPixelFormat(unsigned int32 mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSOpenGLLayer.GetOpenGLPixelFormat(System.UInt32)" />
      <MemberSignature Language="F#" Value="abstract member GetOpenGLPixelFormat : uint32 -&gt; AppKit.NSOpenGLPixelFormat&#xA;override this.GetOpenGLPixelFormat : uint32 -&gt; AppKit.NSOpenGLPixelFormat" Usage="nSOpenGLLayer.GetOpenGLPixelFormat mask" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("openGLPixelFormatForDisplayMask:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSOpenGLPixelFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenGLContext">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSOpenGLContext OpenGLContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSOpenGLContext OpenGLContext" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSOpenGLLayer.OpenGLContext" />
      <MemberSignature Language="F#" Value="member this.OpenGLContext : AppKit.NSOpenGLContext with get, set" Usage="AppKit.NSOpenGLLayer.OpenGLContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("openGLContext", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setOpenGLContext:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSOpenGLContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenGLPixelFormat">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSOpenGLPixelFormat OpenGLPixelFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSOpenGLPixelFormat OpenGLPixelFormat" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSOpenGLLayer.OpenGLPixelFormat" />
      <MemberSignature Language="F#" Value="member this.OpenGLPixelFormat : AppKit.NSOpenGLPixelFormat with get, set" Usage="AppKit.NSOpenGLLayer.OpenGLPixelFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("openGLPixelFormat", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setOpenGLPixelFormat:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSOpenGLPixelFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSView View { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSView View" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSOpenGLLayer.View" />
      <MemberSignature Language="F#" Value="member this.View : AppKit.NSView with get, set" Usage="AppKit.NSOpenGLLayer.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("view", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setView:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
