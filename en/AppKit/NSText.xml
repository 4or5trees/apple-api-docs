<Type Name="NSText" FullName="AppKit.NSText">
  <TypeSignature Language="C#" Value="public class NSText : AppKit.NSView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSText extends AppKit.NSView" />
  <TypeSignature Language="DocId" Value="T:AppKit.NSText" />
  <TypeSignature Language="F#" Value="type NSText = class&#xA;    inherit NSView" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>AppKit.NSView</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("NSText", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSText (CoreGraphics.CGRect frameRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype CoreGraphics.CGRect frameRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.#ctor(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="new AppKit.NSText : CoreGraphics.CGRect -&gt; AppKit.NSText" Usage="new AppKit.NSText frameRect" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithFrame:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="frameRect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="frameRect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSText (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new AppKit.NSText : Foundation.NSCoder -&gt; AppKit.NSText" Usage="new AppKit.NSText coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSText (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AppKit.NSText : Foundation.NSObjectFlag -&gt; AppKit.NSText" Usage="new AppKit.NSText t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSText (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AppKit.NSText : nativeint -&gt; AppKit.NSText" Usage="new AppKit.NSText handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignCenter">
      <MemberSignature Language="C#" Value="public virtual void AlignCenter (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AlignCenter(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.AlignCenter(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member AlignCenter : Foundation.NSObject -&gt; unit&#xA;override this.AlignCenter : Foundation.NSObject -&gt; unit" Usage="nSText.AlignCenter sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("alignCenter:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignLeft">
      <MemberSignature Language="C#" Value="public virtual void AlignLeft (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AlignLeft(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.AlignLeft(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member AlignLeft : Foundation.NSObject -&gt; unit&#xA;override this.AlignLeft : Foundation.NSObject -&gt; unit" Usage="nSText.AlignLeft sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("alignLeft:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSTextAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AppKit.NSTextAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.Alignment" />
      <MemberSignature Language="F#" Value="member this.Alignment : AppKit.NSTextAlignment with get, set" Usage="AppKit.NSText.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("alignment")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAlignment:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSTextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignRight">
      <MemberSignature Language="C#" Value="public virtual void AlignRight (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AlignRight(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.AlignRight(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member AlignRight : Foundation.NSObject -&gt; unit&#xA;override this.AlignRight : Foundation.NSObject -&gt; unit" Usage="nSText.AlignRight sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("alignRight:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSColor BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSColor BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.BackgroundColor" />
      <MemberSignature Language="F#" Value="member this.BackgroundColor : AppKit.NSColor with get, set" Usage="AppKit.NSText.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("backgroundColor", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setBackgroundColor:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseWritingDirection">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSWritingDirection BaseWritingDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AppKit.NSWritingDirection BaseWritingDirection" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.BaseWritingDirection" />
      <MemberSignature Language="F#" Value="member this.BaseWritingDirection : AppKit.NSWritingDirection with get, set" Usage="AppKit.NSText.BaseWritingDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("baseWritingDirection")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setBaseWritingDirection:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSWritingDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeFont">
      <MemberSignature Language="C#" Value="public virtual void ChangeFont (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeFont(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.ChangeFont(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ChangeFont : Foundation.NSObject -&gt; unit&#xA;override this.ChangeFont : Foundation.NSObject -&gt; unit" Usage="nSText.ChangeFont sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changeFont:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public virtual void CheckSpelling (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSpelling(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.CheckSpelling(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member CheckSpelling : Foundation.NSObject -&gt; unit&#xA;override this.CheckSpelling : Foundation.NSObject -&gt; unit" Usage="nSText.CheckSpelling sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("checkSpelling:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AppKit.NSText.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual void Copy (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.Copy(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="override this.Copy : Foundation.NSObject -&gt; unit" Usage="nSText.Copy sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copy:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFont">
      <MemberSignature Language="C#" Value="public virtual void CopyFont (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFont(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.CopyFont(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member CopyFont : Foundation.NSObject -&gt; unit&#xA;override this.CopyFont : Foundation.NSObject -&gt; unit" Usage="nSText.CopyFont sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyFont:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyRuler">
      <MemberSignature Language="C#" Value="public virtual void CopyRuler (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyRuler(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.CopyRuler(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member CopyRuler : Foundation.NSObject -&gt; unit&#xA;override this.CopyRuler : Foundation.NSObject -&gt; unit" Usage="nSText.CopyRuler sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyRuler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public virtual void Cut (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cut(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.Cut(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member Cut : Foundation.NSObject -&gt; unit&#xA;override this.Cut : Foundation.NSObject -&gt; unit" Usage="nSText.Cut sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("cut:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delegate">
      <MemberSignature Language="C#" Value="public AppKit.INSTextDelegate Delegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.INSTextDelegate Delegate" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.Delegate" />
      <MemberSignature Language="F#" Value="member this.Delegate : AppKit.INSTextDelegate with get, set" Usage="AppKit.NSText.Delegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.INSTextDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual void Delete (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.Delete(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member Delete : Foundation.NSObject -&gt; unit&#xA;override this.Delete : Foundation.NSObject -&gt; unit" Usage="nSText.Delete sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("delete:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidBeginEditingNotification">
      <MemberSignature Language="C#" Value="public static Foundation.NSString DidBeginEditingNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString DidBeginEditingNotification" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.DidBeginEditingNotification" />
      <MemberSignature Language="F#" Value="member this.DidBeginEditingNotification : Foundation.NSString" Usage="AppKit.NSText.DidBeginEditingNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Advice("Use NSText.Notifications.ObserveDidBeginEditing helper method instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Field("NSTextDidBeginEditingNotification", "AppKit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeNotification">
      <MemberSignature Language="C#" Value="public static Foundation.NSString DidChangeNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString DidChangeNotification" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.DidChangeNotification" />
      <MemberSignature Language="F#" Value="member this.DidChangeNotification : Foundation.NSString" Usage="AppKit.NSText.DidChangeNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Advice("Use NSText.Notifications.ObserveDidChange helper method instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Field("NSTextDidChangeNotification", "AppKit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidEndEditingNotification">
      <MemberSignature Language="C#" Value="public static Foundation.NSString DidEndEditingNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString DidEndEditingNotification" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.DidEndEditingNotification" />
      <MemberSignature Language="F#" Value="member this.DidEndEditingNotification : Foundation.NSString" Usage="AppKit.NSText.DidEndEditingNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Advice("Use NSText.Notifications.ObserveDidEndEditing helper method instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Field("NSTextDidEndEditingNotification", "AppKit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="nSText.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawsBackground">
      <MemberSignature Language="C#" Value="public virtual bool DrawsBackground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawsBackground" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.DrawsBackground" />
      <MemberSignature Language="F#" Value="member this.DrawsBackground : bool with get, set" Usage="AppKit.NSText.DrawsBackground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("drawsBackground")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDrawsBackground:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Editable">
      <MemberSignature Language="C#" Value="public virtual bool Editable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Editable" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.Editable" />
      <MemberSignature Language="F#" Value="member this.Editable : bool with get, set" Usage="AppKit.NSText.Editable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isEditable")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setEditable:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldEditor">
      <MemberSignature Language="C#" Value="public virtual bool FieldEditor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FieldEditor" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.FieldEditor" />
      <MemberSignature Language="F#" Value="member this.FieldEditor : bool with get, set" Usage="AppKit.NSText.FieldEditor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isFieldEditor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setFieldEditor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSFont Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSFont Font" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.Font" />
      <MemberSignature Language="F#" Value="member this.Font : AppKit.NSFont with get, set" Usage="AppKit.NSText.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("font", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setFont:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSFont</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromRtfdFile">
      <MemberSignature Language="C#" Value="public virtual bool FromRtfdFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FromRtfdFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.FromRtfdFile(System.String)" />
      <MemberSignature Language="F#" Value="abstract member FromRtfdFile : string -&gt; bool&#xA;override this.FromRtfdFile : string -&gt; bool" Usage="nSText.FromRtfdFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("readRTFDFromFile:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontallyResizable">
      <MemberSignature Language="C#" Value="public virtual bool HorizontallyResizable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HorizontallyResizable" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.HorizontallyResizable" />
      <MemberSignature Language="F#" Value="member this.HorizontallyResizable : bool with get, set" Usage="AppKit.NSText.HorizontallyResizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isHorizontallyResizable")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setHorizontallyResizable:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportsGraphics">
      <MemberSignature Language="C#" Value="public virtual bool ImportsGraphics { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ImportsGraphics" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.ImportsGraphics" />
      <MemberSignature Language="F#" Value="member this.ImportsGraphics : bool with get, set" Usage="AppKit.NSText.ImportsGraphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("importsGraphics")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setImportsGraphics:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRulerVisible">
      <MemberSignature Language="C#" Value="public virtual bool IsRulerVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRulerVisible" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.IsRulerVisible" />
      <MemberSignature Language="F#" Value="member this.IsRulerVisible : bool" Usage="AppKit.NSText.IsRulerVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isRulerVisible")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSize">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGSize MaxSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGSize MaxSize" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.MaxSize" />
      <MemberSignature Language="F#" Value="member this.MaxSize : CoreGraphics.CGSize with get, set" Usage="AppKit.NSText.MaxSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("maxSize")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMaxSize:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSize">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGSize MinSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGSize MinSize" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.MinSize" />
      <MemberSignature Language="F#" Value="member this.MinSize : CoreGraphics.CGSize with get, set" Usage="AppKit.NSText.MinSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("minSize")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMinSize:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MovementUserInfoKey">
      <MemberSignature Language="C#" Value="public static Foundation.NSString MovementUserInfoKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString MovementUserInfoKey" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.MovementUserInfoKey" />
      <MemberSignature Language="F#" Value="member this.MovementUserInfoKey : Foundation.NSString" Usage="AppKit.NSText.MovementUserInfoKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSTextMovementUserInfoKey", "AppKit")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public virtual void Paste (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.Paste(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member Paste : Foundation.NSObject -&gt; unit&#xA;override this.Paste : Foundation.NSObject -&gt; unit" Usage="nSText.Paste sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("paste:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteFont">
      <MemberSignature Language="C#" Value="public virtual void PasteFont (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteFont(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.PasteFont(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member PasteFont : Foundation.NSObject -&gt; unit&#xA;override this.PasteFont : Foundation.NSObject -&gt; unit" Usage="nSText.PasteFont sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pasteFont:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteRuler">
      <MemberSignature Language="C#" Value="public virtual void PasteRuler (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteRuler(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.PasteRuler(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member PasteRuler : Foundation.NSObject -&gt; unit&#xA;override this.PasteRuler : Foundation.NSObject -&gt; unit" Usage="nSText.PasteRuler sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pasteRuler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public virtual void Replace (Foundation.NSRange range, string aString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Replace(valuetype Foundation.NSRange range, string aString) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.Replace(Foundation.NSRange,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Replace : Foundation.NSRange * string -&gt; unit&#xA;override this.Replace : Foundation.NSRange * string -&gt; unit" Usage="nSText.Replace (range, aString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("replaceCharactersInRange:withString:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="aString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="aString">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceWithRtf">
      <MemberSignature Language="C#" Value="public virtual void ReplaceWithRtf (Foundation.NSRange range, Foundation.NSData rtfData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceWithRtf(valuetype Foundation.NSRange range, class Foundation.NSData rtfData) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.ReplaceWithRtf(Foundation.NSRange,Foundation.NSData)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceWithRtf : Foundation.NSRange * Foundation.NSData -&gt; unit&#xA;override this.ReplaceWithRtf : Foundation.NSRange * Foundation.NSData -&gt; unit" Usage="nSText.ReplaceWithRtf (range, rtfData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("replaceCharactersInRange:withRTF:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="rtfData" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="rtfData">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceWithRtfd">
      <MemberSignature Language="C#" Value="public virtual void ReplaceWithRtfd (Foundation.NSRange range, Foundation.NSData rtfdData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceWithRtfd(valuetype Foundation.NSRange range, class Foundation.NSData rtfdData) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.ReplaceWithRtfd(Foundation.NSRange,Foundation.NSData)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceWithRtfd : Foundation.NSRange * Foundation.NSData -&gt; unit&#xA;override this.ReplaceWithRtfd : Foundation.NSRange * Foundation.NSData -&gt; unit" Usage="nSText.ReplaceWithRtfd (range, rtfdData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("replaceCharactersInRange:withRTFD:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="rtfdData" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="rtfdData">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RichText">
      <MemberSignature Language="C#" Value="public virtual bool RichText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RichText" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.RichText" />
      <MemberSignature Language="F#" Value="member this.RichText : bool with get, set" Usage="AppKit.NSText.RichText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isRichText")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setRichText:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RtfdFromRange">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSData RtfdFromRange (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSData RtfdFromRange(valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.RtfdFromRange(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member RtfdFromRange : Foundation.NSRange -&gt; Foundation.NSData&#xA;override this.RtfdFromRange : Foundation.NSRange -&gt; Foundation.NSData" Usage="nSText.RtfdFromRange range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("RTFDFromRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RtfFromRange">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSData RtfFromRange (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSData RtfFromRange(valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.RtfFromRange(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member RtfFromRange : Foundation.NSRange -&gt; Foundation.NSData&#xA;override this.RtfFromRange : Foundation.NSRange -&gt; Foundation.NSData" Usage="nSText.RtfFromRange range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("RTFFromRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollRangeToVisible">
      <MemberSignature Language="C#" Value="public virtual void ScrollRangeToVisible (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScrollRangeToVisible(valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.ScrollRangeToVisible(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member ScrollRangeToVisible : Foundation.NSRange -&gt; unit&#xA;override this.ScrollRangeToVisible : Foundation.NSRange -&gt; unit" Usage="nSText.ScrollRangeToVisible range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("scrollRangeToVisible:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="public virtual bool Selectable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selectable" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.Selectable" />
      <MemberSignature Language="F#" Value="member this.Selectable : bool with get, set" Usage="AppKit.NSText.Selectable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isSelectable")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setSelectable:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public virtual void SelectAll (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectAll(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.SelectAll(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member SelectAll : Foundation.NSObject -&gt; unit&#xA;override this.SelectAll : Foundation.NSObject -&gt; unit" Usage="nSText.SelectAll sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("selectAll:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedRange">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSRange SelectedRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSRange SelectedRange" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.SelectedRange" />
      <MemberSignature Language="F#" Value="member this.SelectedRange : Foundation.NSRange with get, set" Usage="AppKit.NSText.SelectedRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("selectedRange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setSelectedRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFont">
      <MemberSignature Language="C#" Value="public virtual void SetFont (AppKit.NSFont font, Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFont(class AppKit.NSFont font, valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.SetFont(AppKit.NSFont,Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member SetFont : AppKit.NSFont * Foundation.NSRange -&gt; unit&#xA;override this.SetFont : AppKit.NSFont * Foundation.NSRange -&gt; unit" Usage="nSText.SetFont (font, range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setFont:range:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="font" Type="AppKit.NSFont" />
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="font">To be added.</param>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTextColor">
      <MemberSignature Language="C#" Value="public virtual void SetTextColor (AppKit.NSColor color, Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTextColor(class AppKit.NSColor color, valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.SetTextColor(AppKit.NSColor,Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member SetTextColor : AppKit.NSColor * Foundation.NSRange -&gt; unit&#xA;override this.SetTextColor : AppKit.NSColor * Foundation.NSRange -&gt; unit" Usage="nSText.SetTextColor (color, range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setTextColor:range:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="AppKit.NSColor" />
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowGuessPanel">
      <MemberSignature Language="C#" Value="public virtual void ShowGuessPanel (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowGuessPanel(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.ShowGuessPanel(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ShowGuessPanel : Foundation.NSObject -&gt; unit&#xA;override this.ShowGuessPanel : Foundation.NSObject -&gt; unit" Usage="nSText.ShowGuessPanel sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("showGuessPanel:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeToFit">
      <MemberSignature Language="C#" Value="public virtual void SizeToFit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SizeToFit() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.SizeToFit" />
      <MemberSignature Language="F#" Value="abstract member SizeToFit : unit -&gt; unit&#xA;override this.SizeToFit : unit -&gt; unit" Usage="nSText.SizeToFit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("sizeToFit")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subscript">
      <MemberSignature Language="C#" Value="public virtual void Subscript (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subscript(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.Subscript(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member Subscript : Foundation.NSObject -&gt; unit&#xA;override this.Subscript : Foundation.NSObject -&gt; unit" Usage="nSText.Subscript sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("subscript:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Superscript">
      <MemberSignature Language="C#" Value="public virtual void Superscript (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Superscript(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.Superscript(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member Superscript : Foundation.NSObject -&gt; unit&#xA;override this.Superscript : Foundation.NSObject -&gt; unit" Usage="nSText.Superscript sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("superscript:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextColor">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSColor TextColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSColor TextColor" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.TextColor" />
      <MemberSignature Language="F#" Value="member this.TextColor : AppKit.NSColor with get, set" Usage="AppKit.NSText.TextColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("textColor", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setTextColor:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDidBeginEditing">
      <MemberSignature Language="C#" Value="public event EventHandler TextDidBeginEditing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextDidBeginEditing" />
      <MemberSignature Language="DocId" Value="E:AppKit.NSText.TextDidBeginEditing" />
      <MemberSignature Language="F#" Value="member this.TextDidBeginEditing : EventHandler " Usage="member this.TextDidBeginEditing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDidChange">
      <MemberSignature Language="C#" Value="public event EventHandler TextDidChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextDidChange" />
      <MemberSignature Language="DocId" Value="E:AppKit.NSText.TextDidChange" />
      <MemberSignature Language="F#" Value="member this.TextDidChange : EventHandler " Usage="member this.TextDidChange : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDidEndEditing">
      <MemberSignature Language="C#" Value="public event EventHandler TextDidEndEditing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextDidEndEditing" />
      <MemberSignature Language="DocId" Value="E:AppKit.NSText.TextDidEndEditing" />
      <MemberSignature Language="F#" Value="member this.TextDidEndEditing : EventHandler " Usage="member this.TextDidEndEditing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextShouldBeginEditing">
      <MemberSignature Language="C#" Value="public AppKit.NSTextPredicate TextShouldBeginEditing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextPredicate TextShouldBeginEditing" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.TextShouldBeginEditing" />
      <MemberSignature Language="F#" Value="member this.TextShouldBeginEditing : AppKit.NSTextPredicate with get, set" Usage="AppKit.NSText.TextShouldBeginEditing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextPredicate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextShouldEndEditing">
      <MemberSignature Language="C#" Value="public AppKit.NSTextPredicate TextShouldEndEditing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextPredicate TextShouldEndEditing" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.TextShouldEndEditing" />
      <MemberSignature Language="F#" Value="member this.TextShouldEndEditing : AppKit.NSTextPredicate with get, set" Usage="AppKit.NSText.TextShouldEndEditing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextPredicate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleRuler">
      <MemberSignature Language="C#" Value="public virtual void ToggleRuler (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleRuler(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.ToggleRuler(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ToggleRuler : Foundation.NSObject -&gt; unit&#xA;override this.ToggleRuler : Foundation.NSObject -&gt; unit" Usage="nSText.ToggleRuler sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("toggleRuler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Underline">
      <MemberSignature Language="C#" Value="public virtual void Underline (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Underline(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.Underline(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member Underline : Foundation.NSObject -&gt; unit&#xA;override this.Underline : Foundation.NSObject -&gt; unit" Usage="nSText.Underline sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("underline:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unscript">
      <MemberSignature Language="C#" Value="public virtual void Unscript (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unscript(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.Unscript(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member Unscript : Foundation.NSObject -&gt; unit&#xA;override this.Unscript : Foundation.NSObject -&gt; unit" Usage="nSText.Unscript sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("unscript:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesFontPanel">
      <MemberSignature Language="C#" Value="public virtual bool UsesFontPanel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesFontPanel" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.UsesFontPanel" />
      <MemberSignature Language="F#" Value="member this.UsesFontPanel : bool with get, set" Usage="AppKit.NSText.UsesFontPanel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("usesFontPanel")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setUsesFontPanel:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.Value" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="AppKit.NSText.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("string")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setString:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticallyResizable">
      <MemberSignature Language="C#" Value="public virtual bool VerticallyResizable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VerticallyResizable" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.VerticallyResizable" />
      <MemberSignature Language="F#" Value="member this.VerticallyResizable : bool with get, set" Usage="AppKit.NSText.VerticallyResizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isVerticallyResizable")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setVerticallyResizable:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakDelegate">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject WeakDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject WeakDelegate" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSText.WeakDelegate" />
      <MemberSignature Language="F#" Value="member this.WeakDelegate : Foundation.NSObject with get, set" Usage="AppKit.NSText.WeakDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("delegate", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDelegate:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRtfd">
      <MemberSignature Language="C#" Value="public virtual bool WriteRtfd (string path, bool atomically);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WriteRtfd(string path, bool atomically) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSText.WriteRtfd(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member WriteRtfd : string * bool -&gt; bool&#xA;override this.WriteRtfd : string * bool -&gt; bool" Usage="nSText.WriteRtfd (path, atomically)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("writeRTFDToFile:atomically:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="atomically" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="atomically">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
