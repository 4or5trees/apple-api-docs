<Type Name="NSLayoutAnchor&lt;AnchorType&gt;" FullName="AppKit.NSLayoutAnchor&lt;AnchorType&gt;">
  <TypeSignature Language="C#" Value="public class NSLayoutAnchor&lt;AnchorType&gt; : Foundation.NSObject, Foundation.INSCoding, Foundation.INSCopying, IDisposable where AnchorType : NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSLayoutAnchor`1&lt;(class Foundation.NSObject) AnchorType&gt; extends Foundation.NSObject implements class Foundation.INSCoding, class Foundation.INSCopying, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AppKit.NSLayoutAnchor`1" />
  <TypeSignature Language="F#" Value="type NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; NSObject)&gt; = class&#xA;    inherit NSObject&#xA;    interface INSCoding&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSCopying" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="AnchorType">
      <Constraints>
        <BaseTypeName>Foundation.NSObject</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("NSLayoutAnchor", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="AnchorType">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSLayoutAnchor (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutAnchor`1.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt; : Foundation.NSCoder -&gt; AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt;" Usage="new AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt; coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSLayoutAnchor (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutAnchor`1.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt; : Foundation.NSObjectFlag -&gt; AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt;" Usage="new AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt; t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSLayoutAnchor (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutAnchor`1.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt; : nativeint -&gt; AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt;" Usage="new AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt; handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSLayoutAnchor`1.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt;.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstraintEqualToAnchor">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSLayoutConstraint ConstraintEqualToAnchor (AppKit.NSLayoutAnchor&lt;AnchorType&gt; anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSLayoutConstraint ConstraintEqualToAnchor(class AppKit.NSLayoutAnchor`1&lt;!AnchorType&gt; anchor) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutAnchor`1.ConstraintEqualToAnchor(AppKit.NSLayoutAnchor{`0})" />
      <MemberSignature Language="F#" Value="abstract member ConstraintEqualToAnchor : AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt; -&gt; AppKit.NSLayoutConstraint&#xA;override this.ConstraintEqualToAnchor : AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt; -&gt; AppKit.NSLayoutConstraint" Usage="nSLayoutAnchor.ConstraintEqualToAnchor anchor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("constraintEqualToAnchor:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSLayoutConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchor" Type="AppKit.NSLayoutAnchor&lt;AnchorType&gt;" />
      </Parameters>
      <Docs>
        <param name="anchor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstraintEqualToAnchor">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSLayoutConstraint ConstraintEqualToAnchor (AppKit.NSLayoutAnchor&lt;AnchorType&gt; anchor, nfloat constant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSLayoutConstraint ConstraintEqualToAnchor(class AppKit.NSLayoutAnchor`1&lt;!AnchorType&gt; anchor, valuetype System.nfloat constant) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutAnchor`1.ConstraintEqualToAnchor(AppKit.NSLayoutAnchor{`0},System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member ConstraintEqualToAnchor : AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt; * nfloat -&gt; AppKit.NSLayoutConstraint&#xA;override this.ConstraintEqualToAnchor : AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt; * nfloat -&gt; AppKit.NSLayoutConstraint" Usage="nSLayoutAnchor.ConstraintEqualToAnchor (anchor, constant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("constraintEqualToAnchor:constant:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSLayoutConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchor" Type="AppKit.NSLayoutAnchor&lt;AnchorType&gt;" />
        <Parameter Name="constant" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="anchor">To be added.</param>
        <param name="constant">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstraintGreaterThanOrEqualToAnchor">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSLayoutConstraint ConstraintGreaterThanOrEqualToAnchor (AppKit.NSLayoutAnchor&lt;AnchorType&gt; anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSLayoutConstraint ConstraintGreaterThanOrEqualToAnchor(class AppKit.NSLayoutAnchor`1&lt;!AnchorType&gt; anchor) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutAnchor`1.ConstraintGreaterThanOrEqualToAnchor(AppKit.NSLayoutAnchor{`0})" />
      <MemberSignature Language="F#" Value="abstract member ConstraintGreaterThanOrEqualToAnchor : AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt; -&gt; AppKit.NSLayoutConstraint&#xA;override this.ConstraintGreaterThanOrEqualToAnchor : AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt; -&gt; AppKit.NSLayoutConstraint" Usage="nSLayoutAnchor.ConstraintGreaterThanOrEqualToAnchor anchor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("constraintGreaterThanOrEqualToAnchor:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSLayoutConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchor" Type="AppKit.NSLayoutAnchor&lt;AnchorType&gt;" />
      </Parameters>
      <Docs>
        <param name="anchor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstraintGreaterThanOrEqualToAnchor">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSLayoutConstraint ConstraintGreaterThanOrEqualToAnchor (AppKit.NSLayoutAnchor&lt;AnchorType&gt; anchor, nfloat constant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSLayoutConstraint ConstraintGreaterThanOrEqualToAnchor(class AppKit.NSLayoutAnchor`1&lt;!AnchorType&gt; anchor, valuetype System.nfloat constant) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutAnchor`1.ConstraintGreaterThanOrEqualToAnchor(AppKit.NSLayoutAnchor{`0},System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member ConstraintGreaterThanOrEqualToAnchor : AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt; * nfloat -&gt; AppKit.NSLayoutConstraint&#xA;override this.ConstraintGreaterThanOrEqualToAnchor : AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt; * nfloat -&gt; AppKit.NSLayoutConstraint" Usage="nSLayoutAnchor.ConstraintGreaterThanOrEqualToAnchor (anchor, constant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("constraintGreaterThanOrEqualToAnchor:constant:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSLayoutConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchor" Type="AppKit.NSLayoutAnchor&lt;AnchorType&gt;" />
        <Parameter Name="constant" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="anchor">To be added.</param>
        <param name="constant">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstraintLessThanOrEqualToAnchor">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSLayoutConstraint ConstraintLessThanOrEqualToAnchor (AppKit.NSLayoutAnchor&lt;AnchorType&gt; anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSLayoutConstraint ConstraintLessThanOrEqualToAnchor(class AppKit.NSLayoutAnchor`1&lt;!AnchorType&gt; anchor) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutAnchor`1.ConstraintLessThanOrEqualToAnchor(AppKit.NSLayoutAnchor{`0})" />
      <MemberSignature Language="F#" Value="abstract member ConstraintLessThanOrEqualToAnchor : AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt; -&gt; AppKit.NSLayoutConstraint&#xA;override this.ConstraintLessThanOrEqualToAnchor : AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt; -&gt; AppKit.NSLayoutConstraint" Usage="nSLayoutAnchor.ConstraintLessThanOrEqualToAnchor anchor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("constraintLessThanOrEqualToAnchor:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSLayoutConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchor" Type="AppKit.NSLayoutAnchor&lt;AnchorType&gt;" />
      </Parameters>
      <Docs>
        <param name="anchor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstraintLessThanOrEqualToAnchor">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSLayoutConstraint ConstraintLessThanOrEqualToAnchor (AppKit.NSLayoutAnchor&lt;AnchorType&gt; anchor, nfloat constant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSLayoutConstraint ConstraintLessThanOrEqualToAnchor(class AppKit.NSLayoutAnchor`1&lt;!AnchorType&gt; anchor, valuetype System.nfloat constant) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutAnchor`1.ConstraintLessThanOrEqualToAnchor(AppKit.NSLayoutAnchor{`0},System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member ConstraintLessThanOrEqualToAnchor : AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt; * nfloat -&gt; AppKit.NSLayoutConstraint&#xA;override this.ConstraintLessThanOrEqualToAnchor : AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt; * nfloat -&gt; AppKit.NSLayoutConstraint" Usage="nSLayoutAnchor.ConstraintLessThanOrEqualToAnchor (anchor, constant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("constraintLessThanOrEqualToAnchor:constant:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSLayoutConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchor" Type="AppKit.NSLayoutAnchor&lt;AnchorType&gt;" />
        <Parameter Name="constant" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="anchor">To be added.</param>
        <param name="constant">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstraintsAffectingLayout">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSLayoutConstraint[] ConstraintsAffectingLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSLayoutConstraint[] ConstraintsAffectingLayout" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSLayoutAnchor`1.ConstraintsAffectingLayout" />
      <MemberSignature Language="F#" Value="member this.ConstraintsAffectingLayout : AppKit.NSLayoutConstraint[]" Usage="AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt;.ConstraintsAffectingLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("constraintsAffectingLayout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSLayoutConstraint[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject Copy (Foundation.NSZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject Copy(class Foundation.NSZone zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutAnchor`1.Copy(Foundation.NSZone)" />
      <MemberSignature Language="F#" Value="override this.Copy : Foundation.NSZone -&gt; Foundation.NSObject" Usage="nSLayoutAnchor.Copy zone" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCopying.Copy(Foundation.NSZone)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyWithZone:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutAnchor`1.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="nSLayoutAnchor.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeTo">
      <MemberSignature Language="C#" Value="public virtual void EncodeTo (Foundation.NSCoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeTo(class Foundation.NSCoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutAnchor`1.EncodeTo(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member EncodeTo : Foundation.NSCoder -&gt; unit&#xA;override this.EncodeTo : Foundation.NSCoder -&gt; unit" Usage="nSLayoutAnchor.EncodeTo encoder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCoding.EncodeTo(Foundation.NSCoder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="encoder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAmbiguousLayout">
      <MemberSignature Language="C#" Value="public virtual bool HasAmbiguousLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAmbiguousLayout" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSLayoutAnchor`1.HasAmbiguousLayout" />
      <MemberSignature Language="F#" Value="member this.HasAmbiguousLayout : bool" Usage="AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt;.HasAmbiguousLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("hasAmbiguousLayout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject Item" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSLayoutAnchor`1.Item" />
      <MemberSignature Language="F#" Value="member this.Item : Foundation.NSObject" Usage="AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("item", ObjCRuntime.ArgumentSemantic.Weak)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSLayoutAnchor`1.Name" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="AppKit.NSLayoutAnchor&lt;'AnchorType (requires 'AnchorType :&gt; Foundation.NSObject)&gt;.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("name")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
