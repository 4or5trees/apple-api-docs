<Type Name="INSHapticFeedbackPerformer" FullName="AppKit.INSHapticFeedbackPerformer">
  <TypeSignature Language="C#" Value="public interface INSHapticFeedbackPerformer : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INSHapticFeedbackPerformer implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AppKit.INSHapticFeedbackPerformer" />
  <TypeSignature Language="F#" Value="type INSHapticFeedbackPerformer = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="NSHapticFeedbackPerformer", WrapperType=typeof(AppKit.NSHapticFeedbackPerformerWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="PerformFeedback", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSHapticFeedbackPattern), typeof(AppKit.NSHapticFeedbackPerformanceTime) }, Selector="performFeedbackPattern:performanceTime:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="PerformFeedback">
      <MemberSignature Language="C#" Value="public void PerformFeedback (AppKit.NSHapticFeedbackPattern pattern, AppKit.NSHapticFeedbackPerformanceTime performanceTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformFeedback(valuetype AppKit.NSHapticFeedbackPattern pattern, valuetype AppKit.NSHapticFeedbackPerformanceTime performanceTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.INSHapticFeedbackPerformer.PerformFeedback(AppKit.NSHapticFeedbackPattern,AppKit.NSHapticFeedbackPerformanceTime)" />
      <MemberSignature Language="F#" Value="abstract member PerformFeedback : AppKit.NSHapticFeedbackPattern * AppKit.NSHapticFeedbackPerformanceTime -&gt; unit" Usage="iNSHapticFeedbackPerformer.PerformFeedback (pattern, performanceTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("performFeedbackPattern:performanceTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="AppKit.NSHapticFeedbackPattern" />
        <Parameter Name="performanceTime" Type="AppKit.NSHapticFeedbackPerformanceTime" />
      </Parameters>
      <Docs>
        <param name="pattern">To be added.</param>
        <param name="performanceTime">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
