<Type Name="INSApplicationDelegate" FullName="AppKit.INSApplicationDelegate">
  <TypeSignature Language="C#" Value="public interface INSApplicationDelegate : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INSApplicationDelegate implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AppKit.INSApplicationDelegate" />
  <TypeSignature Language="F#" Value="type INSApplicationDelegate = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="NSApplicationDelegate", WrapperType=typeof(AppKit.NSApplicationDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ApplicationShouldTerminate", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication) }, ReturnType=typeof(AppKit.NSApplicationTerminateReply), Selector="applicationShouldTerminate:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="OpenFile", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication), typeof(System.String) }, ReturnType=typeof(System.Boolean), Selector="application:openFile:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="OpenFiles", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication), typeof(System.String[]) }, Selector="application:openFiles:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="OpenTempFile", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication), typeof(System.String) }, ReturnType=typeof(System.Boolean), Selector="application:openTempFile:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ApplicationShouldOpenUntitledFile", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication) }, ReturnType=typeof(System.Boolean), Selector="applicationShouldOpenUntitledFile:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ApplicationOpenUntitledFile", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication) }, ReturnType=typeof(System.Boolean), Selector="applicationOpenUntitledFile:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="OpenFileWithoutUI", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Foundation.NSObject), typeof(System.String) }, ReturnType=typeof(System.Boolean), Selector="application:openFileWithoutUI:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PrintFile", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication), typeof(System.String) }, ReturnType=typeof(System.Boolean), Selector="application:printFile:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PrintFiles", ParameterByRef=new System.Boolean[] { false, false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication), typeof(System.String[]), typeof(Foundation.NSDictionary), typeof(System.Boolean) }, ReturnType=typeof(AppKit.NSApplicationPrintReply), Selector="application:printFiles:withSettings:showPrintPanels:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ApplicationShouldTerminateAfterLastWindowClosed", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication) }, ReturnType=typeof(System.Boolean), Selector="applicationShouldTerminateAfterLastWindowClosed:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ApplicationShouldHandleReopen", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication), typeof(System.Boolean) }, ReturnType=typeof(System.Boolean), Selector="applicationShouldHandleReopen:hasVisibleWindows:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ApplicationDockMenu", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication) }, ReturnType=typeof(AppKit.NSMenu), Selector="applicationDockMenu:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WillPresentError", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication), typeof(Foundation.NSError) }, ReturnType=typeof(Foundation.NSError), Selector="application:willPresentError:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WillFinishLaunching", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSNotification) }, Selector="applicationWillFinishLaunching:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidFinishLaunching", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSNotification) }, Selector="applicationDidFinishLaunching:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WillHide", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSNotification) }, Selector="applicationWillHide:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidHide", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSNotification) }, Selector="applicationDidHide:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WillUnhide", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSNotification) }, Selector="applicationWillUnhide:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidUnhide", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSNotification) }, Selector="applicationDidUnhide:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WillBecomeActive", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSNotification) }, Selector="applicationWillBecomeActive:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidBecomeActive", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSNotification) }, Selector="applicationDidBecomeActive:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WillResignActive", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSNotification) }, Selector="applicationWillResignActive:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidResignActive", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSNotification) }, Selector="applicationDidResignActive:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WillUpdate", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSNotification) }, Selector="applicationWillUpdate:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidUpdate", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSNotification) }, Selector="applicationDidUpdate:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WillTerminate", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSNotification) }, Selector="applicationWillTerminate:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ScreenParametersChanged", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSNotification) }, Selector="applicationDidChangeScreenParameters:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="RegisterServicesMenu", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(System.String[]), typeof(System.String[]) }, Selector="registerServicesMenuSendTypes:returnTypes:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WriteSelectionToPasteboard", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSPasteboard), typeof(System.String[]) }, ReturnType=typeof(System.Boolean), Selector="writeSelectionToPasteboard:types:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ReadSelectionFromPasteboard", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(AppKit.NSPasteboard) }, ReturnType=typeof(System.Boolean), Selector="readSelectionFromPasteboard:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="OrderFrontStandardAboutPanel", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSObject) }, Selector="orderFrontStandardAboutPanel:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="OrderFrontStandardAboutPanelWithOptions", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSDictionary) }, Selector="orderFrontStandardAboutPanelWithOptions:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="RegisteredForRemoteNotifications", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication), typeof(Foundation.NSData) }, Selector="application:didRegisterForRemoteNotificationsWithDeviceToken:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="FailedToRegisterForRemoteNotifications", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication), typeof(Foundation.NSError) }, Selector="application:didFailToRegisterForRemoteNotificationsWithError:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ReceivedRemoteNotification", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication), typeof(Foundation.NSDictionary) }, Selector="application:didReceiveRemoteNotification:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WillEncodeRestorableState", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication), typeof(Foundation.NSCoder) }, Selector="application:willEncodeRestorableState:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DecodedRestorableState", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication), typeof(Foundation.NSCoder) }, Selector="application:didDecodeRestorableState:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WillContinueUserActivity", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication), typeof(System.String) }, ReturnType=typeof(System.Boolean), Selector="application:willContinueUserActivityWithType:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ContinueUserActivity", ParameterBlockProxy=new System.Type[] { null, null, typeof(ObjCRuntime.Trampolines/NIDContinueUserActivityRestorationHandler) }, ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication), typeof(Foundation.NSUserActivity), typeof(AppKit.ContinueUserActivityRestorationHandler) }, ReturnType=typeof(System.Boolean), Selector="application:continueUserActivity:restorationHandler:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="FailedToContinueUserActivity", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication), typeof(System.String), typeof(Foundation.NSError) }, Selector="application:didFailToContinueUserActivityWithType:error:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UpdatedUserActivity", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication), typeof(Foundation.NSUserActivity) }, Selector="application:didUpdateUserActivity:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UserDidAcceptCloudKitShare", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication), typeof(CloudKit.CKShareMetadata) }, Selector="application:userDidAcceptCloudKitShareWithMetadata:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="OpenUrls", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication), typeof(Foundation.NSUrl[]) }, Selector="application:openURLs:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="HandlesKey", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSApplication), typeof(System.String) }, ReturnType=typeof(System.Boolean), Selector="application:delegateHandlesKey:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>
