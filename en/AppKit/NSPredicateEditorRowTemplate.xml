<Type Name="NSPredicateEditorRowTemplate" FullName="AppKit.NSPredicateEditorRowTemplate">
  <TypeSignature Language="C#" Value="public class NSPredicateEditorRowTemplate : Foundation.NSObject, Foundation.INSCoding, Foundation.INSCopying, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSPredicateEditorRowTemplate extends Foundation.NSObject implements class Foundation.INSCoding, class Foundation.INSCopying, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AppKit.NSPredicateEditorRowTemplate" />
  <TypeSignature Language="F#" Value="type NSPredicateEditorRowTemplate = class&#xA;    inherit NSObject&#xA;    interface INSCoding&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSCopying" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("NSPredicateEditorRowTemplate", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSPredicateEditorRowTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSPredicateEditorRowTemplate (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new AppKit.NSPredicateEditorRowTemplate : Foundation.NSCoder -&gt; AppKit.NSPredicateEditorRowTemplate" Usage="new AppKit.NSPredicateEditorRowTemplate coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSPredicateEditorRowTemplate (params Foundation.NSCompoundPredicateType[] compoundTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Foundation.NSCompoundPredicateType[] compoundTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.#ctor(Foundation.NSCompoundPredicateType[])" />
      <MemberSignature Language="F#" Value="new AppKit.NSPredicateEditorRowTemplate : Foundation.NSCompoundPredicateType[] -&gt; AppKit.NSPredicateEditorRowTemplate" Usage="new AppKit.NSPredicateEditorRowTemplate compoundTypes" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="compoundTypes" Type="Foundation.NSCompoundPredicateType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="compoundTypes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSPredicateEditorRowTemplate (Foundation.NSNumber[] compoundTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSNumber[] compoundTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.#ctor(Foundation.NSNumber[])" />
      <MemberSignature Language="F#" Value="new AppKit.NSPredicateEditorRowTemplate : Foundation.NSNumber[] -&gt; AppKit.NSPredicateEditorRowTemplate" Usage="new AppKit.NSPredicateEditorRowTemplate compoundTypes" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCompoundTypes:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="compoundTypes" Type="Foundation.NSNumber[]" />
      </Parameters>
      <Docs>
        <param name="compoundTypes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSPredicateEditorRowTemplate (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AppKit.NSPredicateEditorRowTemplate : Foundation.NSObjectFlag -&gt; AppKit.NSPredicateEditorRowTemplate" Usage="new AppKit.NSPredicateEditorRowTemplate t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSPredicateEditorRowTemplate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AppKit.NSPredicateEditorRowTemplate : nativeint -&gt; AppKit.NSPredicateEditorRowTemplate" Usage="new AppKit.NSPredicateEditorRowTemplate handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSPredicateEditorRowTemplate (Foundation.NSExpression[] leftExpressions, CoreData.NSAttributeType attributeType, Foundation.NSComparisonPredicateModifier modifier, Foundation.NSObject[] operators, Foundation.NSComparisonPredicateOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSExpression[] leftExpressions, valuetype CoreData.NSAttributeType attributeType, valuetype Foundation.NSComparisonPredicateModifier modifier, class Foundation.NSObject[] operators, valuetype Foundation.NSComparisonPredicateOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.#ctor(Foundation.NSExpression[],CoreData.NSAttributeType,Foundation.NSComparisonPredicateModifier,Foundation.NSObject[],Foundation.NSComparisonPredicateOptions)" />
      <MemberSignature Language="F#" Value="new AppKit.NSPredicateEditorRowTemplate : Foundation.NSExpression[] * CoreData.NSAttributeType * Foundation.NSComparisonPredicateModifier * Foundation.NSObject[] * Foundation.NSComparisonPredicateOptions -&gt; AppKit.NSPredicateEditorRowTemplate" Usage="new AppKit.NSPredicateEditorRowTemplate (leftExpressions, attributeType, modifier, operators, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithLeftExpressions:rightExpressionAttributeType:modifier:operators:options:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="leftExpressions" Type="Foundation.NSExpression[]" />
        <Parameter Name="attributeType" Type="CoreData.NSAttributeType" />
        <Parameter Name="modifier" Type="Foundation.NSComparisonPredicateModifier" />
        <Parameter Name="operators" Type="Foundation.NSObject[]" />
        <Parameter Name="options" Type="Foundation.NSComparisonPredicateOptions" />
      </Parameters>
      <Docs>
        <param name="leftExpressions">To be added.</param>
        <param name="attributeType">To be added.</param>
        <param name="modifier">To be added.</param>
        <param name="operators">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSPredicateEditorRowTemplate (Foundation.NSExpression[] leftExpressions, Foundation.NSExpression[] rightExpressions, Foundation.NSComparisonPredicateModifier modifier, Foundation.NSObject[] operators, Foundation.NSComparisonPredicateOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSExpression[] leftExpressions, class Foundation.NSExpression[] rightExpressions, valuetype Foundation.NSComparisonPredicateModifier modifier, class Foundation.NSObject[] operators, valuetype Foundation.NSComparisonPredicateOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.#ctor(Foundation.NSExpression[],Foundation.NSExpression[],Foundation.NSComparisonPredicateModifier,Foundation.NSObject[],Foundation.NSComparisonPredicateOptions)" />
      <MemberSignature Language="F#" Value="new AppKit.NSPredicateEditorRowTemplate : Foundation.NSExpression[] * Foundation.NSExpression[] * Foundation.NSComparisonPredicateModifier * Foundation.NSObject[] * Foundation.NSComparisonPredicateOptions -&gt; AppKit.NSPredicateEditorRowTemplate" Usage="new AppKit.NSPredicateEditorRowTemplate (leftExpressions, rightExpressions, modifier, operators, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithLeftExpressions:rightExpressions:modifier:operators:options:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="leftExpressions" Type="Foundation.NSExpression[]" />
        <Parameter Name="rightExpressions" Type="Foundation.NSExpression[]" />
        <Parameter Name="modifier" Type="Foundation.NSComparisonPredicateModifier" />
        <Parameter Name="operators" Type="Foundation.NSObject[]" />
        <Parameter Name="options" Type="Foundation.NSComparisonPredicateOptions" />
      </Parameters>
      <Docs>
        <param name="leftExpressions">To be added.</param>
        <param name="rightExpressions">To be added.</param>
        <param name="modifier">To be added.</param>
        <param name="operators">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSPredicateEditorRowTemplate (System.Collections.Generic.IEnumerable&lt;Foundation.NSExpression&gt; leftExpressions, CoreData.NSAttributeType attributeType, System.Collections.Generic.IEnumerable&lt;Foundation.NSPredicateOperatorType&gt; operators, Foundation.NSComparisonPredicateModifier modifier = Foundation.NSComparisonPredicateModifier.Direct, Foundation.NSComparisonPredicateOptions options = Foundation.NSComparisonPredicateOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Foundation.NSExpression&gt; leftExpressions, valuetype CoreData.NSAttributeType attributeType, class System.Collections.Generic.IEnumerable`1&lt;valuetype Foundation.NSPredicateOperatorType&gt; operators, valuetype Foundation.NSComparisonPredicateModifier modifier, valuetype Foundation.NSComparisonPredicateOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.#ctor(System.Collections.Generic.IEnumerable{Foundation.NSExpression},CoreData.NSAttributeType,System.Collections.Generic.IEnumerable{Foundation.NSPredicateOperatorType},Foundation.NSComparisonPredicateModifier,Foundation.NSComparisonPredicateOptions)" />
      <MemberSignature Language="F#" Value="new AppKit.NSPredicateEditorRowTemplate : seq&lt;Foundation.NSExpression&gt; * CoreData.NSAttributeType * seq&lt;Foundation.NSPredicateOperatorType&gt; * Foundation.NSComparisonPredicateModifier * Foundation.NSComparisonPredicateOptions -&gt; AppKit.NSPredicateEditorRowTemplate" Usage="new AppKit.NSPredicateEditorRowTemplate (leftExpressions, attributeType, operators, modifier, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="leftExpressions" Type="System.Collections.Generic.IEnumerable&lt;Foundation.NSExpression&gt;" />
        <Parameter Name="attributeType" Type="CoreData.NSAttributeType" />
        <Parameter Name="operators" Type="System.Collections.Generic.IEnumerable&lt;Foundation.NSPredicateOperatorType&gt;" />
        <Parameter Name="modifier" Type="Foundation.NSComparisonPredicateModifier" />
        <Parameter Name="options" Type="Foundation.NSComparisonPredicateOptions" />
      </Parameters>
      <Docs>
        <param name="leftExpressions">To be added.</param>
        <param name="attributeType">To be added.</param>
        <param name="operators">To be added.</param>
        <param name="modifier">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSPredicateEditorRowTemplate (System.Collections.Generic.IEnumerable&lt;Foundation.NSExpression&gt; leftExpressions, System.Collections.Generic.IEnumerable&lt;Foundation.NSExpression&gt; rightExpressions, System.Collections.Generic.IEnumerable&lt;Foundation.NSPredicateOperatorType&gt; operators, Foundation.NSComparisonPredicateModifier modifier = Foundation.NSComparisonPredicateModifier.Direct, Foundation.NSComparisonPredicateOptions options = Foundation.NSComparisonPredicateOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Foundation.NSExpression&gt; leftExpressions, class System.Collections.Generic.IEnumerable`1&lt;class Foundation.NSExpression&gt; rightExpressions, class System.Collections.Generic.IEnumerable`1&lt;valuetype Foundation.NSPredicateOperatorType&gt; operators, valuetype Foundation.NSComparisonPredicateModifier modifier, valuetype Foundation.NSComparisonPredicateOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.#ctor(System.Collections.Generic.IEnumerable{Foundation.NSExpression},System.Collections.Generic.IEnumerable{Foundation.NSExpression},System.Collections.Generic.IEnumerable{Foundation.NSPredicateOperatorType},Foundation.NSComparisonPredicateModifier,Foundation.NSComparisonPredicateOptions)" />
      <MemberSignature Language="F#" Value="new AppKit.NSPredicateEditorRowTemplate : seq&lt;Foundation.NSExpression&gt; * seq&lt;Foundation.NSExpression&gt; * seq&lt;Foundation.NSPredicateOperatorType&gt; * Foundation.NSComparisonPredicateModifier * Foundation.NSComparisonPredicateOptions -&gt; AppKit.NSPredicateEditorRowTemplate" Usage="new AppKit.NSPredicateEditorRowTemplate (leftExpressions, rightExpressions, operators, modifier, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="leftExpressions" Type="System.Collections.Generic.IEnumerable&lt;Foundation.NSExpression&gt;" />
        <Parameter Name="rightExpressions" Type="System.Collections.Generic.IEnumerable&lt;Foundation.NSExpression&gt;" />
        <Parameter Name="operators" Type="System.Collections.Generic.IEnumerable&lt;Foundation.NSPredicateOperatorType&gt;" />
        <Parameter Name="modifier" Type="Foundation.NSComparisonPredicateModifier" />
        <Parameter Name="options" Type="Foundation.NSComparisonPredicateOptions" />
      </Parameters>
      <Docs>
        <param name="leftExpressions">To be added.</param>
        <param name="rightExpressions">To be added.</param>
        <param name="operators">To be added.</param>
        <param name="modifier">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSPredicateEditorRowTemplate (System.Collections.Generic.IEnumerable&lt;string&gt; leftExpressionsFromKeyPaths, CoreData.NSAttributeType attributeType, System.Collections.Generic.IEnumerable&lt;Foundation.NSPredicateOperatorType&gt; operators, Foundation.NSComparisonPredicateModifier modifier = Foundation.NSComparisonPredicateModifier.Direct, Foundation.NSComparisonPredicateOptions options = Foundation.NSComparisonPredicateOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; leftExpressionsFromKeyPaths, valuetype CoreData.NSAttributeType attributeType, class System.Collections.Generic.IEnumerable`1&lt;valuetype Foundation.NSPredicateOperatorType&gt; operators, valuetype Foundation.NSComparisonPredicateModifier modifier, valuetype Foundation.NSComparisonPredicateOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.#ctor(System.Collections.Generic.IEnumerable{System.String},CoreData.NSAttributeType,System.Collections.Generic.IEnumerable{Foundation.NSPredicateOperatorType},Foundation.NSComparisonPredicateModifier,Foundation.NSComparisonPredicateOptions)" />
      <MemberSignature Language="F#" Value="new AppKit.NSPredicateEditorRowTemplate : seq&lt;string&gt; * CoreData.NSAttributeType * seq&lt;Foundation.NSPredicateOperatorType&gt; * Foundation.NSComparisonPredicateModifier * Foundation.NSComparisonPredicateOptions -&gt; AppKit.NSPredicateEditorRowTemplate" Usage="new AppKit.NSPredicateEditorRowTemplate (leftExpressionsFromKeyPaths, attributeType, operators, modifier, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="leftExpressionsFromKeyPaths" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="attributeType" Type="CoreData.NSAttributeType" />
        <Parameter Name="operators" Type="System.Collections.Generic.IEnumerable&lt;Foundation.NSPredicateOperatorType&gt;" />
        <Parameter Name="modifier" Type="Foundation.NSComparisonPredicateModifier" />
        <Parameter Name="options" Type="Foundation.NSComparisonPredicateOptions" />
      </Parameters>
      <Docs>
        <param name="leftExpressionsFromKeyPaths">To be added.</param>
        <param name="attributeType">To be added.</param>
        <param name="operators">To be added.</param>
        <param name="modifier">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSPredicateEditorRowTemplate (System.Collections.Generic.IEnumerable&lt;string&gt; leftExpressionsFromKeyPaths, System.Collections.Generic.IEnumerable&lt;string&gt; rightExpressionsFromConstants, System.Collections.Generic.IEnumerable&lt;Foundation.NSPredicateOperatorType&gt; operators, Foundation.NSComparisonPredicateModifier modifier = Foundation.NSComparisonPredicateModifier.Direct, Foundation.NSComparisonPredicateOptions options = Foundation.NSComparisonPredicateOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; leftExpressionsFromKeyPaths, class System.Collections.Generic.IEnumerable`1&lt;string&gt; rightExpressionsFromConstants, class System.Collections.Generic.IEnumerable`1&lt;valuetype Foundation.NSPredicateOperatorType&gt; operators, valuetype Foundation.NSComparisonPredicateModifier modifier, valuetype Foundation.NSComparisonPredicateOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Foundation.NSPredicateOperatorType},Foundation.NSComparisonPredicateModifier,Foundation.NSComparisonPredicateOptions)" />
      <MemberSignature Language="F#" Value="new AppKit.NSPredicateEditorRowTemplate : seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;Foundation.NSPredicateOperatorType&gt; * Foundation.NSComparisonPredicateModifier * Foundation.NSComparisonPredicateOptions -&gt; AppKit.NSPredicateEditorRowTemplate" Usage="new AppKit.NSPredicateEditorRowTemplate (leftExpressionsFromKeyPaths, rightExpressionsFromConstants, operators, modifier, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="leftExpressionsFromKeyPaths" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="rightExpressionsFromConstants" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="operators" Type="System.Collections.Generic.IEnumerable&lt;Foundation.NSPredicateOperatorType&gt;" />
        <Parameter Name="modifier" Type="Foundation.NSComparisonPredicateModifier" />
        <Parameter Name="options" Type="Foundation.NSComparisonPredicateOptions" />
      </Parameters>
      <Docs>
        <param name="leftExpressionsFromKeyPaths">To be added.</param>
        <param name="rightExpressionsFromConstants">To be added.</param>
        <param name="operators">To be added.</param>
        <param name="modifier">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSPredicateEditorRowTemplate (string leftExpressionFromKeyPath, CoreData.NSAttributeType attributeType, System.Collections.Generic.IEnumerable&lt;Foundation.NSPredicateOperatorType&gt; operators, Foundation.NSComparisonPredicateModifier modifier = Foundation.NSComparisonPredicateModifier.Direct, Foundation.NSComparisonPredicateOptions options = Foundation.NSComparisonPredicateOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string leftExpressionFromKeyPath, valuetype CoreData.NSAttributeType attributeType, class System.Collections.Generic.IEnumerable`1&lt;valuetype Foundation.NSPredicateOperatorType&gt; operators, valuetype Foundation.NSComparisonPredicateModifier modifier, valuetype Foundation.NSComparisonPredicateOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.#ctor(System.String,CoreData.NSAttributeType,System.Collections.Generic.IEnumerable{Foundation.NSPredicateOperatorType},Foundation.NSComparisonPredicateModifier,Foundation.NSComparisonPredicateOptions)" />
      <MemberSignature Language="F#" Value="new AppKit.NSPredicateEditorRowTemplate : string * CoreData.NSAttributeType * seq&lt;Foundation.NSPredicateOperatorType&gt; * Foundation.NSComparisonPredicateModifier * Foundation.NSComparisonPredicateOptions -&gt; AppKit.NSPredicateEditorRowTemplate" Usage="new AppKit.NSPredicateEditorRowTemplate (leftExpressionFromKeyPath, attributeType, operators, modifier, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="leftExpressionFromKeyPath" Type="System.String" />
        <Parameter Name="attributeType" Type="CoreData.NSAttributeType" />
        <Parameter Name="operators" Type="System.Collections.Generic.IEnumerable&lt;Foundation.NSPredicateOperatorType&gt;" />
        <Parameter Name="modifier" Type="Foundation.NSComparisonPredicateModifier" />
        <Parameter Name="options" Type="Foundation.NSComparisonPredicateOptions" />
      </Parameters>
      <Docs>
        <param name="leftExpressionFromKeyPath">To be added.</param>
        <param name="attributeType">To be added.</param>
        <param name="operators">To be added.</param>
        <param name="modifier">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSPredicateEditorRowTemplate (string leftExpressionFromKeyPath, System.Collections.Generic.IEnumerable&lt;string&gt; rightExpressionsFromConstants, System.Collections.Generic.IEnumerable&lt;Foundation.NSPredicateOperatorType&gt; operators, Foundation.NSComparisonPredicateModifier modifier = Foundation.NSComparisonPredicateModifier.Direct, Foundation.NSComparisonPredicateOptions options = Foundation.NSComparisonPredicateOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string leftExpressionFromKeyPath, class System.Collections.Generic.IEnumerable`1&lt;string&gt; rightExpressionsFromConstants, class System.Collections.Generic.IEnumerable`1&lt;valuetype Foundation.NSPredicateOperatorType&gt; operators, valuetype Foundation.NSComparisonPredicateModifier modifier, valuetype Foundation.NSComparisonPredicateOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Foundation.NSPredicateOperatorType},Foundation.NSComparisonPredicateModifier,Foundation.NSComparisonPredicateOptions)" />
      <MemberSignature Language="F#" Value="new AppKit.NSPredicateEditorRowTemplate : string * seq&lt;string&gt; * seq&lt;Foundation.NSPredicateOperatorType&gt; * Foundation.NSComparisonPredicateModifier * Foundation.NSComparisonPredicateOptions -&gt; AppKit.NSPredicateEditorRowTemplate" Usage="new AppKit.NSPredicateEditorRowTemplate (leftExpressionFromKeyPath, rightExpressionsFromConstants, operators, modifier, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="leftExpressionFromKeyPath" Type="System.String" />
        <Parameter Name="rightExpressionsFromConstants" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="operators" Type="System.Collections.Generic.IEnumerable&lt;Foundation.NSPredicateOperatorType&gt;" />
        <Parameter Name="modifier" Type="Foundation.NSComparisonPredicateModifier" />
        <Parameter Name="options" Type="Foundation.NSComparisonPredicateOptions" />
      </Parameters>
      <Docs>
        <param name="leftExpressionFromKeyPath">To be added.</param>
        <param name="rightExpressionsFromConstants">To be added.</param>
        <param name="operators">To be added.</param>
        <param name="modifier">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSPredicateEditorRowTemplate (string leftExpressionFromKeyPath, string rightExpressionFromConstant, System.Collections.Generic.IEnumerable&lt;Foundation.NSPredicateOperatorType&gt; operators, Foundation.NSComparisonPredicateModifier modifier = Foundation.NSComparisonPredicateModifier.Direct, Foundation.NSComparisonPredicateOptions options = Foundation.NSComparisonPredicateOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string leftExpressionFromKeyPath, string rightExpressionFromConstant, class System.Collections.Generic.IEnumerable`1&lt;valuetype Foundation.NSPredicateOperatorType&gt; operators, valuetype Foundation.NSComparisonPredicateModifier modifier, valuetype Foundation.NSComparisonPredicateOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{Foundation.NSPredicateOperatorType},Foundation.NSComparisonPredicateModifier,Foundation.NSComparisonPredicateOptions)" />
      <MemberSignature Language="F#" Value="new AppKit.NSPredicateEditorRowTemplate : string * string * seq&lt;Foundation.NSPredicateOperatorType&gt; * Foundation.NSComparisonPredicateModifier * Foundation.NSComparisonPredicateOptions -&gt; AppKit.NSPredicateEditorRowTemplate" Usage="new AppKit.NSPredicateEditorRowTemplate (leftExpressionFromKeyPath, rightExpressionFromConstant, operators, modifier, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="leftExpressionFromKeyPath" Type="System.String" />
        <Parameter Name="rightExpressionFromConstant" Type="System.String" />
        <Parameter Name="operators" Type="System.Collections.Generic.IEnumerable&lt;Foundation.NSPredicateOperatorType&gt;" />
        <Parameter Name="modifier" Type="Foundation.NSComparisonPredicateModifier" />
        <Parameter Name="options" Type="Foundation.NSComparisonPredicateOptions" />
      </Parameters>
      <Docs>
        <param name="leftExpressionFromKeyPath">To be added.</param>
        <param name="rightExpressionFromConstant">To be added.</param>
        <param name="operators">To be added.</param>
        <param name="modifier">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSPredicateEditorRowTemplate.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AppKit.NSPredicateEditorRowTemplate.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompoundTypes">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSNumber[] CompoundTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSNumber[] CompoundTypes" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSPredicateEditorRowTemplate.CompoundTypes" />
      <MemberSignature Language="F#" Value="member this.CompoundTypes : Foundation.NSNumber[]" Usage="AppKit.NSPredicateEditorRowTemplate.CompoundTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("compoundTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSNumber[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject Copy (Foundation.NSZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject Copy(class Foundation.NSZone zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.Copy(Foundation.NSZone)" />
      <MemberSignature Language="F#" Value="override this.Copy : Foundation.NSZone -&gt; Foundation.NSObject" Usage="nSPredicateEditorRowTemplate.Copy zone" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCopying.Copy(Foundation.NSZone)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyWithZone:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayableSubpredicatesOfPredicate">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSPredicate[] DisplayableSubpredicatesOfPredicate (Foundation.NSPredicate predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSPredicate[] DisplayableSubpredicatesOfPredicate(class Foundation.NSPredicate predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.DisplayableSubpredicatesOfPredicate(Foundation.NSPredicate)" />
      <MemberSignature Language="F#" Value="abstract member DisplayableSubpredicatesOfPredicate : Foundation.NSPredicate -&gt; Foundation.NSPredicate[]&#xA;override this.DisplayableSubpredicatesOfPredicate : Foundation.NSPredicate -&gt; Foundation.NSPredicate[]" Usage="nSPredicateEditorRowTemplate.DisplayableSubpredicatesOfPredicate predicate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("displayableSubpredicatesOfPredicate:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSPredicate[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="Foundation.NSPredicate" />
      </Parameters>
      <Docs>
        <param name="predicate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeTo">
      <MemberSignature Language="C#" Value="public virtual void EncodeTo (Foundation.NSCoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeTo(class Foundation.NSCoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.EncodeTo(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member EncodeTo : Foundation.NSCoder -&gt; unit&#xA;override this.EncodeTo : Foundation.NSCoder -&gt; unit" Usage="nSPredicateEditorRowTemplate.EncodeTo encoder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCoding.EncodeTo(Foundation.NSCoder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="encoder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplates">
      <MemberSignature Language="C#" Value="public static AppKit.NSPredicateEditorRowTemplate[] GetTemplates (string[] keyPaths, CoreData.NSEntityDescription entityDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSPredicateEditorRowTemplate[] GetTemplates(string[] keyPaths, class CoreData.NSEntityDescription entityDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.GetTemplates(System.String[],CoreData.NSEntityDescription)" />
      <MemberSignature Language="F#" Value="static member GetTemplates : string[] * CoreData.NSEntityDescription -&gt; AppKit.NSPredicateEditorRowTemplate[]" Usage="AppKit.NSPredicateEditorRowTemplate.GetTemplates (keyPaths, entityDescription)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("templatesWithAttributeKeyPaths:inEntityDescription:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSPredicateEditorRowTemplate[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyPaths" Type="System.String[]" />
        <Parameter Name="entityDescription" Type="CoreData.NSEntityDescription" />
      </Parameters>
      <Docs>
        <param name="keyPaths">To be added.</param>
        <param name="entityDescription">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftExpressions">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSExpression[] LeftExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSExpression[] LeftExpressions" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSPredicateEditorRowTemplate.LeftExpressions" />
      <MemberSignature Language="F#" Value="member this.LeftExpressions : Foundation.NSExpression[]" Usage="AppKit.NSPredicateEditorRowTemplate.LeftExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("leftExpressions")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSExpression[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchForPredicate">
      <MemberSignature Language="C#" Value="public virtual double MatchForPredicate (Foundation.NSPredicate predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 MatchForPredicate(class Foundation.NSPredicate predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.MatchForPredicate(Foundation.NSPredicate)" />
      <MemberSignature Language="F#" Value="abstract member MatchForPredicate : Foundation.NSPredicate -&gt; double&#xA;override this.MatchForPredicate : Foundation.NSPredicate -&gt; double" Usage="nSPredicateEditorRowTemplate.MatchForPredicate predicate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("matchForPredicate:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="Foundation.NSPredicate" />
      </Parameters>
      <Docs>
        <param name="predicate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifier">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSComparisonPredicateModifier Modifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSComparisonPredicateModifier Modifier" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSPredicateEditorRowTemplate.Modifier" />
      <MemberSignature Language="F#" Value="member this.Modifier : Foundation.NSComparisonPredicateModifier" Usage="AppKit.NSPredicateEditorRowTemplate.Modifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("modifier")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSComparisonPredicateModifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Operators">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject[] Operators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject[] Operators" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSPredicateEditorRowTemplate.Operators" />
      <MemberSignature Language="F#" Value="member this.Operators : Foundation.NSObject[]" Usage="AppKit.NSPredicateEditorRowTemplate.Operators" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("operators")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSComparisonPredicateOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSComparisonPredicateOptions Options" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSPredicateEditorRowTemplate.Options" />
      <MemberSignature Language="F#" Value="member this.Options : Foundation.NSComparisonPredicateOptions" Usage="AppKit.NSPredicateEditorRowTemplate.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("options")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSComparisonPredicateOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PredicateWithSubpredicates">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSPredicate PredicateWithSubpredicates (Foundation.NSPredicate[] subpredicates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSPredicate PredicateWithSubpredicates(class Foundation.NSPredicate[] subpredicates) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.PredicateWithSubpredicates(Foundation.NSPredicate[])" />
      <MemberSignature Language="F#" Value="abstract member PredicateWithSubpredicates : Foundation.NSPredicate[] -&gt; Foundation.NSPredicate&#xA;override this.PredicateWithSubpredicates : Foundation.NSPredicate[] -&gt; Foundation.NSPredicate" Usage="nSPredicateEditorRowTemplate.PredicateWithSubpredicates subpredicates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("predicateWithSubpredicates:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSPredicate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subpredicates" Type="Foundation.NSPredicate[]" />
      </Parameters>
      <Docs>
        <param name="subpredicates">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightExpressionAttributeType">
      <MemberSignature Language="C#" Value="public virtual CoreData.NSAttributeType RightExpressionAttributeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreData.NSAttributeType RightExpressionAttributeType" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSPredicateEditorRowTemplate.RightExpressionAttributeType" />
      <MemberSignature Language="F#" Value="member this.RightExpressionAttributeType : CoreData.NSAttributeType" Usage="AppKit.NSPredicateEditorRowTemplate.RightExpressionAttributeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("rightExpressionAttributeType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreData.NSAttributeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightExpressions">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSExpression[] RightExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSExpression[] RightExpressions" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSPredicateEditorRowTemplate.RightExpressions" />
      <MemberSignature Language="F#" Value="member this.RightExpressions : Foundation.NSExpression[]" Usage="AppKit.NSPredicateEditorRowTemplate.RightExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("rightExpressions")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSExpression[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPredicate">
      <MemberSignature Language="C#" Value="public virtual void SetPredicate (Foundation.NSPredicate predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPredicate(class Foundation.NSPredicate predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSPredicateEditorRowTemplate.SetPredicate(Foundation.NSPredicate)" />
      <MemberSignature Language="F#" Value="abstract member SetPredicate : Foundation.NSPredicate -&gt; unit&#xA;override this.SetPredicate : Foundation.NSPredicate -&gt; unit" Usage="nSPredicateEditorRowTemplate.SetPredicate predicate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setPredicate:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="Foundation.NSPredicate" />
      </Parameters>
      <Docs>
        <param name="predicate">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateViews">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject[] TemplateViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject[] TemplateViews" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSPredicateEditorRowTemplate.TemplateViews" />
      <MemberSignature Language="F#" Value="member this.TemplateViews : Foundation.NSObject[]" Usage="AppKit.NSPredicateEditorRowTemplate.TemplateViews" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("templateViews")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
