<Type Name="NSTextViewDelegate" FullName="AppKit.NSTextViewDelegate">
  <TypeSignature Language="C#" Value="public class NSTextViewDelegate : AppKit.NSTextDelegate, AppKit.INSTextViewDelegate, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSTextViewDelegate extends AppKit.NSTextDelegate implements class AppKit.INSTextDelegate, class AppKit.INSTextViewDelegate, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AppKit.NSTextViewDelegate" />
  <TypeSignature Language="F#" Value="type NSTextViewDelegate = class&#xA;    inherit NSTextDelegate&#xA;    interface INSTextViewDelegate&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSTextDelegate" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>AppKit.NSTextDelegate</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>AppKit.INSTextDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>AppKit.INSTextViewDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Register("NSTextViewDelegate", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextViewDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSTextViewDelegate (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextViewDelegate : Foundation.NSObjectFlag -&gt; AppKit.NSTextViewDelegate" Usage="new AppKit.NSTextViewDelegate t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSTextViewDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextViewDelegate : nativeint -&gt; AppKit.NSTextViewDelegate" Usage="new AppKit.NSTextViewDelegate handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellClicked">
      <MemberSignature Language="C#" Value="public virtual void CellClicked (AppKit.NSTextView textView, AppKit.NSTextAttachmentCell cell, CoreGraphics.CGRect cellFrame, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CellClicked(class AppKit.NSTextView textView, class AppKit.NSTextAttachmentCell cell, valuetype CoreGraphics.CGRect cellFrame, valuetype System.nuint charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.CellClicked(AppKit.NSTextView,AppKit.NSTextAttachmentCell,CoreGraphics.CGRect,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member CellClicked : AppKit.NSTextView * AppKit.NSTextAttachmentCell * CoreGraphics.CGRect * nuint -&gt; unit&#xA;override this.CellClicked : AppKit.NSTextView * AppKit.NSTextAttachmentCell * CoreGraphics.CGRect * nuint -&gt; unit" Usage="nSTextViewDelegate.CellClicked (textView, cell, cellFrame, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:clickedOnCell:inRect:atIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="AppKit.NSTextView" />
        <Parameter Name="cell" Type="AppKit.NSTextAttachmentCell" />
        <Parameter Name="cellFrame" Type="CoreGraphics.CGRect" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="cell">To be added.</param>
        <param name="cellFrame">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellDoubleClicked">
      <MemberSignature Language="C#" Value="public virtual void CellDoubleClicked (AppKit.NSTextView textView, AppKit.NSTextAttachmentCell cell, CoreGraphics.CGRect cellFrame, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CellDoubleClicked(class AppKit.NSTextView textView, class AppKit.NSTextAttachmentCell cell, valuetype CoreGraphics.CGRect cellFrame, valuetype System.nuint charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.CellDoubleClicked(AppKit.NSTextView,AppKit.NSTextAttachmentCell,CoreGraphics.CGRect,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member CellDoubleClicked : AppKit.NSTextView * AppKit.NSTextAttachmentCell * CoreGraphics.CGRect * nuint -&gt; unit&#xA;override this.CellDoubleClicked : AppKit.NSTextView * AppKit.NSTextAttachmentCell * CoreGraphics.CGRect * nuint -&gt; unit" Usage="nSTextViewDelegate.CellDoubleClicked (textView, cell, cellFrame, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:doubleClickedOnCell:inRect:atIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="AppKit.NSTextView" />
        <Parameter Name="cell" Type="AppKit.NSTextAttachmentCell" />
        <Parameter Name="cellFrame" Type="CoreGraphics.CGRect" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="cell">To be added.</param>
        <param name="cellFrame">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeSelection">
      <MemberSignature Language="C#" Value="public virtual void DidChangeSelection (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidChangeSelection(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.DidChangeSelection(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidChangeSelection : Foundation.NSNotification -&gt; unit&#xA;override this.DidChangeSelection : Foundation.NSNotification -&gt; unit" Usage="nSTextViewDelegate.DidChangeSelection notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textViewDidChangeSelection:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeTypingAttributes">
      <MemberSignature Language="C#" Value="public virtual void DidChangeTypingAttributes (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidChangeTypingAttributes(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.DidChangeTypingAttributes(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidChangeTypingAttributes : Foundation.NSNotification -&gt; unit&#xA;override this.DidChangeTypingAttributes : Foundation.NSNotification -&gt; unit" Usage="nSTextViewDelegate.DidChangeTypingAttributes notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textViewDidChangeTypingAttributes:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidCheckText">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSTextCheckingResult[] DidCheckText (AppKit.NSTextView view, Foundation.NSRange range, Foundation.NSTextCheckingTypes checkingTypes, Foundation.NSDictionary options, Foundation.NSTextCheckingResult[] results, Foundation.NSOrthography orthography, nint wordCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSTextCheckingResult[] DidCheckText(class AppKit.NSTextView view, valuetype Foundation.NSRange range, valuetype Foundation.NSTextCheckingTypes checkingTypes, class Foundation.NSDictionary options, class Foundation.NSTextCheckingResult[] results, class Foundation.NSOrthography orthography, valuetype System.nint wordCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.DidCheckText(AppKit.NSTextView,Foundation.NSRange,Foundation.NSTextCheckingTypes,Foundation.NSDictionary,Foundation.NSTextCheckingResult[],Foundation.NSOrthography,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member DidCheckText : AppKit.NSTextView * Foundation.NSRange * Foundation.NSTextCheckingTypes * Foundation.NSDictionary * Foundation.NSTextCheckingResult[] * Foundation.NSOrthography * nint -&gt; Foundation.NSTextCheckingResult[]&#xA;override this.DidCheckText : AppKit.NSTextView * Foundation.NSRange * Foundation.NSTextCheckingTypes * Foundation.NSDictionary * Foundation.NSTextCheckingResult[] * Foundation.NSOrthography * nint -&gt; Foundation.NSTextCheckingResult[]" Usage="nSTextViewDelegate.DidCheckText (view, range, checkingTypes, options, results, orthography, wordCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:didCheckTextInRange:types:options:results:orthography:wordCount:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingResult[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="AppKit.NSTextView" />
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="checkingTypes" Type="Foundation.NSTextCheckingTypes" />
        <Parameter Name="options" Type="Foundation.NSDictionary" />
        <Parameter Name="results" Type="Foundation.NSTextCheckingResult[]" />
        <Parameter Name="orthography" Type="Foundation.NSOrthography" />
        <Parameter Name="wordCount" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="range">To be added.</param>
        <param name="checkingTypes">To be added.</param>
        <param name="options">To be added.</param>
        <param name="results">To be added.</param>
        <param name="orthography">To be added.</param>
        <param name="wordCount">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoCommandBySelector">
      <MemberSignature Language="C#" Value="public virtual bool DoCommandBySelector (AppKit.NSTextView textView, ObjCRuntime.Selector commandSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DoCommandBySelector(class AppKit.NSTextView textView, class ObjCRuntime.Selector commandSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.DoCommandBySelector(AppKit.NSTextView,ObjCRuntime.Selector)" />
      <MemberSignature Language="F#" Value="abstract member DoCommandBySelector : AppKit.NSTextView * ObjCRuntime.Selector -&gt; bool&#xA;override this.DoCommandBySelector : AppKit.NSTextView * ObjCRuntime.Selector -&gt; bool" Usage="nSTextViewDelegate.DoCommandBySelector (textView, commandSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:doCommandBySelector:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="AppKit.NSTextView" />
        <Parameter Name="commandSelector" Type="ObjCRuntime.Selector" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="commandSelector">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DraggedCell">
      <MemberSignature Language="C#" Value="public virtual void DraggedCell (AppKit.NSTextView view, AppKit.NSTextAttachmentCell cell, CoreGraphics.CGRect rect, AppKit.NSEvent theevent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DraggedCell(class AppKit.NSTextView view, class AppKit.NSTextAttachmentCell cell, valuetype CoreGraphics.CGRect rect, class AppKit.NSEvent theevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.DraggedCell(AppKit.NSTextView,AppKit.NSTextAttachmentCell,CoreGraphics.CGRect,AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member DraggedCell : AppKit.NSTextView * AppKit.NSTextAttachmentCell * CoreGraphics.CGRect * AppKit.NSEvent -&gt; unit&#xA;override this.DraggedCell : AppKit.NSTextView * AppKit.NSTextAttachmentCell * CoreGraphics.CGRect * AppKit.NSEvent -&gt; unit" Usage="nSTextViewDelegate.DraggedCell (view, cell, rect, theevent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:draggedCell:inRect:event:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="AppKit.NSTextView" />
        <Parameter Name="cell" Type="AppKit.NSTextAttachmentCell" />
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
        <Parameter Name="theevent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="cell">To be added.</param>
        <param name="rect">To be added.</param>
        <param name="theevent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCandidates">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject[] GetCandidates (AppKit.NSTextView textView, Foundation.NSRange selectedRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject[] GetCandidates(class AppKit.NSTextView textView, valuetype Foundation.NSRange selectedRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.GetCandidates(AppKit.NSTextView,Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member GetCandidates : AppKit.NSTextView * Foundation.NSRange -&gt; Foundation.NSObject[]&#xA;override this.GetCandidates : AppKit.NSTextView * Foundation.NSRange -&gt; Foundation.NSObject[]" Usage="nSTextViewDelegate.GetCandidates (textView, selectedRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:candidatesForSelectedRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="AppKit.NSTextView" />
        <Parameter Name="selectedRange" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="selectedRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompletions">
      <MemberSignature Language="C#" Value="public virtual string[] GetCompletions (AppKit.NSTextView textView, string[] words, Foundation.NSRange charRange, ref nint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetCompletions(class AppKit.NSTextView textView, string[] words, valuetype Foundation.NSRange charRange, valuetype System.nint&amp; index) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.GetCompletions(AppKit.NSTextView,System.String[],Foundation.NSRange,System.nint@)" />
      <MemberSignature Language="F#" Value="abstract member GetCompletions : AppKit.NSTextView * string[] * Foundation.NSRange *  -&gt; string[]&#xA;override this.GetCompletions : AppKit.NSTextView * string[] * Foundation.NSRange *  -&gt; string[]" Usage="nSTextViewDelegate.GetCompletions (textView, words, charRange, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:completions:forPartialWordRange:indexOfSelectedItem:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="AppKit.NSTextView" />
        <Parameter Name="words" Type="System.String[]" />
        <Parameter Name="charRange" Type="Foundation.NSRange" />
        <Parameter Name="index" Type="System.nint" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="words">To be added.</param>
        <param name="charRange">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextCheckingCandidates">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSTextCheckingResult[] GetTextCheckingCandidates (AppKit.NSTextView textView, Foundation.NSTextCheckingResult[] candidates, Foundation.NSRange selectedRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSTextCheckingResult[] GetTextCheckingCandidates(class AppKit.NSTextView textView, class Foundation.NSTextCheckingResult[] candidates, valuetype Foundation.NSRange selectedRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.GetTextCheckingCandidates(AppKit.NSTextView,Foundation.NSTextCheckingResult[],Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member GetTextCheckingCandidates : AppKit.NSTextView * Foundation.NSTextCheckingResult[] * Foundation.NSRange -&gt; Foundation.NSTextCheckingResult[]&#xA;override this.GetTextCheckingCandidates : AppKit.NSTextView * Foundation.NSTextCheckingResult[] * Foundation.NSRange -&gt; Foundation.NSTextCheckingResult[]" Usage="nSTextViewDelegate.GetTextCheckingCandidates (textView, candidates, selectedRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:candidates:forSelectedRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingResult[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="AppKit.NSTextView" />
        <Parameter Name="candidates" Type="Foundation.NSTextCheckingResult[]" />
        <Parameter Name="selectedRange" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="candidates">To be added.</param>
        <param name="selectedRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUndoManager">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSUndoManager GetUndoManager (AppKit.NSTextView view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSUndoManager GetUndoManager(class AppKit.NSTextView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.GetUndoManager(AppKit.NSTextView)" />
      <MemberSignature Language="F#" Value="abstract member GetUndoManager : AppKit.NSTextView -&gt; Foundation.NSUndoManager&#xA;override this.GetUndoManager : AppKit.NSTextView -&gt; Foundation.NSUndoManager" Usage="nSTextViewDelegate.GetUndoManager view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("undoManagerForTextView:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSUndoManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="AppKit.NSTextView" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWritablePasteboardTypes">
      <MemberSignature Language="C#" Value="public virtual string[] GetWritablePasteboardTypes (AppKit.NSTextView view, AppKit.NSTextAttachmentCell forCell, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetWritablePasteboardTypes(class AppKit.NSTextView view, class AppKit.NSTextAttachmentCell forCell, valuetype System.nuint charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.GetWritablePasteboardTypes(AppKit.NSTextView,AppKit.NSTextAttachmentCell,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member GetWritablePasteboardTypes : AppKit.NSTextView * AppKit.NSTextAttachmentCell * nuint -&gt; string[]&#xA;override this.GetWritablePasteboardTypes : AppKit.NSTextView * AppKit.NSTextAttachmentCell * nuint -&gt; string[]" Usage="nSTextViewDelegate.GetWritablePasteboardTypes (view, forCell, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:writablePasteboardTypesForCell:atIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="AppKit.NSTextView" />
        <Parameter Name="forCell" Type="AppKit.NSTextAttachmentCell" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="forCell">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkClicked">
      <MemberSignature Language="C#" Value="public virtual bool LinkClicked (AppKit.NSTextView textView, Foundation.NSObject link, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LinkClicked(class AppKit.NSTextView textView, class Foundation.NSObject link, valuetype System.nuint charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.LinkClicked(AppKit.NSTextView,Foundation.NSObject,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member LinkClicked : AppKit.NSTextView * Foundation.NSObject * nuint -&gt; bool&#xA;override this.LinkClicked : AppKit.NSTextView * Foundation.NSObject * nuint -&gt; bool" Usage="nSTextViewDelegate.LinkClicked (textView, link, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:clickedOnLink:atIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="AppKit.NSTextView" />
        <Parameter Name="link" Type="Foundation.NSObject" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="link">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuForEvent">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSMenu MenuForEvent (AppKit.NSTextView view, AppKit.NSMenu menu, AppKit.NSEvent theEvent, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSMenu MenuForEvent(class AppKit.NSTextView view, class AppKit.NSMenu menu, class AppKit.NSEvent theEvent, valuetype System.nuint charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.MenuForEvent(AppKit.NSTextView,AppKit.NSMenu,AppKit.NSEvent,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member MenuForEvent : AppKit.NSTextView * AppKit.NSMenu * AppKit.NSEvent * nuint -&gt; AppKit.NSMenu&#xA;override this.MenuForEvent : AppKit.NSTextView * AppKit.NSMenu * AppKit.NSEvent * nuint -&gt; AppKit.NSMenu" Usage="nSTextViewDelegate.MenuForEvent (view, menu, theEvent, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:menu:forEvent:atIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSMenu</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="AppKit.NSTextView" />
        <Parameter Name="menu" Type="AppKit.NSMenu" />
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="menu">To be added.</param>
        <param name="theEvent">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldChangeTextInRange">
      <MemberSignature Language="C#" Value="public virtual bool ShouldChangeTextInRange (AppKit.NSTextView textView, Foundation.NSRange affectedCharRange, string replacementString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldChangeTextInRange(class AppKit.NSTextView textView, valuetype Foundation.NSRange affectedCharRange, string replacementString) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.ShouldChangeTextInRange(AppKit.NSTextView,Foundation.NSRange,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ShouldChangeTextInRange : AppKit.NSTextView * Foundation.NSRange * string -&gt; bool&#xA;override this.ShouldChangeTextInRange : AppKit.NSTextView * Foundation.NSRange * string -&gt; bool" Usage="nSTextViewDelegate.ShouldChangeTextInRange (textView, affectedCharRange, replacementString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:shouldChangeTextInRange:replacementString:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="AppKit.NSTextView" />
        <Parameter Name="affectedCharRange" Type="Foundation.NSRange" />
        <Parameter Name="replacementString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="affectedCharRange">To be added.</param>
        <param name="replacementString">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldChangeTextInRanges">
      <MemberSignature Language="C#" Value="public virtual bool ShouldChangeTextInRanges (AppKit.NSTextView textView, Foundation.NSValue[] affectedRanges, string[] replacementStrings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldChangeTextInRanges(class AppKit.NSTextView textView, class Foundation.NSValue[] affectedRanges, string[] replacementStrings) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.ShouldChangeTextInRanges(AppKit.NSTextView,Foundation.NSValue[],System.String[])" />
      <MemberSignature Language="F#" Value="abstract member ShouldChangeTextInRanges : AppKit.NSTextView * Foundation.NSValue[] * string[] -&gt; bool&#xA;override this.ShouldChangeTextInRanges : AppKit.NSTextView * Foundation.NSValue[] * string[] -&gt; bool" Usage="nSTextViewDelegate.ShouldChangeTextInRanges (textView, affectedRanges, replacementStrings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:shouldChangeTextInRanges:replacementStrings:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="AppKit.NSTextView" />
        <Parameter Name="affectedRanges" Type="Foundation.NSValue[]" />
        <Parameter Name="replacementStrings" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="affectedRanges">To be added.</param>
        <param name="replacementStrings">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldChangeTypingAttributes">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary ShouldChangeTypingAttributes (AppKit.NSTextView textView, Foundation.NSDictionary oldTypingAttributes, Foundation.NSDictionary newTypingAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSDictionary ShouldChangeTypingAttributes(class AppKit.NSTextView textView, class Foundation.NSDictionary oldTypingAttributes, class Foundation.NSDictionary newTypingAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.ShouldChangeTypingAttributes(AppKit.NSTextView,Foundation.NSDictionary,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="abstract member ShouldChangeTypingAttributes : AppKit.NSTextView * Foundation.NSDictionary * Foundation.NSDictionary -&gt; Foundation.NSDictionary&#xA;override this.ShouldChangeTypingAttributes : AppKit.NSTextView * Foundation.NSDictionary * Foundation.NSDictionary -&gt; Foundation.NSDictionary" Usage="nSTextViewDelegate.ShouldChangeTypingAttributes (textView, oldTypingAttributes, newTypingAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:shouldChangeTypingAttributes:toAttributes:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="AppKit.NSTextView" />
        <Parameter Name="oldTypingAttributes" Type="Foundation.NSDictionary" />
        <Parameter Name="newTypingAttributes" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="oldTypingAttributes">To be added.</param>
        <param name="newTypingAttributes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSelectCandidates">
      <MemberSignature Language="C#" Value="public virtual bool ShouldSelectCandidates (AppKit.NSTextView textView, nuint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSelectCandidates(class AppKit.NSTextView textView, valuetype System.nuint index) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.ShouldSelectCandidates(AppKit.NSTextView,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member ShouldSelectCandidates : AppKit.NSTextView * nuint -&gt; bool&#xA;override this.ShouldSelectCandidates : AppKit.NSTextView * nuint -&gt; bool" Usage="nSTextViewDelegate.ShouldSelectCandidates (textView, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:shouldSelectCandidateAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="AppKit.NSTextView" />
        <Parameter Name="index" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSetSpellingState">
      <MemberSignature Language="C#" Value="public virtual nint ShouldSetSpellingState (AppKit.NSTextView textView, nint value, Foundation.NSRange affectedCharRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nint ShouldSetSpellingState(class AppKit.NSTextView textView, valuetype System.nint value, valuetype Foundation.NSRange affectedCharRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.ShouldSetSpellingState(AppKit.NSTextView,System.nint,Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member ShouldSetSpellingState : AppKit.NSTextView * nint * Foundation.NSRange -&gt; nint&#xA;override this.ShouldSetSpellingState : AppKit.NSTextView * nint * Foundation.NSRange -&gt; nint" Usage="nSTextViewDelegate.ShouldSetSpellingState (textView, value, affectedCharRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:shouldSetSpellingState:range:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="AppKit.NSTextView" />
        <Parameter Name="value" Type="System.nint" />
        <Parameter Name="affectedCharRange" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="value">To be added.</param>
        <param name="affectedCharRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldUpdateTouchBarItemIdentifiers">
      <MemberSignature Language="C#" Value="public virtual string[] ShouldUpdateTouchBarItemIdentifiers (AppKit.NSTextView textView, string[] identifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] ShouldUpdateTouchBarItemIdentifiers(class AppKit.NSTextView textView, string[] identifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.ShouldUpdateTouchBarItemIdentifiers(AppKit.NSTextView,System.String[])" />
      <MemberSignature Language="F#" Value="abstract member ShouldUpdateTouchBarItemIdentifiers : AppKit.NSTextView * string[] -&gt; string[]&#xA;override this.ShouldUpdateTouchBarItemIdentifiers : AppKit.NSTextView * string[] -&gt; string[]" Usage="nSTextViewDelegate.ShouldUpdateTouchBarItemIdentifiers (textView, identifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:shouldUpdateTouchBarItemIdentifiers:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="AppKit.NSTextView" />
        <Parameter Name="identifiers" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="identifiers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillChangeSelection">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSRange WillChangeSelection (AppKit.NSTextView textView, Foundation.NSRange oldSelectedCharRange, Foundation.NSRange newSelectedCharRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Foundation.NSRange WillChangeSelection(class AppKit.NSTextView textView, valuetype Foundation.NSRange oldSelectedCharRange, valuetype Foundation.NSRange newSelectedCharRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.WillChangeSelection(AppKit.NSTextView,Foundation.NSRange,Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member WillChangeSelection : AppKit.NSTextView * Foundation.NSRange * Foundation.NSRange -&gt; Foundation.NSRange&#xA;override this.WillChangeSelection : AppKit.NSTextView * Foundation.NSRange * Foundation.NSRange -&gt; Foundation.NSRange" Usage="nSTextViewDelegate.WillChangeSelection (textView, oldSelectedCharRange, newSelectedCharRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:willChangeSelectionFromCharacterRange:toCharacterRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="AppKit.NSTextView" />
        <Parameter Name="oldSelectedCharRange" Type="Foundation.NSRange" />
        <Parameter Name="newSelectedCharRange" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="oldSelectedCharRange">To be added.</param>
        <param name="newSelectedCharRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillChangeSelectionFromRanges">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSValue[] WillChangeSelectionFromRanges (AppKit.NSTextView textView, Foundation.NSValue[] oldSelectedCharRanges, Foundation.NSValue[] newSelectedCharRanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSValue[] WillChangeSelectionFromRanges(class AppKit.NSTextView textView, class Foundation.NSValue[] oldSelectedCharRanges, class Foundation.NSValue[] newSelectedCharRanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.WillChangeSelectionFromRanges(AppKit.NSTextView,Foundation.NSValue[],Foundation.NSValue[])" />
      <MemberSignature Language="F#" Value="abstract member WillChangeSelectionFromRanges : AppKit.NSTextView * Foundation.NSValue[] * Foundation.NSValue[] -&gt; Foundation.NSValue[]&#xA;override this.WillChangeSelectionFromRanges : AppKit.NSTextView * Foundation.NSValue[] * Foundation.NSValue[] -&gt; Foundation.NSValue[]" Usage="nSTextViewDelegate.WillChangeSelectionFromRanges (textView, oldSelectedCharRanges, newSelectedCharRanges)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSValue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="AppKit.NSTextView" />
        <Parameter Name="oldSelectedCharRanges" Type="Foundation.NSValue[]" />
        <Parameter Name="newSelectedCharRanges" Type="Foundation.NSValue[]" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="oldSelectedCharRanges">To be added.</param>
        <param name="newSelectedCharRanges">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillCheckText">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary WillCheckText (AppKit.NSTextView view, Foundation.NSRange range, Foundation.NSDictionary options, Foundation.NSTextCheckingTypes checkingTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSDictionary WillCheckText(class AppKit.NSTextView view, valuetype Foundation.NSRange range, class Foundation.NSDictionary options, valuetype Foundation.NSTextCheckingTypes checkingTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.WillCheckText(AppKit.NSTextView,Foundation.NSRange,Foundation.NSDictionary,Foundation.NSTextCheckingTypes)" />
      <MemberSignature Language="F#" Value="abstract member WillCheckText : AppKit.NSTextView * Foundation.NSRange * Foundation.NSDictionary * Foundation.NSTextCheckingTypes -&gt; Foundation.NSDictionary&#xA;override this.WillCheckText : AppKit.NSTextView * Foundation.NSRange * Foundation.NSDictionary * Foundation.NSTextCheckingTypes -&gt; Foundation.NSDictionary" Usage="nSTextViewDelegate.WillCheckText (view, range, options, checkingTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:willCheckTextInRange:options:types:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="AppKit.NSTextView" />
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="options" Type="Foundation.NSDictionary" />
        <Parameter Name="checkingTypes" Type="Foundation.NSTextCheckingTypes" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="range">To be added.</param>
        <param name="options">To be added.</param>
        <param name="checkingTypes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillDisplayToolTip">
      <MemberSignature Language="C#" Value="public virtual string WillDisplayToolTip (AppKit.NSTextView textView, string tooltip, nuint characterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string WillDisplayToolTip(class AppKit.NSTextView textView, string tooltip, valuetype System.nuint characterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.WillDisplayToolTip(AppKit.NSTextView,System.String,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member WillDisplayToolTip : AppKit.NSTextView * string * nuint -&gt; string&#xA;override this.WillDisplayToolTip : AppKit.NSTextView * string * nuint -&gt; string" Usage="nSTextViewDelegate.WillDisplayToolTip (textView, tooltip, characterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:willDisplayToolTip:forCharacterAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="AppKit.NSTextView" />
        <Parameter Name="tooltip" Type="System.String" />
        <Parameter Name="characterIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="tooltip">To be added.</param>
        <param name="characterIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteCell">
      <MemberSignature Language="C#" Value="public virtual bool WriteCell (AppKit.NSTextView view, AppKit.NSTextAttachmentCell cell, nuint charIndex, AppKit.NSPasteboard pboard, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WriteCell(class AppKit.NSTextView view, class AppKit.NSTextAttachmentCell cell, valuetype System.nuint charIndex, class AppKit.NSPasteboard pboard, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextViewDelegate.WriteCell(AppKit.NSTextView,AppKit.NSTextAttachmentCell,System.nuint,AppKit.NSPasteboard,System.String)" />
      <MemberSignature Language="F#" Value="abstract member WriteCell : AppKit.NSTextView * AppKit.NSTextAttachmentCell * nuint * AppKit.NSPasteboard * string -&gt; bool&#xA;override this.WriteCell : AppKit.NSTextView * AppKit.NSTextAttachmentCell * nuint * AppKit.NSPasteboard * string -&gt; bool" Usage="nSTextViewDelegate.WriteCell (view, cell, charIndex, pboard, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textView:writeCell:atIndex:toPasteboard:type:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="AppKit.NSTextView" />
        <Parameter Name="cell" Type="AppKit.NSTextAttachmentCell" />
        <Parameter Name="charIndex" Type="System.nuint" />
        <Parameter Name="pboard" Type="AppKit.NSPasteboard" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="cell">To be added.</param>
        <param name="charIndex">To be added.</param>
        <param name="pboard">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
