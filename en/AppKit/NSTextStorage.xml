<Type Name="NSTextStorage" FullName="AppKit.NSTextStorage">
  <TypeSignature Language="C#" Value="public class NSTextStorage : Foundation.NSMutableAttributedString" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSTextStorage extends Foundation.NSMutableAttributedString" />
  <TypeSignature Language="DocId" Value="T:AppKit.NSTextStorage" />
  <TypeSignature Language="F#" Value="type NSTextStorage = class&#xA;    inherit NSMutableAttributedString" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSMutableAttributedString</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("NSTextStorage", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextStorage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextStorage.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextStorage (Foundation.NSAttributedString other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSAttributedString other) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextStorage.#ctor(Foundation.NSAttributedString)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextStorage : Foundation.NSAttributedString -&gt; AppKit.NSTextStorage" Usage="new AppKit.NSTextStorage other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="Foundation.NSAttributedString" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextStorage (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextStorage.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextStorage : Foundation.NSCoder -&gt; AppKit.NSTextStorage" Usage="new AppKit.NSTextStorage coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSTextStorage (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextStorage.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextStorage : Foundation.NSObjectFlag -&gt; AppKit.NSTextStorage" Usage="new AppKit.NSTextStorage t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSTextStorage (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextStorage.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextStorage : nativeint -&gt; AppKit.NSTextStorage" Usage="new AppKit.NSTextStorage handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextStorage (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextStorage.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextStorage : string -&gt; AppKit.NSTextStorage" Usage="new AppKit.NSTextStorage str" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithString:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextStorage (string str, CoreText.CTStringAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string str, class CoreText.CTStringAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextStorage.#ctor(System.String,CoreText.CTStringAttributes)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextStorage : string * CoreText.CTStringAttributes -&gt; AppKit.NSTextStorage" Usage="new AppKit.NSTextStorage (str, attributes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="attributes" Type="CoreText.CTStringAttributes" />
      </Parameters>
      <Docs>
        <param name="str">To be added.</param>
        <param name="attributes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextStorage (string str, Foundation.NSDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string str, class Foundation.NSDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextStorage.#ctor(System.String,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextStorage : string * Foundation.NSDictionary -&gt; AppKit.NSTextStorage" Usage="new AppKit.NSTextStorage (str, attributes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="attributes" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="str">To be added.</param>
        <param name="attributes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLayoutManager">
      <MemberSignature Language="C#" Value="public virtual void AddLayoutManager (AppKit.NSLayoutManager obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLayoutManager(class AppKit.NSLayoutManager obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextStorage.AddLayoutManager(AppKit.NSLayoutManager)" />
      <MemberSignature Language="F#" Value="abstract member AddLayoutManager : AppKit.NSLayoutManager -&gt; unit&#xA;override this.AddLayoutManager : AppKit.NSLayoutManager -&gt; unit" Usage="nSTextStorage.AddLayoutManager obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("addLayoutManager:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="AppKit.NSLayoutManager" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeInLength">
      <MemberSignature Language="C#" Value="public virtual nint ChangeInLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint ChangeInLength" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextStorage.ChangeInLength" />
      <MemberSignature Language="F#" Value="member this.ChangeInLength : nint" Usage="AppKit.NSTextStorage.ChangeInLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("changeInLength")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextStorage.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AppKit.NSTextStorage.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delegate">
      <MemberSignature Language="C#" Value="public AppKit.INSTextStorageDelegate Delegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.INSTextStorageDelegate Delegate" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextStorage.Delegate" />
      <MemberSignature Language="F#" Value="member this.Delegate : AppKit.INSTextStorageDelegate with get, set" Usage="AppKit.NSTextStorage.Delegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.INSTextStorageDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidProcessEditing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;AppKit.NSTextStorageEventArgs&gt; DidProcessEditing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class AppKit.NSTextStorageEventArgs&gt; DidProcessEditing" />
      <MemberSignature Language="DocId" Value="E:AppKit.NSTextStorage.DidProcessEditing" />
      <MemberSignature Language="F#" Value="member this.DidProcessEditing : EventHandler&lt;AppKit.NSTextStorageEventArgs&gt; " Usage="member this.DidProcessEditing : System.EventHandler&lt;AppKit.NSTextStorageEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;AppKit.NSTextStorageEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidProcessEditingNotification">
      <MemberSignature Language="C#" Value="public static Foundation.NSString DidProcessEditingNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString DidProcessEditingNotification" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextStorage.DidProcessEditingNotification" />
      <MemberSignature Language="F#" Value="member this.DidProcessEditingNotification : Foundation.NSString" Usage="AppKit.NSTextStorage.DidProcessEditingNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Advice("Use NSTextStorage.Notifications.ObserveDidProcessEditing helper method instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Field("NSTextStorageDidProcessEditingNotification", "AppKit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextStorage.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="nSTextStorage.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Edited">
      <MemberSignature Language="C#" Value="public virtual void Edited (nuint editedMask, Foundation.NSRange range, nint delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Edited(valuetype System.nuint editedMask, valuetype Foundation.NSRange range, valuetype System.nint delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextStorage.Edited(System.nuint,Foundation.NSRange,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member Edited : nuint * Foundation.NSRange * nint -&gt; unit&#xA;override this.Edited : nuint * Foundation.NSRange * nint -&gt; unit" Usage="nSTextStorage.Edited (editedMask, range, delta)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("edited:range:changeInLength:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editedMask" Type="System.nuint" />
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="delta" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="editedMask">To be added.</param>
        <param name="range">To be added.</param>
        <param name="delta">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditedMask">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSTextStorageEditedFlags EditedMask { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AppKit.NSTextStorageEditedFlags EditedMask" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextStorage.EditedMask" />
      <MemberSignature Language="F#" Value="member this.EditedMask : AppKit.NSTextStorageEditedFlags" Usage="AppKit.NSTextStorage.EditedMask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("editedMask")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSTextStorageEditedFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditedRange">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSRange EditedRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSRange EditedRange" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextStorage.EditedRange" />
      <MemberSignature Language="F#" Value="member this.EditedRange : Foundation.NSRange" Usage="AppKit.NSTextStorage.EditedRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("editedRange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureAttributesAreFixed">
      <MemberSignature Language="C#" Value="public virtual void EnsureAttributesAreFixed (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureAttributesAreFixed(valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextStorage.EnsureAttributesAreFixed(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member EnsureAttributesAreFixed : Foundation.NSRange -&gt; unit&#xA;override this.EnsureAttributesAreFixed : Foundation.NSRange -&gt; unit" Usage="nSTextStorage.EnsureAttributesAreFixed range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("ensureAttributesAreFixedInRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixesAttributesLazily">
      <MemberSignature Language="C#" Value="public virtual bool FixesAttributesLazily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FixesAttributesLazily" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextStorage.FixesAttributesLazily" />
      <MemberSignature Language="F#" Value="member this.FixesAttributesLazily : bool" Usage="AppKit.NSTextStorage.FixesAttributesLazily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("fixesAttributesLazily")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateAttributes">
      <MemberSignature Language="C#" Value="public virtual void InvalidateAttributes (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateAttributes(valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextStorage.InvalidateAttributes(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member InvalidateAttributes : Foundation.NSRange -&gt; unit&#xA;override this.InvalidateAttributes : Foundation.NSRange -&gt; unit" Usage="nSTextStorage.InvalidateAttributes range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("invalidateAttributesInRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutManagers">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSLayoutManager[] LayoutManagers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSLayoutManager[] LayoutManagers" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextStorage.LayoutManagers" />
      <MemberSignature Language="F#" Value="member this.LayoutManagers : AppKit.NSLayoutManager[]" Usage="AppKit.NSTextStorage.LayoutManagers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("layoutManagers")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSLayoutManager[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEditing">
      <MemberSignature Language="C#" Value="public virtual void ProcessEditing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessEditing() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextStorage.ProcessEditing" />
      <MemberSignature Language="F#" Value="abstract member ProcessEditing : unit -&gt; unit&#xA;override this.ProcessEditing : unit -&gt; unit" Usage="nSTextStorage.ProcessEditing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("processEditing")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLayoutManager">
      <MemberSignature Language="C#" Value="public virtual void RemoveLayoutManager (AppKit.NSLayoutManager obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveLayoutManager(class AppKit.NSLayoutManager obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextStorage.RemoveLayoutManager(AppKit.NSLayoutManager)" />
      <MemberSignature Language="F#" Value="abstract member RemoveLayoutManager : AppKit.NSLayoutManager -&gt; unit&#xA;override this.RemoveLayoutManager : AppKit.NSLayoutManager -&gt; unit" Usage="nSTextStorage.RemoveLayoutManager obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("removeLayoutManager:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="AppKit.NSLayoutManager" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextStorageDidProcessEditing">
      <MemberSignature Language="C#" Value="public event EventHandler TextStorageDidProcessEditing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextStorageDidProcessEditing" />
      <MemberSignature Language="DocId" Value="E:AppKit.NSTextStorage.TextStorageDidProcessEditing" />
      <MemberSignature Language="F#" Value="member this.TextStorageDidProcessEditing : EventHandler " Usage="member this.TextStorageDidProcessEditing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextStorageWillProcessEditing">
      <MemberSignature Language="C#" Value="public event EventHandler TextStorageWillProcessEditing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextStorageWillProcessEditing" />
      <MemberSignature Language="DocId" Value="E:AppKit.NSTextStorage.TextStorageWillProcessEditing" />
      <MemberSignature Language="F#" Value="member this.TextStorageWillProcessEditing : EventHandler " Usage="member this.TextStorageWillProcessEditing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakDelegate">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject WeakDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject WeakDelegate" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextStorage.WeakDelegate" />
      <MemberSignature Language="F#" Value="member this.WeakDelegate : Foundation.NSObject with get, set" Usage="AppKit.NSTextStorage.WeakDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("delegate", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDelegate:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillProcessEditing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;AppKit.NSTextStorageEventArgs&gt; WillProcessEditing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class AppKit.NSTextStorageEventArgs&gt; WillProcessEditing" />
      <MemberSignature Language="DocId" Value="E:AppKit.NSTextStorage.WillProcessEditing" />
      <MemberSignature Language="F#" Value="member this.WillProcessEditing : EventHandler&lt;AppKit.NSTextStorageEventArgs&gt; " Usage="member this.WillProcessEditing : System.EventHandler&lt;AppKit.NSTextStorageEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;AppKit.NSTextStorageEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillProcessEditingNotification">
      <MemberSignature Language="C#" Value="public static Foundation.NSString WillProcessEditingNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString WillProcessEditingNotification" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextStorage.WillProcessEditingNotification" />
      <MemberSignature Language="F#" Value="member this.WillProcessEditingNotification : Foundation.NSString" Usage="AppKit.NSTextStorage.WillProcessEditingNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Advice("Use NSTextStorage.Notifications.ObserveWillProcessEditing helper method instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Field("NSTextStorageWillProcessEditingNotification", "AppKit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
