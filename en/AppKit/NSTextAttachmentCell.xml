<Type Name="NSTextAttachmentCell" FullName="AppKit.NSTextAttachmentCell">
  <TypeSignature Language="C#" Value="public class NSTextAttachmentCell : AppKit.NSCell" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSTextAttachmentCell extends AppKit.NSCell" />
  <TypeSignature Language="DocId" Value="T:AppKit.NSTextAttachmentCell" />
  <TypeSignature Language="F#" Value="type NSTextAttachmentCell = class&#xA;    inherit NSCell" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>AppKit.NSCell</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("NSTextAttachmentCell", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextAttachmentCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextAttachmentCell.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextAttachmentCell (AppKit.NSImage image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class AppKit.NSImage image) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextAttachmentCell.#ctor(AppKit.NSImage)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextAttachmentCell : AppKit.NSImage -&gt; AppKit.NSTextAttachmentCell" Usage="new AppKit.NSTextAttachmentCell image" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initImageCell:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="image" Type="AppKit.NSImage" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextAttachmentCell (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextAttachmentCell.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextAttachmentCell : Foundation.NSCoder -&gt; AppKit.NSTextAttachmentCell" Usage="new AppKit.NSTextAttachmentCell coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSTextAttachmentCell (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextAttachmentCell.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextAttachmentCell : Foundation.NSObjectFlag -&gt; AppKit.NSTextAttachmentCell" Usage="new AppKit.NSTextAttachmentCell t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSTextAttachmentCell (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextAttachmentCell.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextAttachmentCell : nativeint -&gt; AppKit.NSTextAttachmentCell" Usage="new AppKit.NSTextAttachmentCell handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextAttachmentCell (string aString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string aString) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextAttachmentCell.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextAttachmentCell : string -&gt; AppKit.NSTextAttachmentCell" Usage="new AppKit.NSTextAttachmentCell aString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initTextCell:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="aString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="aString">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attachment">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSTextAttachment Attachment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextAttachment Attachment" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextAttachmentCell.Attachment" />
      <MemberSignature Language="F#" Value="member this.Attachment : AppKit.NSTextAttachment with get, set" Usage="AppKit.NSTextAttachmentCell.Attachment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("attachment")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAttachment:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSTextAttachment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellBaselineOffset">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGPoint CellBaselineOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGPoint CellBaselineOffset" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextAttachmentCell.CellBaselineOffset" />
      <MemberSignature Language="F#" Value="member this.CellBaselineOffset : CoreGraphics.CGPoint" Usage="AppKit.NSTextAttachmentCell.CellBaselineOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("cellBaselineOffset")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellFrameForTextContainer">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect CellFrameForTextContainer (AppKit.NSTextContainer textContainer, CoreGraphics.CGRect lineFrag, CoreGraphics.CGPoint position, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGRect CellFrameForTextContainer(class AppKit.NSTextContainer textContainer, valuetype CoreGraphics.CGRect lineFrag, valuetype CoreGraphics.CGPoint position, valuetype System.nuint charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextAttachmentCell.CellFrameForTextContainer(AppKit.NSTextContainer,CoreGraphics.CGRect,CoreGraphics.CGPoint,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member CellFrameForTextContainer : AppKit.NSTextContainer * CoreGraphics.CGRect * CoreGraphics.CGPoint * nuint -&gt; CoreGraphics.CGRect&#xA;override this.CellFrameForTextContainer : AppKit.NSTextContainer * CoreGraphics.CGRect * CoreGraphics.CGPoint * nuint -&gt; CoreGraphics.CGRect" Usage="nSTextAttachmentCell.CellFrameForTextContainer (textContainer, lineFrag, position, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textContainer" Type="AppKit.NSTextContainer" />
        <Parameter Name="lineFrag" Type="CoreGraphics.CGRect" />
        <Parameter Name="position" Type="CoreGraphics.CGPoint" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="textContainer">To be added.</param>
        <param name="lineFrag">To be added.</param>
        <param name="position">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellSize">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGSize CellSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGSize CellSize" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextAttachmentCell.CellSize" />
      <MemberSignature Language="F#" Value="member this.CellSize : CoreGraphics.CGSize" Usage="AppKit.NSTextAttachmentCell.CellSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("cellSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextAttachmentCell.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AppKit.NSTextAttachmentCell.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawWithFrame">
      <MemberSignature Language="C#" Value="public virtual void DrawWithFrame (CoreGraphics.CGRect cellFrame, AppKit.NSView controlView, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawWithFrame(valuetype CoreGraphics.CGRect cellFrame, class AppKit.NSView controlView, valuetype System.nuint charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextAttachmentCell.DrawWithFrame(CoreGraphics.CGRect,AppKit.NSView,System.nuint)" />
      <MemberSignature Language="F#" Value="override this.DrawWithFrame : CoreGraphics.CGRect * AppKit.NSView * nuint -&gt; unit" Usage="nSTextAttachmentCell.DrawWithFrame (cellFrame, controlView, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawWithFrame:inView:characterIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cellFrame" Type="CoreGraphics.CGRect" />
        <Parameter Name="controlView" Type="AppKit.NSView" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="cellFrame">To be added.</param>
        <param name="controlView">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawWithFrame">
      <MemberSignature Language="C#" Value="public virtual void DrawWithFrame (CoreGraphics.CGRect cellFrame, AppKit.NSView controlView, nuint charIndex, AppKit.NSLayoutManager layoutManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawWithFrame(valuetype CoreGraphics.CGRect cellFrame, class AppKit.NSView controlView, valuetype System.nuint charIndex, class AppKit.NSLayoutManager layoutManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextAttachmentCell.DrawWithFrame(CoreGraphics.CGRect,AppKit.NSView,System.nuint,AppKit.NSLayoutManager)" />
      <MemberSignature Language="F#" Value="override this.DrawWithFrame : CoreGraphics.CGRect * AppKit.NSView * nuint * AppKit.NSLayoutManager -&gt; unit" Usage="nSTextAttachmentCell.DrawWithFrame (cellFrame, controlView, charIndex, layoutManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawWithFrame:inView:characterIndex:layoutManager:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cellFrame" Type="CoreGraphics.CGRect" />
        <Parameter Name="controlView" Type="AppKit.NSView" />
        <Parameter Name="charIndex" Type="System.nuint" />
        <Parameter Name="layoutManager" Type="AppKit.NSLayoutManager" />
      </Parameters>
      <Docs>
        <param name="cellFrame">To be added.</param>
        <param name="controlView">To be added.</param>
        <param name="charIndex">To be added.</param>
        <param name="layoutManager">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Highlight">
      <MemberSignature Language="C#" Value="public virtual void Highlight (bool highlight, CoreGraphics.CGRect cellFrame, AppKit.NSView controlView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Highlight(bool highlight, valuetype CoreGraphics.CGRect cellFrame, class AppKit.NSView controlView) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextAttachmentCell.Highlight(System.Boolean,CoreGraphics.CGRect,AppKit.NSView)" />
      <MemberSignature Language="F#" Value="override this.Highlight : bool * CoreGraphics.CGRect * AppKit.NSView -&gt; unit" Usage="nSTextAttachmentCell.Highlight (highlight, cellFrame, controlView)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("highlight:withFrame:inView:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highlight" Type="System.Boolean" />
        <Parameter Name="cellFrame" Type="CoreGraphics.CGRect" />
        <Parameter Name="controlView" Type="AppKit.NSView" />
      </Parameters>
      <Docs>
        <param name="highlight">To be added.</param>
        <param name="cellFrame">To be added.</param>
        <param name="controlView">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackMouse">
      <MemberSignature Language="C#" Value="public virtual bool TrackMouse (AppKit.NSEvent theEvent, CoreGraphics.CGRect cellFrame, AppKit.NSView controlView, bool untilMouseUp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TrackMouse(class AppKit.NSEvent theEvent, valuetype CoreGraphics.CGRect cellFrame, class AppKit.NSView controlView, bool untilMouseUp) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextAttachmentCell.TrackMouse(AppKit.NSEvent,CoreGraphics.CGRect,AppKit.NSView,System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.TrackMouse : AppKit.NSEvent * CoreGraphics.CGRect * AppKit.NSView * bool -&gt; bool" Usage="nSTextAttachmentCell.TrackMouse (theEvent, cellFrame, controlView, untilMouseUp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("trackMouse:inRect:ofView:untilMouseUp:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
        <Parameter Name="cellFrame" Type="CoreGraphics.CGRect" />
        <Parameter Name="controlView" Type="AppKit.NSView" />
        <Parameter Name="untilMouseUp" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <param name="cellFrame">To be added.</param>
        <param name="controlView">To be added.</param>
        <param name="untilMouseUp">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackMouse">
      <MemberSignature Language="C#" Value="public virtual bool TrackMouse (AppKit.NSEvent theEvent, CoreGraphics.CGRect cellFrame, AppKit.NSView controlView, nuint charIndex, bool untilMouseUp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TrackMouse(class AppKit.NSEvent theEvent, valuetype CoreGraphics.CGRect cellFrame, class AppKit.NSView controlView, valuetype System.nuint charIndex, bool untilMouseUp) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextAttachmentCell.TrackMouse(AppKit.NSEvent,CoreGraphics.CGRect,AppKit.NSView,System.nuint,System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.TrackMouse : AppKit.NSEvent * CoreGraphics.CGRect * AppKit.NSView * nuint * bool -&gt; bool" Usage="nSTextAttachmentCell.TrackMouse (theEvent, cellFrame, controlView, charIndex, untilMouseUp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
        <Parameter Name="cellFrame" Type="CoreGraphics.CGRect" />
        <Parameter Name="controlView" Type="AppKit.NSView" />
        <Parameter Name="charIndex" Type="System.nuint" />
        <Parameter Name="untilMouseUp" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <param name="cellFrame">To be added.</param>
        <param name="controlView">To be added.</param>
        <param name="charIndex">To be added.</param>
        <param name="untilMouseUp">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WantsToTrackMouse">
      <MemberSignature Language="C#" Value="public virtual bool WantsToTrackMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WantsToTrackMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextAttachmentCell.WantsToTrackMouse" />
      <MemberSignature Language="F#" Value="abstract member WantsToTrackMouse : unit -&gt; bool&#xA;override this.WantsToTrackMouse : unit -&gt; bool" Usage="nSTextAttachmentCell.WantsToTrackMouse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("wantsToTrackMouse")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WantsToTrackMouse">
      <MemberSignature Language="C#" Value="public virtual bool WantsToTrackMouse (AppKit.NSEvent theEvent, CoreGraphics.CGRect cellFrame, AppKit.NSView controlView, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WantsToTrackMouse(class AppKit.NSEvent theEvent, valuetype CoreGraphics.CGRect cellFrame, class AppKit.NSView controlView, valuetype System.nuint charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextAttachmentCell.WantsToTrackMouse(AppKit.NSEvent,CoreGraphics.CGRect,AppKit.NSView,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member WantsToTrackMouse : AppKit.NSEvent * CoreGraphics.CGRect * AppKit.NSView * nuint -&gt; bool&#xA;override this.WantsToTrackMouse : AppKit.NSEvent * CoreGraphics.CGRect * AppKit.NSView * nuint -&gt; bool" Usage="nSTextAttachmentCell.WantsToTrackMouse (theEvent, cellFrame, controlView, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
        <Parameter Name="cellFrame" Type="CoreGraphics.CGRect" />
        <Parameter Name="controlView" Type="AppKit.NSView" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <param name="cellFrame">To be added.</param>
        <param name="controlView">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
