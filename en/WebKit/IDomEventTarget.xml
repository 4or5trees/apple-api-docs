<Type Name="IDomEventTarget" FullName="WebKit.IDomEventTarget">
  <TypeSignature Language="C#" Value="public interface IDomEventTarget : Foundation.INSCopying, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDomEventTarget implements class Foundation.INSCopying, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:WebKit.IDomEventTarget" />
  <TypeSignature Language="F#" Value="type IDomEventTarget = interface&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSCopying" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="DOMEventTarget", WrapperType=typeof(WebKit.DomEventTargetWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="AddEventListener", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(System.String), typeof(WebKit.IDomEventListener), typeof(System.Boolean) }, Selector="addEventListener:listener:useCapture:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="RemoveEventListener", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(System.String), typeof(WebKit.IDomEventListener), typeof(System.Boolean) }, Selector="removeEventListener:listener:useCapture:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DispatchEvent", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(WebKit.DomEvent) }, ReturnType=typeof(System.Boolean), Selector="dispatchEvent:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.None, "No longer supported.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddEventListener">
      <MemberSignature Language="C#" Value="public void AddEventListener (string type, WebKit.IDomEventListener listener, bool useCapture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddEventListener(string type, class WebKit.IDomEventListener listener, bool useCapture) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebKit.IDomEventTarget.AddEventListener(System.String,WebKit.IDomEventListener,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member AddEventListener : string * WebKit.IDomEventListener * bool -&gt; unit" Usage="iDomEventTarget.AddEventListener (type, listener, useCapture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("addEventListener:listener:useCapture:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="listener" Type="WebKit.IDomEventListener" />
        <Parameter Name="useCapture" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="listener">To be added.</param>
        <param name="useCapture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchEvent">
      <MemberSignature Language="C#" Value="public bool DispatchEvent (WebKit.DomEvent evt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchEvent(class WebKit.DomEvent evt) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebKit.IDomEventTarget.DispatchEvent(WebKit.DomEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchEvent : WebKit.DomEvent -&gt; bool" Usage="iDomEventTarget.DispatchEvent evt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("dispatchEvent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evt" Type="WebKit.DomEvent" />
      </Parameters>
      <Docs>
        <param name="evt">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEventListener">
      <MemberSignature Language="C#" Value="public void RemoveEventListener (string type, WebKit.IDomEventListener listener, bool useCapture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveEventListener(string type, class WebKit.IDomEventListener listener, bool useCapture) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebKit.IDomEventTarget.RemoveEventListener(System.String,WebKit.IDomEventListener,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member RemoveEventListener : string * WebKit.IDomEventListener * bool -&gt; unit" Usage="iDomEventTarget.RemoveEventListener (type, listener, useCapture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("removeEventListener:listener:useCapture:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="listener" Type="WebKit.IDomEventListener" />
        <Parameter Name="useCapture" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="listener">To be added.</param>
        <param name="useCapture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
