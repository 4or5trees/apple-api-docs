<Type Name="IWebDocumentRepresentation" FullName="WebKit.IWebDocumentRepresentation">
  <TypeSignature Language="C#" Value="public interface IWebDocumentRepresentation : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebDocumentRepresentation implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:WebKit.IWebDocumentRepresentation" />
  <TypeSignature Language="F#" Value="type IWebDocumentRepresentation = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="WebDocumentRepresentation", WrapperType=typeof(WebKit.WebDocumentRepresentationWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="SetDataSource", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(WebKit.WebDataSource) }, Selector="setDataSource:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="ReceivedData", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Foundation.NSData), typeof(WebKit.WebDataSource) }, Selector="receivedData:withDataSource:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="ReceivedError", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Foundation.NSError), typeof(WebKit.WebDataSource) }, Selector="receivedError:withDataSource:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="FinishedLoading", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(WebKit.WebDataSource) }, Selector="finishedLoadingWithDataSource:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="canProvideDocumentSource", IsProperty=true, IsRequired=true, IsStatic=false, Name="CanProvideDocumentSource", PropertyType=typeof(System.Boolean), Selector="canProvideDocumentSource")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="documentSource", IsProperty=true, IsRequired=true, IsStatic=false, Name="DocumentSource", PropertyType=typeof(System.String), Selector="documentSource")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="title", IsProperty=true, IsRequired=true, IsStatic=false, Name="Title", PropertyType=typeof(System.String), Selector="title")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.None, "No longer supported.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CanProvideDocumentSource">
      <MemberSignature Language="C#" Value="public bool CanProvideDocumentSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanProvideDocumentSource" />
      <MemberSignature Language="DocId" Value="P:WebKit.IWebDocumentRepresentation.CanProvideDocumentSource" />
      <MemberSignature Language="F#" Value="member this.CanProvideDocumentSource : bool" Usage="WebKit.IWebDocumentRepresentation.CanProvideDocumentSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("canProvideDocumentSource")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentSource">
      <MemberSignature Language="C#" Value="public string DocumentSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentSource" />
      <MemberSignature Language="DocId" Value="P:WebKit.IWebDocumentRepresentation.DocumentSource" />
      <MemberSignature Language="F#" Value="member this.DocumentSource : string" Usage="WebKit.IWebDocumentRepresentation.DocumentSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("documentSource")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishedLoading">
      <MemberSignature Language="C#" Value="public void FinishedLoading (WebKit.WebDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinishedLoading(class WebKit.WebDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebKit.IWebDocumentRepresentation.FinishedLoading(WebKit.WebDataSource)" />
      <MemberSignature Language="F#" Value="abstract member FinishedLoading : WebKit.WebDataSource -&gt; unit" Usage="iWebDocumentRepresentation.FinishedLoading dataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("finishedLoadingWithDataSource:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="WebKit.WebDataSource" />
      </Parameters>
      <Docs>
        <param name="dataSource">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedData">
      <MemberSignature Language="C#" Value="public void ReceivedData (Foundation.NSData data, WebKit.WebDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceivedData(class Foundation.NSData data, class WebKit.WebDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebKit.IWebDocumentRepresentation.ReceivedData(Foundation.NSData,WebKit.WebDataSource)" />
      <MemberSignature Language="F#" Value="abstract member ReceivedData : Foundation.NSData * WebKit.WebDataSource -&gt; unit" Usage="iWebDocumentRepresentation.ReceivedData (data, dataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("receivedData:withDataSource:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Foundation.NSData" />
        <Parameter Name="dataSource" Type="WebKit.WebDataSource" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="dataSource">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedError">
      <MemberSignature Language="C#" Value="public void ReceivedError (Foundation.NSError error, WebKit.WebDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceivedError(class Foundation.NSError error, class WebKit.WebDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebKit.IWebDocumentRepresentation.ReceivedError(Foundation.NSError,WebKit.WebDataSource)" />
      <MemberSignature Language="F#" Value="abstract member ReceivedError : Foundation.NSError * WebKit.WebDataSource -&gt; unit" Usage="iWebDocumentRepresentation.ReceivedError (error, dataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("receivedError:withDataSource:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="Foundation.NSError" />
        <Parameter Name="dataSource" Type="WebKit.WebDataSource" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <param name="dataSource">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataSource">
      <MemberSignature Language="C#" Value="public void SetDataSource (WebKit.WebDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDataSource(class WebKit.WebDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebKit.IWebDocumentRepresentation.SetDataSource(WebKit.WebDataSource)" />
      <MemberSignature Language="F#" Value="abstract member SetDataSource : WebKit.WebDataSource -&gt; unit" Usage="iWebDocumentRepresentation.SetDataSource dataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setDataSource:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="WebKit.WebDataSource" />
      </Parameters>
      <Docs>
        <param name="dataSource">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:WebKit.IWebDocumentRepresentation.Title" />
      <MemberSignature Language="F#" Value="member this.Title : string" Usage="WebKit.IWebDocumentRepresentation.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("title")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
