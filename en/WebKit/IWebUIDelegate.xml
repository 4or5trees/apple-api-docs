<Type Name="IWebUIDelegate" FullName="WebKit.IWebUIDelegate">
  <TypeSignature Language="C#" Value="public interface IWebUIDelegate : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebUIDelegate implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:WebKit.IWebUIDelegate" />
  <TypeSignature Language="F#" Value="type IWebUIDelegate = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(FormalSince="10.11", Name="WebUIDelegate", WrapperType=typeof(WebKit.WebUIDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UICreateWebView", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(Foundation.NSUrlRequest) }, ReturnType=typeof(WebKit.WebView), Selector="webView:createWebViewWithRequest:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIShow", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(WebKit.WebView) }, Selector="webViewShow:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UICreateModalDialog", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(Foundation.NSUrlRequest) }, ReturnType=typeof(WebKit.WebView), Selector="webView:createWebViewModalDialogWithRequest:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIRunModal", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(WebKit.WebView) }, Selector="webViewRunModal:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIClose", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(WebKit.WebView) }, Selector="webViewClose:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIFocus", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(WebKit.WebView) }, Selector="webViewFocus:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIUnfocus", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(WebKit.WebView) }, Selector="webViewUnfocus:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIGetFirstResponder", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(WebKit.WebView) }, ReturnType=typeof(AppKit.NSResponder), Selector="webViewFirstResponder:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIMakeFirstResponder", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(AppKit.NSResponder) }, Selector="webView:makeFirstResponder:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UISetStatusText", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(System.String) }, Selector="webView:setStatusText:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIGetStatusText", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(WebKit.WebView) }, ReturnType=typeof(System.String), Selector="webViewStatusText:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIAreToolbarsVisible", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(WebKit.WebView) }, ReturnType=typeof(System.Boolean), Selector="webViewAreToolbarsVisible:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UISetToolbarsVisible", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(System.Boolean) }, Selector="webView:setToolbarsVisible:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIIsStatusBarVisible", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(WebKit.WebView) }, ReturnType=typeof(System.Boolean), Selector="webViewIsStatusBarVisible:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UISetStatusBarVisible", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(System.Boolean) }, Selector="webView:setStatusBarVisible:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIIsResizable", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(WebKit.WebView) }, ReturnType=typeof(System.Boolean), Selector="webViewIsResizable:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UISetResizable", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(System.Boolean) }, Selector="webView:setResizable:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UISetFrame", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(CoreGraphics.CGRect) }, Selector="webView:setFrame:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIGetFrame", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(WebKit.WebView) }, ReturnType=typeof(CoreGraphics.CGRect), Selector="webViewFrame:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIRunJavaScriptAlertPanelMessage", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(System.String), typeof(WebKit.WebFrame) }, Selector="webView:runJavaScriptAlertPanelWithMessage:initiatedByFrame:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIRunJavaScriptConfirmationPanel", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(System.String), typeof(WebKit.WebFrame) }, ReturnType=typeof(System.Boolean), Selector="webView:runJavaScriptConfirmPanelWithMessage:initiatedByFrame:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIRunJavaScriptTextInputPanelWithFrame", ParameterByRef=new System.Boolean[] { false, false, false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(System.String), typeof(System.String), typeof(WebKit.WebFrame) }, ReturnType=typeof(System.String), Selector="webView:runJavaScriptTextInputPanelWithPrompt:defaultText:initiatedByFrame:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIRunBeforeUnload", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(System.String), typeof(WebKit.WebFrame) }, ReturnType=typeof(System.Boolean), Selector="webView:runBeforeUnloadConfirmPanelWithMessage:initiatedByFrame:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIRunOpenPanelForFileButton", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(WebKit.IWebOpenPanelResultListener) }, Selector="webView:runOpenPanelForFileButtonWithResultListener:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIMouseDidMoveOverElement", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(Foundation.NSDictionary), typeof(AppKit.NSEventModifierMask) }, Selector="webView:mouseDidMoveOverElement:modifierFlags:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIGetContextMenuItems", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(Foundation.NSDictionary), typeof(AppKit.NSMenuItem[]) }, ReturnType=typeof(AppKit.NSMenuItem[]), Selector="webView:contextMenuItemsForElement:defaultMenuItems:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIValidateUserInterfaceItem", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(Foundation.NSObject), typeof(System.Boolean) }, ReturnType=typeof(System.Boolean), Selector="webView:validateUserInterfaceItem:defaultValidation:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIShouldPerformActionfromSender", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(ObjCRuntime.Selector), typeof(Foundation.NSObject) }, ReturnType=typeof(System.Boolean), Selector="webView:shouldPerformAction:fromSender:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIGetDragDestinationActionMask", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(AppKit.NSDraggingInfo) }, ReturnType=typeof(AppKit.NSEventModifierMask), Selector="webView:dragDestinationActionMaskForDraggingInfo:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIWillPerformDragDestination", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(WebKit.WebDragDestinationAction), typeof(AppKit.NSDraggingInfo) }, Selector="webView:willPerformDragDestinationAction:forDraggingInfo:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIDragSourceActionMask", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(CoreGraphics.CGPoint) }, ReturnType=typeof(AppKit.NSEventModifierMask), Selector="webView:dragSourceActionMaskForPoint:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIWillPerformDragSource", ParameterByRef=new System.Boolean[] { false, false, false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(WebKit.WebDragSourceAction), typeof(CoreGraphics.CGPoint), typeof(AppKit.NSPasteboard) }, Selector="webView:willPerformDragSourceAction:fromPoint:withPasteboard:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIPrintFrameView", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(WebKit.WebFrameView) }, Selector="webView:printFrameView:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIGetHeaderHeight", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(WebKit.WebView) }, ReturnType=typeof(System.Single), Selector="webViewHeaderHeight:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIGetFooterHeight", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(WebKit.WebView) }, ReturnType=typeof(System.Single), Selector="webViewFooterHeight:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIDrawHeaderInRect", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(CoreGraphics.CGRect) }, Selector="webView:drawHeaderInRect:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIDrawFooterInRect", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(CoreGraphics.CGRect) }, Selector="webView:drawFooterInRect:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIRunJavaScriptAlertPanel", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(System.String) }, Selector="webView:runJavaScriptAlertPanelWithMessage:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIRunJavaScriptConfirmPanel", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(System.String) }, ReturnType=typeof(System.Boolean), Selector="webView:runJavaScriptConfirmPanelWithMessage:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIRunJavaScriptTextInputPanel", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(System.String), typeof(System.String) }, ReturnType=typeof(System.String), Selector="webView:runJavaScriptTextInputPanelWithPrompt:defaultText:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UISetContentRect", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(WebKit.WebView), typeof(CoreGraphics.CGRect) }, Selector="webView:setContentRect:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UIGetContentRect", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(WebKit.WebView) }, ReturnType=typeof(CoreGraphics.CGRect), Selector="webViewContentRect:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.None, "No longer supported.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>
