<Type Name="NLTagger" FullName="NaturalLanguage.NLTagger">
  <TypeSignature Language="C#" Value="public class NLTagger : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NLTagger extends Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("NLTagger", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 5, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Analyzes text and produces an enumerable list of tags drawn from a specified set of tag schemas.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NLTagger (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NLTagger (Foundation.NSString[] tagSchemes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSString[] tagSchemes) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithTagSchemes:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tagSchemes" Type="Foundation.NSString[]" />
      </Parameters>
      <Docs>
        <param name="tagSchemes">The taggging schemes that detail the classifications to return.</param>
        <summary>Initializes a tagger that classifies tokens according the the identified tagging schemes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NLTagger (NaturalLanguage.NLTagScheme[] tagSchemes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype NaturalLanguage.NLTagScheme[] tagSchemes) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tagSchemes" Type="NaturalLanguage.NLTagScheme[]" />
      </Parameters>
      <Docs>
        <param name="tagSchemes">The taggging schemes that detail the classifications to return.</param>
        <summary>Initializes a tagger that classifies tokens according the the provided tagging schemes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NLTagger (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DominantLanguage">
      <MemberSignature Language="C#" Value="public NaturalLanguage.NLLanguage DominantLanguage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype NaturalLanguage.NLLanguage DominantLanguage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>NaturalLanguage.NLLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the dominant language for the tagged text.</summary>
        <value>The dominant language for the tagged text.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateTags">
      <MemberSignature Language="C#" Value="public virtual void EnumerateTags (Foundation.NSRange range, NaturalLanguage.NLTokenUnit unit, Foundation.NSString scheme, NaturalLanguage.NLTaggerOptions options, NaturalLanguage.NLTaggerEnumerateTagsContinuationHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnumerateTags(valuetype Foundation.NSRange range, valuetype NaturalLanguage.NLTokenUnit unit, class Foundation.NSString scheme, valuetype NaturalLanguage.NLTaggerOptions options, class NaturalLanguage.NLTaggerEnumerateTagsContinuationHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("enumerateTagsInRange:unit:scheme:options:usingBlock:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="unit" Type="NaturalLanguage.NLTokenUnit" />
        <Parameter Name="scheme" Type="Foundation.NSString" />
        <Parameter Name="options" Type="NaturalLanguage.NLTaggerOptions" />
        <Parameter Name="handler" Type="NaturalLanguage.NLTaggerEnumerateTagsContinuationHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNLTaggerEnumerateTagsContinuationHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="range">The range of the tag.</param>
        <param name="unit">The lexical unit of the tag.</param>
        <param name="scheme">The schemes for which to enumerate the corresponding tags.</param>
        <param name="options">Options that control preprocessing done to tags.</param>
        <param name="handler">A handler to run on enumerated tags.</param>
        <summary>Enumerates over a filtered list of tags and applies a handler.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateTags">
      <MemberSignature Language="C#" Value="public void EnumerateTags (Foundation.NSRange range, NaturalLanguage.NLTokenUnit unit, NaturalLanguage.NLTagScheme scheme, NaturalLanguage.NLTaggerOptions options, NaturalLanguage.NLTaggerEnumerateTagsContinuationHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateTags(valuetype Foundation.NSRange range, valuetype NaturalLanguage.NLTokenUnit unit, valuetype NaturalLanguage.NLTagScheme scheme, valuetype NaturalLanguage.NLTaggerOptions options, class NaturalLanguage.NLTaggerEnumerateTagsContinuationHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="unit" Type="NaturalLanguage.NLTokenUnit" />
        <Parameter Name="scheme" Type="NaturalLanguage.NLTagScheme" />
        <Parameter Name="options" Type="NaturalLanguage.NLTaggerOptions" />
        <Parameter Name="handler" Type="NaturalLanguage.NLTaggerEnumerateTagsContinuationHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNLTaggerEnumerateTagsContinuationHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="range">The range of the tag.</param>
        <param name="unit">The lexical unit of the tag.</param>
        <param name="scheme">The schemes for which to enumerate the corresponding tags.</param>
        <param name="options">Options that control preprocessing done to tags.</param>
        <param name="handler">A handler to run on enumerated tags.</param>
        <summary>Enumerates over a filtered list of tags and applies a handler.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableTagSchemes">
      <MemberSignature Language="C#" Value="public static Foundation.NSString[] GetAvailableTagSchemes (NaturalLanguage.NLTokenUnit unit, Foundation.NSString language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString[] GetAvailableTagSchemes(valuetype NaturalLanguage.NLTokenUnit unit, class Foundation.NSString language) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("availableTagSchemesForUnit:language:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="NaturalLanguage.NLTokenUnit" />
        <Parameter Name="language" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="unit">The unit for which to get the available tag schemes.</param>
        <param name="language">The language that constrains the tags available for the <paramref name="unit" />.</param>
        <summary>Returns the available tag schemes for <paramref name="unit" /> and <paramref name="language" />.</summary>
        <returns>The available tag schemes for <paramref name="unit" /> and <paramref name="language" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableTagSchemes">
      <MemberSignature Language="C#" Value="public static NaturalLanguage.NLTagScheme[] GetAvailableTagSchemes (NaturalLanguage.NLTokenUnit unit, NaturalLanguage.NLLanguage language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype NaturalLanguage.NLTagScheme[] GetAvailableTagSchemes(valuetype NaturalLanguage.NLTokenUnit unit, valuetype NaturalLanguage.NLLanguage language) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>NaturalLanguage.NLTagScheme[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="NaturalLanguage.NLTokenUnit" />
        <Parameter Name="language" Type="NaturalLanguage.NLLanguage" />
      </Parameters>
      <Docs>
        <param name="unit">The unit for which to get the available tag schemes.</param>
        <param name="language">The language that constrains the tags available for the <paramref name="unit" />.</param>
        <summary>Returns the available tag schemes for <paramref name="unit" /> and <paramref name="language" />.</summary>
        <returns>The available tag schemes for <paramref name="unit" /> and <paramref name="language" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModels">
      <MemberSignature Language="C#" Value="public virtual NaturalLanguage.NLModel[] GetModels (Foundation.NSString tagScheme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class NaturalLanguage.NLModel[] GetModels(class Foundation.NSString tagScheme) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("modelsForTagScheme:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>NaturalLanguage.NLModel[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagScheme" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="tagScheme">The tag scheme for which to get corresponding models.</param>
        <summary>Returns the models that generate tags from the specified scheme.</summary>
        <returns>The models that generate tags from the specified scheme.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModels">
      <MemberSignature Language="C#" Value="public NaturalLanguage.NLModel[] GetModels (NaturalLanguage.NLTagScheme tagScheme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class NaturalLanguage.NLModel[] GetModels(valuetype NaturalLanguage.NLTagScheme tagScheme) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>NaturalLanguage.NLModel[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagScheme" Type="NaturalLanguage.NLTagScheme" />
      </Parameters>
      <Docs>
        <param name="tagScheme">The tag scheme for which to get corresponding models.</param>
        <summary>Returns the models that generate tags from the specified scheme.</summary>
        <returns>The models that generate tags from the specified scheme.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTag">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSString GetTag (nuint characterIndex, NaturalLanguage.NLTokenUnit unit, Foundation.NSString scheme, Foundation.NSRange tokenRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSString GetTag(valuetype System.nuint characterIndex, valuetype NaturalLanguage.NLTokenUnit unit, class Foundation.NSString scheme, valuetype Foundation.NSRange tokenRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("tagAtIndex:unit:scheme:tokenRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterIndex" Type="System.nuint" />
        <Parameter Name="unit" Type="NaturalLanguage.NLTokenUnit" />
        <Parameter Name="scheme" Type="Foundation.NSString" />
        <Parameter Name="tokenRange" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="characterIndex">The index of the character at the start of the tagged text.</param>
        <param name="unit">The token unit for the tag to retrieve.</param>
        <param name="scheme">The tag scheme for the tag to retrieve.</param>
        <param name="tokenRange">The token range of the tag to retrieve.</param>
        <summary>Returns the tag indexed by the specified parameters.</summary>
        <returns>The tag indexed by the specified parameters.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTag">
      <MemberSignature Language="C#" Value="public NaturalLanguage.NLTag GetTag (nuint characterIndex, NaturalLanguage.NLTokenUnit unit, NaturalLanguage.NLTagScheme scheme, Foundation.NSRange tokenRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype NaturalLanguage.NLTag GetTag(valuetype System.nuint characterIndex, valuetype NaturalLanguage.NLTokenUnit unit, valuetype NaturalLanguage.NLTagScheme scheme, valuetype Foundation.NSRange tokenRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>NaturalLanguage.NLTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterIndex" Type="System.nuint" />
        <Parameter Name="unit" Type="NaturalLanguage.NLTokenUnit" />
        <Parameter Name="scheme" Type="NaturalLanguage.NLTagScheme" />
        <Parameter Name="tokenRange" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="characterIndex">The index of the character at the start of the tagged text.</param>
        <param name="unit">The token unit for the tag to retrieve.</param>
        <param name="scheme">The tag scheme for the tag to retrieve.</param>
        <param name="tokenRange">The token range of the tag to retrieve.</param>
        <summary>Returns the tag indexed by the specified parameters.</summary>
        <returns>The tag indexed by the specified parameters.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTags">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSString[] GetTags (Foundation.NSRange range, NaturalLanguage.NLTokenUnit unit, Foundation.NSString scheme, NaturalLanguage.NLTaggerOptions options, out Foundation.NSValue[] tokenRanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSString[] GetTags(valuetype Foundation.NSRange range, valuetype NaturalLanguage.NLTokenUnit unit, class Foundation.NSString scheme, valuetype NaturalLanguage.NLTaggerOptions options, class Foundation.NSValue[] tokenRanges) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("tagsInRange:unit:scheme:options:tokenRanges:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="unit" Type="NaturalLanguage.NLTokenUnit" />
        <Parameter Name="scheme" Type="Foundation.NSString" />
        <Parameter Name="options" Type="NaturalLanguage.NLTaggerOptions" />
        <Parameter Name="tokenRanges" Type="Foundation.NSValue[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="range">The index range of the characters from which to get tags.</param>
        <param name="unit">The token unit for the tags to retrieve.</param>
        <param name="scheme">The tag scheme for the tags to retrieve.</param>
        <param name="options">Options that control preprocessing done to tags.</param>
        <param name="tokenRanges">Location to store the ranges of the tokens for the returned tags.</param>
        <summary>Returns the tags and ranges for a string range and unit.</summary>
        <returns>The tags and ranges for the string range and unit.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTags">
      <MemberSignature Language="C#" Value="public NaturalLanguage.NLTag[] GetTags (Foundation.NSRange range, NaturalLanguage.NLTokenUnit unit, NaturalLanguage.NLTagScheme scheme, NaturalLanguage.NLTaggerOptions options, out Foundation.NSValue[] tokenRanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype NaturalLanguage.NLTag[] GetTags(valuetype Foundation.NSRange range, valuetype NaturalLanguage.NLTokenUnit unit, valuetype NaturalLanguage.NLTagScheme scheme, valuetype NaturalLanguage.NLTaggerOptions options, class Foundation.NSValue[] tokenRanges) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>NaturalLanguage.NLTag[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="unit" Type="NaturalLanguage.NLTokenUnit" />
        <Parameter Name="scheme" Type="NaturalLanguage.NLTagScheme" />
        <Parameter Name="options" Type="NaturalLanguage.NLTaggerOptions" />
        <Parameter Name="tokenRanges" Type="Foundation.NSValue[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="range">The index range of the characters from which to get tags.</param>
        <param name="unit">The token unit for the tags to retrieve.</param>
        <param name="scheme">The tag scheme for the tags to retrieve.</param>
        <param name="options">Options that control preprocessing done to tags.</param>
        <param name="tokenRanges">Location to store the ranges of the tokens for the returned tags.</param>
        <summary>Returns the tags and ranges for a string range and unit.</summary>
        <returns>The tags and ranges for the string range and unit.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenRange">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSRange GetTokenRange (nuint characterIndex, Foundation.NSString unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Foundation.NSRange GetTokenRange(valuetype System.nuint characterIndex, class Foundation.NSString unit) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("tokenRangeAtIndex:unit:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterIndex" Type="System.nuint" />
        <Parameter Name="unit" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="characterIndex">A character index for the desired range.</param>
        <param name="unit">The unit, which covers the <paramref name="characterIndex" />, whose range to get.</param>
        <summary>Returns the lexical range of the <paramref name="unit" /> that contains the spcified <paramref name="characterIndex" />.</summary>
        <returns>The lexical range of the <paramref name="unit" /> that contains the spcified <paramref name="characterIndex" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLanguage">
      <MemberSignature Language="C#" Value="public virtual void SetLanguage (Foundation.NSString language, Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLanguage(class Foundation.NSString language, valuetype Foundation.NSRange range) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setLanguage:range:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="Foundation.NSString" />
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="language">The new language value.</param>
        <param name="range">The range to which to apply the change.</param>
        <summary>Sets the language for the specified range.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLanguage">
      <MemberSignature Language="C#" Value="public void SetLanguage (NaturalLanguage.NLLanguage language, Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLanguage(valuetype NaturalLanguage.NLLanguage language, valuetype Foundation.NSRange range) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="NaturalLanguage.NLLanguage" />
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="language">The new language value.</param>
        <param name="range">The range to which to apply the change.</param>
        <summary>Sets the language for the specified range.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetModels">
      <MemberSignature Language="C#" Value="public virtual void SetModels (NaturalLanguage.NLModel[] models, Foundation.NSString tagScheme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetModels(class NaturalLanguage.NLModel[] models, class Foundation.NSString tagScheme) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setModels:forTagScheme:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="models" Type="NaturalLanguage.NLModel[]" />
        <Parameter Name="tagScheme" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="models">The models to assign to the tag schemes.</param>
        <param name="tagScheme">The tag scheme for which to assign the models.</param>
        <summary>Assigns models to a tag scheme.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetModels">
      <MemberSignature Language="C#" Value="public void SetModels (NaturalLanguage.NLModel[] models, NaturalLanguage.NLTagScheme tagScheme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetModels(class NaturalLanguage.NLModel[] models, valuetype NaturalLanguage.NLTagScheme tagScheme) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="models" Type="NaturalLanguage.NLModel[]" />
        <Parameter Name="tagScheme" Type="NaturalLanguage.NLTagScheme" />
      </Parameters>
      <Docs>
        <param name="models">The models to assign to the tag schemes.</param>
        <param name="tagScheme">The tag scheme for which to assign the models.</param>
        <summary>Assigns models to a tag scheme.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOrthography">
      <MemberSignature Language="C#" Value="public virtual void SetOrthography (Foundation.NSOrthography orthography, Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOrthography(class Foundation.NSOrthography orthography, valuetype Foundation.NSRange range) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setOrthography:range:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="orthography" Type="Foundation.NSOrthography" />
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="orthography">The orthography to set for the range.</param>
        <param name="range">The range for which to assign an orthography.</param>
        <summary>Assigns an orthography to a range.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public virtual string String { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("string", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setString:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the string to tag.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagSchemes">
      <MemberSignature Language="C#" Value="public NaturalLanguage.NLTagScheme[] TagSchemes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype NaturalLanguage.NLTagScheme[] TagSchemes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>NaturalLanguage.NLTagScheme[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the tagging schemes that are supported by this tagger.</summary>
        <value>The tagging schemes that are supported by this tagger.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>