<Type Name="CTFontManager+Notifications" FullName="CoreText.CTFontManager+Notifications">
  <TypeSignature Language="C#" Value="public static class CTFontManager.Notifications" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi abstract sealed beforefieldinit CTFontManager/Notifications extends System.Object" />
  <TypeSignature Language="DocId" Value="T:CoreText.CTFontManager.Notifications" />
  <TypeSignature Language="F#" Value="type CTFontManager.Notifications = class" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Observer for receiving notifications when fonts are added to the registry.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ObserveRegisteredFontsChanged">
      <MemberSignature Language="C#" Value="public static Foundation.NSObject ObserveRegisteredFontsChanged (EventHandler&lt;Foundation.NSNotificationEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSObject ObserveRegisteredFontsChanged(class System.EventHandler`1&lt;class Foundation.NSNotificationEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTFontManager.Notifications.ObserveRegisteredFontsChanged(System.EventHandler{Foundation.NSNotificationEventArgs})" />
      <MemberSignature Language="F#" Value="static member ObserveRegisteredFontsChanged : EventHandler&lt;Foundation.NSNotificationEventArgs&gt; -&gt; Foundation.NSObject" Usage="CoreText.CTFontManager.Notifications.ObserveRegisteredFontsChanged handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.EventHandler&lt;Foundation.NSNotificationEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">Method to invoke when the notification is posted.</param>
        <summary>Strongly typed notification for the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=Core%20Text%20CTFont%20Manager%20Registered%20Fonts%20Changed%20Notification&amp;scope=Xamarin" title="P:CoreText.CTFontManager.RegisteredFontsChangedNotification">P:CoreText.CTFontManager.RegisteredFontsChangedNotification</a></format> constant.</summary>
        <returns>Token object that can be used to stop receiving notifications by either disposing it or passing it to <see cref="M:Foundation.NSNotificationCenter.RemoveObservers(System.Collections.Generic.IEnumerable{Foundation.NSObject})" /></returns>
        <remarks>
          <para id="tool-remark">This method can be used to subscribe for <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=Core%20Text%20CTFont%20Manager%20Registered%20Fonts%20Changed%20Notification&amp;scope=Xamarin" title="P:CoreText.CTFontManager.RegisteredFontsChangedNotification">P:CoreText.CTFontManager.RegisteredFontsChangedNotification</a></format> notifications.</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
// Listen to all notifications posted for any object
var token = CTFontManager.Notifications.ObserveRegisteredFontsChanged ((notification) => {
	Console.WriteLine ("Observed RegisteredFontsChangedNotification!");
};

// Listen to all notifications posted for a single object
var token = CTFontManager.Notifications.ObserveRegisteredFontsChanged (objectToObserve, (notification) => {
	Console.WriteLine ($"Observed RegisteredFontsChangedNotification for {nameof (objectToObserve)}!");
};

// Stop listening for notifications
token.Dispose ();
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
