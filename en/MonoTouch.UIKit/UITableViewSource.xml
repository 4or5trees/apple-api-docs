<Type Name="UITableViewSource" FullName="MonoTouch.UIKit.UITableViewSource">
  <TypeSignature Language="C#" Value="public abstract class UITableViewSource : MonoTouch.UIKit.UIScrollViewDelegate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UITableViewSource extends MonoTouch.UIKit.UIScrollViewDelegate" />
  <AssemblyInfo>
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.UIKit.UIScrollViewDelegate</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("UITableViewSource", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Joint DataSource and Delegate base class.</summary>
    <remarks>
      <para>
This model class merges both the <see cref="T:MonoTouch.UIKit.UITableViewDataSource" /> and the <see cref="T:MonoTouch.UIKit.UITableViewDelegate" /> into a single class.
</para>
      <para>
You can use this class in cases where the data source and the delegate will not be shared in other pieces of code to allow for sharing of information between the delegate and the data source.    
</para>
      <para>
Use this class by creating your own derived type from this class and overriding the methods that you are intersted in handling.   Then assign an instance of this object to the <see cref="P:MonoTouch.UIKit.UITableView.Source" /> property.
</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UITableViewSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of this class with no parameters.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UITableViewSource (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UITableViewSource (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When you invoke the constructor that takes the NSObjectFlag.Empty you taking advatnage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to you.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is your responsability to completely initialize the object if you chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if your constructors invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, you should instead chain to the proper constructor in your class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#">
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from MonoTouch's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSend_RectangleF (this.Handle, initWithFrame, frame);
	else
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_RectangleF (this.SuperHandle, initWithFrame, frame);
}
</code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UITableViewSource (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:MonoTouch.ObjCRuntime.GetNSObject (System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    You should not invoke this method directly, instead you should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessoryButtonTapped">
      <MemberSignature Language="C#" Value="public virtual void AccessoryButtonTapped (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AccessoryButtonTapped(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:accessoryButtonTappedForRowWithIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">The table view containing the row/cell accessory that has been tapped.</param>
        <param name="indexPath">The location of the row in the table view.</param>
        <summary>Called when the user taps the DetailDisclosureButton accessory on the row located at <paramref name="indexPath"/>.</summary>
        <remarks>This method should typically display a new view related to the selected row. [UITableViewDelegate]</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessoryForRow">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.UIKit.UITableViewCellAccessory AccessoryForRow (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoTouch.UIKit.UITableViewCellAccessory AccessoryForRow(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:accessoryTypeForRowWithIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UITableViewCellAccessory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">Table view containing the row.</param>
        <param name="indexPath">Location of the row.</param>
        <summary>Deprecated in iOS 3.0. Use <see cref="P:MonoTouch.UIKit.UITableViewCell.Accessory" /> and <see cref="P:MonoTouch.UIKit.UITableViewCell.AccessoryView" /> when configuring table view cells.</summary>
        <returns></returns>
        <remarks>[UITableViewDelegate]</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanEditRow">
      <MemberSignature Language="C#" Value="public virtual bool CanEditRow (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanEditRow(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:canEditRowAtIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">Table view containing the row.</param>
        <param name="indexPath">Location of the row.</param>
        <summary>Whether the row located at <paramref name="indexPath"/> should be editable.</summary>
        <returns><see langword="true"/> if the row is editable, otherwise <see langword="false"/>.</returns>
        <remarks>
            <para>This method allows specific rows to be editable or not. If this method is not implemented, all rows are assumed to be editable. Editable rows display the insertion or deletion control in their cell when the table view is in editing mode.</para>
            <para>Rows that are not editable will ignore the <see cref="P:MonoTouch.UIKit.UITableViewCell.EditingStyle" /> property and will not be indented.</para>
            <para>Rows that are editable, but should not display the insertion or deletion control, can return <see cref="F:MonoTouch.UIKit.UITableViewCellEditingStyle.None" /> from the <see cref="M:MonoTouch.UIKit.UITableViewSource.EditingStyleForRow(MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" /> method on the table view's <see cref="T:MonoTouch.UIKit.UITableViewSource" />.</para>
            <para>[UITableViewDataSource]</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanMoveRow">
      <MemberSignature Language="C#" Value="public virtual bool CanMoveRow (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanMoveRow(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:canMoveRowAtIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
          <param name="tableView">Table view containing the row.</param>
          <param name="indexPath">Location of the row.</param>
        <summary>Whether the row located at <paramref name="indexPath"/> can be moved to another location in the table view.</summary>
        <returns><see langword="true"/> if the row can be moved, otherwise <see langword="false"/>.</returns>
        <remarks>
            <para>This method allows specific rows to have the reordering control to be hidden for specific rows. By default, the reordering control is always shown if <see cref="M:MonoTouch.UIKit.UITableViewSource.MoveRow(MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath,MonoTouch.Foundation.NSIndexPath)" /> is implemented on the <see cref="M:MonoTouch.UIKit.UITableViewSource" />.</para>
            <para>[UITableViewDataSource]</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPerformAction">
      <MemberSignature Language="C#" Value="public virtual bool CanPerformAction (MonoTouch.UIKit.UITableView tableView, MonoTouch.ObjCRuntime.Selector action, MonoTouch.Foundation.NSIndexPath indexPath, MonoTouch.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanPerformAction(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.ObjCRuntime.Selector action, class MonoTouch.Foundation.NSIndexPath indexPath, class MonoTouch.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:canPerformAction:forRowAtIndexPath:withSender:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="action" Type="MonoTouch.ObjCRuntime.Selector" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        <Parameter Name="sender" Type="MonoTouch.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="tableView">Table view containing the row.</param>
        <param name="action">A selector identifying the Copy or Paste method (ie. <see cref="M:MonoTouch.UIKit.UIResponder.Copy(MonoTouch.Foundation.NSObject)" /> or <see cref="M:MonoTouch.UIKit.UIResponder.Paste(MonoTouch.Foundation.NSObject)" />).</param>
        <param name="indexPath">Location of the row.</param>
        <param name="sender">Object that initially triggere the Copy or Paste.</param>
        <summary>Whether the editing menu should omit the Copy or Paste command for the specified row.</summary>
        <returns><see langword="true"/> if the command corresponding to <paramref name="action"/>, otherwise <see langword="false"/>. The default is <see langword="false"/>.</returns>
        <remarks>
         <para>Invoked after <see cref="M:MonoTouch.UIKit.UITableViewSource.ShouldShowMenu(MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" /> to potentially exclude one of the commands (Copy or Paste) from the editing menu. For example, if the user triggers the editing menu on a row that does not accept pasted content, return <see langword="false"/> from this method.</para>
         <para>[UITableViewDelegate]</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEditingStyle">
      <MemberSignature Language="C#" Value="public virtual void CommitEditingStyle (MonoTouch.UIKit.UITableView tableView, MonoTouch.UIKit.UITableViewCellEditingStyle editingStyle, MonoTouch.Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitEditingStyle(class MonoTouch.UIKit.UITableView tableView, valuetype MonoTouch.UIKit.UITableViewCellEditingStyle editingStyle, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:commitEditingStyle:forRowAtIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="editingStyle" Type="MonoTouch.UIKit.UITableViewCellEditingStyle" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">Table view requesting insertion or deletion.</param>
        <param name="editingStyle">Cell editing style requested for the row at <paramref name="indexPath"/>, such as <see cref="F:MonoTouch.UIKit.UITableViewEditingStyle.Insert" /> or <see cref="F:MonoTouch.UIKit.UITableViewEditingStyle.Delete" />.</param>
        <param name="indexPath">Location of the row.</param>
        <summary>Commits the insertion or deletion of the specified row.</summary>
        <remarks>
            <para>When the user taps the insertion (green plus) or Delete button in a cell, the table view calls this method to commit the change (if the user taps the deletion (red minus) button, that simply reveals the Delete button).</para>
            <para>This method should commit the <paramref name="editingStyle"/> by calling <see cref="T:MonoTouch.UIKit.UITableView" /> methods <see cref="M:MonoTouch.UIKit.UITableView.InsertRows(MonoTouch.Foundation.NSIndexPath[],MonoTouch.UIKit.UITableViewRowAnimation)" /> or <see cref="M:MonoTouch.UIKit.UITableView.DeleteRows(MonoTouch.Foundation.NSIndexPath[],MonoTouch.UIKit.UITableViewRowAnimation)" />.</para>
            <para>This method must be implemented to enable the swipe-to-delete feature of the table view control.</para>
            <para>You should not call <see cref="M:MonoTouch.UIKit.UITableView.SetEditing(System.Boolean,System.Boolean)" /> in this method. If for some reason you need to, invoke it after a delay using <see cref="M:MonoTouch.Foundation.PerformSelector(MonoTouch.ObjCRuntime.Selector,MonoTouch.Foundation.NSObject,System.Double)" />.</para>
            <para>[UITableViewDataSource]</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomizeMoveTarget">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSIndexPath CustomizeMoveTarget (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath sourceIndexPath, MonoTouch.Foundation.NSIndexPath proposedIndexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSIndexPath CustomizeMoveTarget(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath sourceIndexPath, class MonoTouch.Foundation.NSIndexPath proposedIndexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSIndexPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="sourceIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        <Parameter Name="proposedIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">Table view containing the row to be moved.</param>
        <param name="sourceIndexPath">The original location of the row being moved.</param>
        <param name="proposedIndexPath">The location in the table view where the row has been dropped. The location can be altered by this method.</param>
        <summary>Return a new index path to change the final location of a row being moved by the user.</summary>
        <returns>An index path to retarget the proposed move of a row. Use <paramref name="proposedIndexPath"/> if no customization is required.</returns>
        <remarks>
            <para>Allows customization of the target location for a row that is being moved within a table view. As the row is moved, other rows slide apart visually at the destination location to indicate where the row would be moved to. By returning a value that is different to <paramref name="proposedIndexPath"/> this method can prevent a row from being moved to certain locations.</para>
            <para>[UITableViewDelegate]</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecelerationEnded">
      <MemberSignature Language="C#" Value="public override void DecelerationEnded (MonoTouch.UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DecelerationEnded(class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewDidEndDecelerating:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">The table view being scrolled.</param>
        <summary>Called when deceleration has ended (at the end of a scrolling movement).</summary>
        <remarks>
            <para>The scroll view subclass (table view) calls this method when scrolling movement comes to a halt.</para>
            <para>This method is inherited from <see cref="T:MonoTouch.UIKit.UIScrollViewDelegate" /></para>
            <para>[UITableViewDelegate]</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecelerationStarted">
      <MemberSignature Language="C#" Value="public override void DecelerationStarted (MonoTouch.UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DecelerationStarted(class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewWillBeginDecelerating:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">The table view being scrolled.</param>
        <summary>Called when deceleration has started (at the end of a scrolling movement).</summary>
        <remarks>
            <para>After a user's finger stops dragging and is lifted from the screen (touch up), the table view will continue to move a short distance.</para>
            <para>[UITableViewDelegate]</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidEndEditing">
      <MemberSignature Language="C#" Value="public virtual void DidEndEditing (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidEndEditing(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:didEndEditingRowAtIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidZoom">
      <MemberSignature Language="C#" Value="public override void DidZoom (MonoTouch.UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DidZoom(class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewDidZoom:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DraggingEnded">
      <MemberSignature Language="C#" Value="public override void DraggingEnded (MonoTouch.UIKit.UIScrollView scrollView, bool willDecelerate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DraggingEnded(class MonoTouch.UIKit.UIScrollView scrollView, bool willDecelerate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewDidEndDragging:willDecelerate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        <Parameter Name="willDecelerate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <param name="willDecelerate">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DraggingStarted">
      <MemberSignature Language="C#" Value="public override void DraggingStarted (MonoTouch.UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DraggingStarted(class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewWillBeginDragging:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingStyleForRow">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.UIKit.UITableViewCellEditingStyle EditingStyleForRow (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoTouch.UIKit.UITableViewCellEditingStyle EditingStyleForRow(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:editingStyleForRowAtIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UITableViewCellEditingStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCell">
      <MemberSignature Language="C#" Value="public abstract MonoTouch.UIKit.UITableViewCell GetCell (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.UIKit.UITableViewCell GetCell(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:cellForRowAtIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UITableViewCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHeightForFooter">
      <MemberSignature Language="C#" Value="public virtual float GetHeightForFooter (MonoTouch.UIKit.UITableView tableView, int section);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetHeightForFooter(class MonoTouch.UIKit.UITableView tableView, int32 section) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:heightForFooterInSection:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="section" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="section">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHeightForHeader">
      <MemberSignature Language="C#" Value="public virtual float GetHeightForHeader (MonoTouch.UIKit.UITableView tableView, int section);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetHeightForHeader(class MonoTouch.UIKit.UITableView tableView, int32 section) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:heightForHeaderInSection:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="section" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="section">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHeightForRow">
      <MemberSignature Language="C#" Value="public virtual float GetHeightForRow (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetHeightForRow(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:heightForRowAtIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetViewForFooter">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.UIKit.UIView GetViewForFooter (MonoTouch.UIKit.UITableView tableView, int section);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.UIKit.UIView GetViewForFooter(class MonoTouch.UIKit.UITableView tableView, int32 section) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:viewForFooterInSection:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="section" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="section">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetViewForHeader">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.UIKit.UIView GetViewForHeader (MonoTouch.UIKit.UITableView tableView, int section);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.UIKit.UIView GetViewForHeader(class MonoTouch.UIKit.UITableView tableView, int32 section) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:viewForHeaderInSection:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="section" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="section">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentationLevel">
      <MemberSignature Language="C#" Value="public virtual int IndentationLevel (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndentationLevel(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:indentationLevelForRowAtIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveRow">
      <MemberSignature Language="C#" Value="public virtual void MoveRow (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath sourceIndexPath, MonoTouch.Foundation.NSIndexPath destinationIndexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveRow(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath sourceIndexPath, class MonoTouch.Foundation.NSIndexPath destinationIndexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:moveRowAtIndexPath:toIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="sourceIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        <Parameter Name="destinationIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="sourceIndexPath">To be added.</param>
        <param name="destinationIndexPath">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfSections">
      <MemberSignature Language="C#" Value="public virtual int NumberOfSections (MonoTouch.UIKit.UITableView tableView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 NumberOfSections(class MonoTouch.UIKit.UITableView tableView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("numberOfSectionsInTableView:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformAction">
      <MemberSignature Language="C#" Value="public virtual void PerformAction (MonoTouch.UIKit.UITableView tableView, MonoTouch.ObjCRuntime.Selector action, MonoTouch.Foundation.NSIndexPath indexPath, MonoTouch.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformAction(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.ObjCRuntime.Selector action, class MonoTouch.Foundation.NSIndexPath indexPath, class MonoTouch.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:performAction:forRowAtIndexPath:withSender:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="action" Type="MonoTouch.ObjCRuntime.Selector" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        <Parameter Name="sender" Type="MonoTouch.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="action">To be added.</param>
        <param name="indexPath">To be added.</param>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDeselected">
      <MemberSignature Language="C#" Value="public virtual void RowDeselected (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RowDeselected(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:didDeselectRowAtIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowSelected">
      <MemberSignature Language="C#" Value="public virtual void RowSelected (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RowSelected(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:didSelectRowAtIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowsInSection">
      <MemberSignature Language="C#" Value="public abstract int RowsInSection (MonoTouch.UIKit.UITableView tableview, int section);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 RowsInSection(class MonoTouch.UIKit.UITableView tableview, int32 section) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:numberOfRowsInSection:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableview" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="section" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tableview">To be added.</param>
        <param name="section">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollAnimationEnded">
      <MemberSignature Language="C#" Value="public override void ScrollAnimationEnded (MonoTouch.UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ScrollAnimationEnded(class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewDidEndScrollingAnimation:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scrolled">
      <MemberSignature Language="C#" Value="public override void Scrolled (MonoTouch.UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Scrolled(class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewDidScroll:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrolledToTop">
      <MemberSignature Language="C#" Value="public override void ScrolledToTop (MonoTouch.UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ScrolledToTop(class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewDidScrollToTop:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SectionFor">
      <MemberSignature Language="C#" Value="public virtual int SectionFor (MonoTouch.UIKit.UITableView tableView, string title, int atIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SectionFor(class MonoTouch.UIKit.UITableView tableView, string title, int32 atIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:sectionForSectionIndexTitle:atIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="atIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="title">To be added.</param>
        <param name="atIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SectionIndexTitles">
      <MemberSignature Language="C#" Value="public virtual string[] SectionIndexTitles (MonoTouch.UIKit.UITableView tableView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] SectionIndexTitles(class MonoTouch.UIKit.UITableView tableView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("sectionIndexTitlesForTableView:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldIndentWhileEditing">
      <MemberSignature Language="C#" Value="public virtual bool ShouldIndentWhileEditing (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldIndentWhileEditing(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:shouldIndentWhileEditingRowAtIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldScrollToTop">
      <MemberSignature Language="C#" Value="public override bool ShouldScrollToTop (MonoTouch.UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ShouldScrollToTop(class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewShouldScrollToTop:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldShowMenu">
      <MemberSignature Language="C#" Value="public virtual bool ShouldShowMenu (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath rowAtindexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldShowMenu(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath rowAtindexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:shouldShowMenuForRowAtIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="rowAtindexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="rowAtindexPath">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleForDeleteConfirmation">
      <MemberSignature Language="C#" Value="public virtual string TitleForDeleteConfirmation (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string TitleForDeleteConfirmation(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleForFooter">
      <MemberSignature Language="C#" Value="public virtual string TitleForFooter (MonoTouch.UIKit.UITableView tableView, int section);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string TitleForFooter(class MonoTouch.UIKit.UITableView tableView, int32 section) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:titleForFooterInSection:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="section" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="section">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleForHeader">
      <MemberSignature Language="C#" Value="public virtual string TitleForHeader (MonoTouch.UIKit.UITableView tableView, int section);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string TitleForHeader(class MonoTouch.UIKit.UITableView tableView, int32 section) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:titleForHeaderInSection:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="section" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="section">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewForZoomingInScrollView">
      <MemberSignature Language="C#" Value="public override MonoTouch.UIKit.UIView ViewForZoomingInScrollView (MonoTouch.UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.UIKit.UIView ViewForZoomingInScrollView(class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("viewForZoomingInScrollView:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillBeginEditing">
      <MemberSignature Language="C#" Value="public virtual void WillBeginEditing (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillBeginEditing(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:willBeginEditingRowAtIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillDeselectRow">
      <MemberSignature Language="C#" Value="public virtual void WillDeselectRow (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillDeselectRow(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:willDeselectRowAtIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillDisplay">
      <MemberSignature Language="C#" Value="public virtual void WillDisplay (MonoTouch.UIKit.UITableView tableView, MonoTouch.UIKit.UITableViewCell cell, MonoTouch.Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillDisplay(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.UIKit.UITableViewCell cell, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:willDisplayCell:forRowAtIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="cell" Type="MonoTouch.UIKit.UITableViewCell" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="cell">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillEndDragging">
      <MemberSignature Language="C#" Value="public override void WillEndDragging (MonoTouch.UIKit.UIScrollView scrollView, System.Drawing.PointF velocity, ref System.Drawing.PointF targetContentOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WillEndDragging(class MonoTouch.UIKit.UIScrollView scrollView, valuetype System.Drawing.PointF velocity, valuetype System.Drawing.PointF targetContentOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewWillEndDragging:withVelocity:targetContentOffset:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        <Parameter Name="velocity" Type="System.Drawing.PointF" />
        <Parameter Name="targetContentOffset" Type="System.Drawing.PointF&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <param name="velocity">To be added.</param>
        <param name="targetContentOffset">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillSelectRow">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSIndexPath WillSelectRow (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSIndexPath WillSelectRow(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tableView:willSelectRowAtIndexPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSIndexPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoomingEnded">
      <MemberSignature Language="C#" Value="public override void ZoomingEnded (MonoTouch.UIKit.UIScrollView scrollView, MonoTouch.UIKit.UIView withView, float atScale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ZoomingEnded(class MonoTouch.UIKit.UIScrollView scrollView, class MonoTouch.UIKit.UIView withView, float32 atScale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewDidEndZooming:withView:atScale:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        <Parameter Name="withView" Type="MonoTouch.UIKit.UIView" />
        <Parameter Name="atScale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <param name="withView">To be added.</param>
        <param name="atScale">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoomingStarted">
      <MemberSignature Language="C#" Value="public override void ZoomingStarted (MonoTouch.UIKit.UIScrollView scrollView, MonoTouch.UIKit.UIView view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ZoomingStarted(class MonoTouch.UIKit.UIScrollView scrollView, class MonoTouch.UIKit.UIView view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewWillBeginZooming:withView:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        <Parameter Name="view" Type="MonoTouch.UIKit.UIView" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <param name="view">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
