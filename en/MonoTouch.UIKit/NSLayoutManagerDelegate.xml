<Type Name="NSLayoutManagerDelegate" FullName="MonoTouch.UIKit.NSLayoutManagerDelegate">
  <TypeSignature Language="C#" Value="public class NSLayoutManagerDelegate : MonoTouch.Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSLayoutManagerDelegate extends MonoTouch.Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("NSLayoutManagerDelegate", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSLayoutManagerDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSLayoutManagerDelegate (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSLayoutManagerDelegate (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSLayoutManagerDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundingBoxForControlGlyph">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.RectangleF BoundingBoxForControlGlyph (MonoTouch.UIKit.NSLayoutManager layoutManager, uint glyphIndex, MonoTouch.UIKit.NSTextContainer textContainer, System.Drawing.RectangleF proposedRect, System.Drawing.PointF glyphPosition, uint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.RectangleF BoundingBoxForControlGlyph(class MonoTouch.UIKit.NSLayoutManager layoutManager, unsigned int32 glyphIndex, class MonoTouch.UIKit.NSTextContainer textContainer, valuetype System.Drawing.RectangleF proposedRect, valuetype System.Drawing.PointF glyphPosition, unsigned int32 charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="glyphIndex" Type="System.UInt32" />
        <Parameter Name="textContainer" Type="MonoTouch.UIKit.NSTextContainer" />
        <Parameter Name="proposedRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="glyphPosition" Type="System.Drawing.PointF" />
        <Parameter Name="charIndex" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="proposedRect">To be added.</param>
        <param name="glyphPosition">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeGeometry">
      <MemberSignature Language="C#" Value="public virtual void DidChangeGeometry (MonoTouch.UIKit.NSLayoutManager layoutManager, MonoTouch.UIKit.NSTextContainer textContainer, float oldSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidChangeGeometry(class MonoTouch.UIKit.NSLayoutManager layoutManager, class MonoTouch.UIKit.NSTextContainer textContainer, float32 oldSize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:textContainer:didChangeGeometryFromSize:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="textContainer" Type="MonoTouch.UIKit.NSTextContainer" />
        <Parameter Name="oldSize" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="oldSize">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidCompleteLayout">
      <MemberSignature Language="C#" Value="public virtual void DidCompleteLayout (MonoTouch.UIKit.NSLayoutManager layoutManager, MonoTouch.UIKit.NSTextContainer textContainer, bool layoutFinishedFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidCompleteLayout(class MonoTouch.UIKit.NSLayoutManager layoutManager, class MonoTouch.UIKit.NSTextContainer textContainer, bool layoutFinishedFlag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:didCompleteLayoutForTextContainer:atEnd:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="textContainer" Type="MonoTouch.UIKit.NSTextContainer" />
        <Parameter Name="layoutFinishedFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="layoutFinishedFlag">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidInvalidatedLayout">
      <MemberSignature Language="C#" Value="public virtual void DidInvalidatedLayout (MonoTouch.UIKit.NSLayoutManager sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidInvalidatedLayout(class MonoTouch.UIKit.NSLayoutManager sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManagerDidInvalidateLayout:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoTouch.UIKit.NSLayoutManager" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineSpacingAfterGlyphAtIndex">
      <MemberSignature Language="C#" Value="public virtual float LineSpacingAfterGlyphAtIndex (MonoTouch.UIKit.NSLayoutManager layoutManager, uint glyphIndex, System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 LineSpacingAfterGlyphAtIndex(class MonoTouch.UIKit.NSLayoutManager layoutManager, unsigned int32 glyphIndex, valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="glyphIndex" Type="System.UInt32" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphSpacingAfterGlyphAtIndex">
      <MemberSignature Language="C#" Value="public virtual float ParagraphSpacingAfterGlyphAtIndex (MonoTouch.UIKit.NSLayoutManager layoutManager, uint glyphIndex, System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ParagraphSpacingAfterGlyphAtIndex(class MonoTouch.UIKit.NSLayoutManager layoutManager, unsigned int32 glyphIndex, valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="glyphIndex" Type="System.UInt32" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphSpacingBeforeGlyphAtIndex">
      <MemberSignature Language="C#" Value="public virtual float ParagraphSpacingBeforeGlyphAtIndex (MonoTouch.UIKit.NSLayoutManager layoutManager, uint glyphIndex, System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ParagraphSpacingBeforeGlyphAtIndex(class MonoTouch.UIKit.NSLayoutManager layoutManager, unsigned int32 glyphIndex, valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="glyphIndex" Type="System.UInt32" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldBreakLineByHyphenatingBeforeCharacter">
      <MemberSignature Language="C#" Value="public virtual bool ShouldBreakLineByHyphenatingBeforeCharacter (MonoTouch.UIKit.NSLayoutManager layoutManager, uint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldBreakLineByHyphenatingBeforeCharacter(class MonoTouch.UIKit.NSLayoutManager layoutManager, unsigned int32 charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="charIndex" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldBreakLineByWordBeforeCharacter">
      <MemberSignature Language="C#" Value="public virtual bool ShouldBreakLineByWordBeforeCharacter (MonoTouch.UIKit.NSLayoutManager layoutManager, uint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldBreakLineByWordBeforeCharacter(class MonoTouch.UIKit.NSLayoutManager layoutManager, unsigned int32 charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="charIndex" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldGenerateGlyphs">
      <MemberSignature Language="C#" Value="public virtual uint ShouldGenerateGlyphs (MonoTouch.UIKit.NSLayoutManager layoutManager, IntPtr glyphBuffer, IntPtr props, IntPtr charIndexes, MonoTouch.UIKit.UIFont aFont, MonoTouch.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int32 ShouldGenerateGlyphs(class MonoTouch.UIKit.NSLayoutManager layoutManager, native int glyphBuffer, native int props, native int charIndexes, class MonoTouch.UIKit.UIFont aFont, valuetype MonoTouch.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="glyphBuffer" Type="System.IntPtr" />
        <Parameter Name="props" Type="System.IntPtr" />
        <Parameter Name="charIndexes" Type="System.IntPtr" />
        <Parameter Name="aFont" Type="MonoTouch.UIKit.UIFont" />
        <Parameter Name="glyphRange" Type="MonoTouch.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="glyphBuffer">To be added.</param>
        <param name="props">To be added.</param>
        <param name="charIndexes">To be added.</param>
        <param name="aFont">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldUseAction">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.UIKit.NSControlCharacterAction ShouldUseAction (MonoTouch.UIKit.NSLayoutManager layoutManager, MonoTouch.UIKit.NSControlCharacterAction action, uint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoTouch.UIKit.NSControlCharacterAction ShouldUseAction(class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype MonoTouch.UIKit.NSControlCharacterAction action, unsigned int32 charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:shouldUseAction:forControlCharacterAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.NSControlCharacterAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="action" Type="MonoTouch.UIKit.NSControlCharacterAction" />
        <Parameter Name="charIndex" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="action">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
