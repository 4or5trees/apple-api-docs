<Type Name="IUIDynamicItem" FullName="MonoTouch.UIKit.IUIDynamicItem">
  <TypeSignature Language="C#" Value="public interface IUIDynamicItem : IDisposable, MonoTouch.ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUIDynamicItem implements class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol(Name="UIDynamicItem", WrapperType=typeof(MonoTouch.UIKit.UIDynamicItemWrapper))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An interface whose implementers can be affected by <see cref="T:MonoTouch.UIKit.UIDynamicBehavior"/>s.</summary>
    <remarks>
      <para>iOS 7 introduced UI Dynamics, which provides physics-based animation for UI elements. The overall coordination of UI Dynamics is performed by a <see cref="T:MonoTouch.UIKit.UIDynamicAnimator"/>, which holds references to a number of <see cref="T:MonoTouch.UIKit.UIDynamicBehavior"/>s, which define behaviors such as gravity, pushing, and collision detection. Each <see cref="T:MonoTouch.UIKit.UIDynamicBehavior"/> holds references to some amount of <see cref="T:MonoTouch.UIKit.IUIDynamicItem"/>s, which represent the objects to which the physics model is applied.</para>
      <para>Two classes that implement <see cref="T:MonoTouch.UIKit.IUIDynamicItem"/> are <see cref="T:MonoTouch.UIKit.UIView"/> and <see cref="T:MonoTouch.UIKit.UICollectionViewLayoutAttributes"/>.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Center">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF Center { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF Center" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public MonoTouch.CoreGraphics.CGAffineTransform Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.CoreGraphics.CGAffineTransform Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreGraphics.CGAffineTransform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
