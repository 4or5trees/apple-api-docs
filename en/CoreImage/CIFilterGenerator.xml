<Type Name="CIFilterGenerator" FullName="CoreImage.CIFilterGenerator">
  <TypeSignature Language="C#" Value="public class CIFilterGenerator : Foundation.NSObject, CoreImage.ICIFilterConstructor, Foundation.INSCopying, Foundation.INSSecureCoding, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CIFilterGenerator extends Foundation.NSObject implements class CoreImage.ICIFilterConstructor, class Foundation.INSCoding, class Foundation.INSCopying, class Foundation.INSSecureCoding, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreImage.CIFilterGenerator" />
  <TypeSignature Language="F#" Value="type CIFilterGenerator = class&#xA;    inherit NSObject&#xA;    interface ICIFilterConstructor&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSCoding&#xA;    interface INSCopying&#xA;    interface INSSecureCoding" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>CoreImage.ICIFilterConstructor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSSecureCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("CIFilterGenerator", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIFilterGenerator (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIFilterGenerator.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new CoreImage.CIFilterGenerator : Foundation.NSCoder -&gt; CoreImage.CIFilterGenerator" Usage="new CoreImage.CIFilterGenerator coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CIFilterGenerator (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIFilterGenerator.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new CoreImage.CIFilterGenerator : Foundation.NSObjectFlag -&gt; CoreImage.CIFilterGenerator" Usage="new CoreImage.CIFilterGenerator t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIFilterGenerator (Foundation.NSUrl aURL);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSUrl aURL) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIFilterGenerator.#ctor(Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="new CoreImage.CIFilterGenerator : Foundation.NSUrl -&gt; CoreImage.CIFilterGenerator" Usage="new CoreImage.CIFilterGenerator aURL" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithContentsOfURL:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="aURL" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="aURL">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal CIFilterGenerator (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIFilterGenerator.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new CoreImage.CIFilterGenerator : nativeint -&gt; CoreImage.CIFilterGenerator" Usage="new CoreImage.CIFilterGenerator handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassAttributes">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary ClassAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDictionary ClassAttributes" />
      <MemberSignature Language="DocId" Value="P:CoreImage.CIFilterGenerator.ClassAttributes" />
      <MemberSignature Language="F#" Value="member this.ClassAttributes : Foundation.NSDictionary with get, set" Usage="CoreImage.CIFilterGenerator.ClassAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("classAttributes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setClassAttributes:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:CoreImage.CIFilterGenerator.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="CoreImage.CIFilterGenerator.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectObject">
      <MemberSignature Language="C#" Value="public virtual void ConnectObject (Foundation.NSObject sourceObject, string withSourceKey, Foundation.NSObject targetObject, string targetKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConnectObject(class Foundation.NSObject sourceObject, string withSourceKey, class Foundation.NSObject targetObject, string targetKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIFilterGenerator.ConnectObject(Foundation.NSObject,System.String,Foundation.NSObject,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ConnectObject : Foundation.NSObject * string * Foundation.NSObject * string -&gt; unit&#xA;override this.ConnectObject : Foundation.NSObject * string * Foundation.NSObject * string -&gt; unit" Usage="cIFilterGenerator.ConnectObject (sourceObject, withSourceKey, targetObject, targetKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("connectObject:withKey:toObject:withKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceObject" Type="Foundation.NSObject" />
        <Parameter Name="withSourceKey" Type="System.String" />
        <Parameter Name="targetObject" Type="Foundation.NSObject" />
        <Parameter Name="targetKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceObject">To be added.</param>
        <param name="withSourceKey">To be added.</param>
        <param name="targetObject">To be added.</param>
        <param name="targetKey">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject Copy (Foundation.NSZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject Copy(class Foundation.NSZone zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIFilterGenerator.Copy(Foundation.NSZone)" />
      <MemberSignature Language="F#" Value="override this.Copy : Foundation.NSZone -&gt; Foundation.NSObject" Usage="cIFilterGenerator.Copy zone" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCopying.Copy(Foundation.NSZone)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyWithZone:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static CoreImage.CIFilterGenerator Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIFilterGenerator Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIFilterGenerator.Create" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; CoreImage.CIFilterGenerator" Usage="CoreImage.CIFilterGenerator.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("filterGenerator")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreImage.CIFilterGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilter">
      <MemberSignature Language="C#" Value="public virtual CoreImage.CIFilter CreateFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class CoreImage.CIFilter CreateFilter() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIFilterGenerator.CreateFilter" />
      <MemberSignature Language="F#" Value="abstract member CreateFilter : unit -&gt; CoreImage.CIFilter&#xA;override this.CreateFilter : unit -&gt; CoreImage.CIFilter" Usage="cIFilterGenerator.CreateFilter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("filter")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreImage.CIFilter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectObject">
      <MemberSignature Language="C#" Value="public virtual void DisconnectObject (Foundation.NSObject sourceObject, string sourceKey, Foundation.NSObject targetObject, string targetKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectObject(class Foundation.NSObject sourceObject, string sourceKey, class Foundation.NSObject targetObject, string targetKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIFilterGenerator.DisconnectObject(Foundation.NSObject,System.String,Foundation.NSObject,System.String)" />
      <MemberSignature Language="F#" Value="abstract member DisconnectObject : Foundation.NSObject * string * Foundation.NSObject * string -&gt; unit&#xA;override this.DisconnectObject : Foundation.NSObject * string * Foundation.NSObject * string -&gt; unit" Usage="cIFilterGenerator.DisconnectObject (sourceObject, sourceKey, targetObject, targetKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("disconnectObject:withKey:toObject:withKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceObject" Type="Foundation.NSObject" />
        <Parameter Name="sourceKey" Type="System.String" />
        <Parameter Name="targetObject" Type="Foundation.NSObject" />
        <Parameter Name="targetKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceObject">To be added.</param>
        <param name="sourceKey">To be added.</param>
        <param name="targetObject">To be added.</param>
        <param name="targetKey">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeTo">
      <MemberSignature Language="C#" Value="public virtual void EncodeTo (Foundation.NSCoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeTo(class Foundation.NSCoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIFilterGenerator.EncodeTo(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member EncodeTo : Foundation.NSCoder -&gt; unit&#xA;override this.EncodeTo : Foundation.NSCoder -&gt; unit" Usage="cIFilterGenerator.EncodeTo encoder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCoding.EncodeTo(Foundation.NSCoder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="encoder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportedKey">
      <MemberSignature Language="C#" Value="public static Foundation.NSString ExportedKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString ExportedKey" />
      <MemberSignature Language="DocId" Value="P:CoreImage.CIFilterGenerator.ExportedKey" />
      <MemberSignature Language="F#" Value="member this.ExportedKey : Foundation.NSString" Usage="CoreImage.CIFilterGenerator.ExportedKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("kCIFilterGeneratorExportedKey", "Quartz")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportedKeyName">
      <MemberSignature Language="C#" Value="public static Foundation.NSString ExportedKeyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString ExportedKeyName" />
      <MemberSignature Language="DocId" Value="P:CoreImage.CIFilterGenerator.ExportedKeyName" />
      <MemberSignature Language="F#" Value="member this.ExportedKeyName : Foundation.NSString" Usage="CoreImage.CIFilterGenerator.ExportedKeyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("kCIFilterGeneratorExportedKeyName", "Quartz")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportedKeys">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary ExportedKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDictionary ExportedKeys" />
      <MemberSignature Language="DocId" Value="P:CoreImage.CIFilterGenerator.ExportedKeys" />
      <MemberSignature Language="F#" Value="member this.ExportedKeys : Foundation.NSDictionary" Usage="CoreImage.CIFilterGenerator.ExportedKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("exportedKeys")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportedKeyTargetObject">
      <MemberSignature Language="C#" Value="public static Foundation.NSString ExportedKeyTargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString ExportedKeyTargetObject" />
      <MemberSignature Language="DocId" Value="P:CoreImage.CIFilterGenerator.ExportedKeyTargetObject" />
      <MemberSignature Language="F#" Value="member this.ExportedKeyTargetObject : Foundation.NSString" Usage="CoreImage.CIFilterGenerator.ExportedKeyTargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("kCIFilterGeneratorExportedKeyTargetObject", "Quartz")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportKey">
      <MemberSignature Language="C#" Value="public virtual void ExportKey (string key, Foundation.NSObject targetObject, string exportedKeyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportKey(string key, class Foundation.NSObject targetObject, string exportedKeyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIFilterGenerator.ExportKey(System.String,Foundation.NSObject,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ExportKey : string * Foundation.NSObject * string -&gt; unit&#xA;override this.ExportKey : string * Foundation.NSObject * string -&gt; unit" Usage="cIFilterGenerator.ExportKey (key, targetObject, exportedKeyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("exportKey:fromObject:withName:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="targetObject" Type="Foundation.NSObject" />
        <Parameter Name="exportedKeyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="targetObject">To be added.</param>
        <param name="exportedKeyName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterWithName">
      <MemberSignature Language="C#" Value="public virtual CoreImage.CIFilter FilterWithName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class CoreImage.CIFilter FilterWithName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIFilterGenerator.FilterWithName(System.String)" />
      <MemberSignature Language="F#" Value="abstract member FilterWithName : string -&gt; CoreImage.CIFilter&#xA;override this.FilterWithName : string -&gt; CoreImage.CIFilter" Usage="cIFilterGenerator.FilterWithName name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:CoreImage.ICIFilterConstructor.FilterWithName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("filterWithName:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreImage.CIFilter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromUrl">
      <MemberSignature Language="C#" Value="public static CoreImage.CIFilterGenerator FromUrl (Foundation.NSUrl aURL);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIFilterGenerator FromUrl(class Foundation.NSUrl aURL) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIFilterGenerator.FromUrl(Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="static member FromUrl : Foundation.NSUrl -&gt; CoreImage.CIFilterGenerator" Usage="CoreImage.CIFilterGenerator.FromUrl aURL" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("filterGeneratorWithContentsOfURL:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreImage.CIFilterGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aURL" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="aURL">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterFilterName">
      <MemberSignature Language="C#" Value="public virtual void RegisterFilterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterFilterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIFilterGenerator.RegisterFilterName(System.String)" />
      <MemberSignature Language="F#" Value="abstract member RegisterFilterName : string -&gt; unit&#xA;override this.RegisterFilterName : string -&gt; unit" Usage="cIFilterGenerator.RegisterFilterName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("registerFilterName:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveExportedKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveExportedKey (string exportedKeyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveExportedKey(string exportedKeyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIFilterGenerator.RemoveExportedKey(System.String)" />
      <MemberSignature Language="F#" Value="abstract member RemoveExportedKey : string -&gt; unit&#xA;override this.RemoveExportedKey : string -&gt; unit" Usage="cIFilterGenerator.RemoveExportedKey exportedKeyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("removeExportedKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportedKeyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exportedKeyName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual bool Save (Foundation.NSUrl toUrl, bool atomically);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Save(class Foundation.NSUrl toUrl, bool atomically) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIFilterGenerator.Save(Foundation.NSUrl,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Save : Foundation.NSUrl * bool -&gt; bool&#xA;override this.Save : Foundation.NSUrl * bool -&gt; bool" Usage="cIFilterGenerator.Save (toUrl, atomically)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("writeToURL:atomically:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toUrl" Type="Foundation.NSUrl" />
        <Parameter Name="atomically" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="toUrl">To be added.</param>
        <param name="atomically">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttributesforExportedKey">
      <MemberSignature Language="C#" Value="public virtual void SetAttributesforExportedKey (Foundation.NSDictionary attributes, Foundation.NSString exportedKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttributesforExportedKey(class Foundation.NSDictionary attributes, class Foundation.NSString exportedKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIFilterGenerator.SetAttributesforExportedKey(Foundation.NSDictionary,Foundation.NSString)" />
      <MemberSignature Language="F#" Value="abstract member SetAttributesforExportedKey : Foundation.NSDictionary * Foundation.NSString -&gt; unit&#xA;override this.SetAttributesforExportedKey : Foundation.NSDictionary * Foundation.NSString -&gt; unit" Usage="cIFilterGenerator.SetAttributesforExportedKey (attributes, exportedKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setAttributes:forExportedKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="Foundation.NSDictionary" />
        <Parameter Name="exportedKey" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="attributes">To be added.</param>
        <param name="exportedKey">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
