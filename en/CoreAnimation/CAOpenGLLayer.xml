<Type Name="CAOpenGLLayer" FullName="CoreAnimation.CAOpenGLLayer">
  <TypeSignature Language="C#" Value="public class CAOpenGLLayer : CoreAnimation.CALayer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CAOpenGLLayer extends CoreAnimation.CALayer" />
  <TypeSignature Language="DocId" Value="T:CoreAnimation.CAOpenGLLayer" />
  <TypeSignature Language="F#" Value="type CAOpenGLLayer = class&#xA;    inherit CALayer" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CoreAnimation.CALayer</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("CAOpenGLLayer", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.None, "Use 'CAMetalLayer' instead.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CAOpenGLLayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreAnimation.CAOpenGLLayer.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CAOpenGLLayer (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreAnimation.CAOpenGLLayer.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new CoreAnimation.CAOpenGLLayer : Foundation.NSCoder -&gt; CoreAnimation.CAOpenGLLayer" Usage="new CoreAnimation.CAOpenGLLayer coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CAOpenGLLayer (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreAnimation.CAOpenGLLayer.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new CoreAnimation.CAOpenGLLayer : Foundation.NSObjectFlag -&gt; CoreAnimation.CAOpenGLLayer" Usage="new CoreAnimation.CAOpenGLLayer t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal CAOpenGLLayer (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreAnimation.CAOpenGLLayer.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new CoreAnimation.CAOpenGLLayer : nativeint -&gt; CoreAnimation.CAOpenGLLayer" Usage="new CoreAnimation.CAOpenGLLayer handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Asynchronous">
      <MemberSignature Language="C#" Value="public virtual bool Asynchronous { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Asynchronous" />
      <MemberSignature Language="DocId" Value="P:CoreAnimation.CAOpenGLLayer.Asynchronous" />
      <MemberSignature Language="F#" Value="member this.Asynchronous : bool with get, set" Usage="CoreAnimation.CAOpenGLLayer.Asynchronous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isAsynchronous")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAsynchronous:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDrawInCGLContext">
      <MemberSignature Language="C#" Value="public virtual bool CanDrawInCGLContext (OpenGL.CGLContext glContext, OpenGL.CGLPixelFormat pixelFormat, double timeInterval, ref CoreVideo.CVTimeStamp timeStamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDrawInCGLContext(class OpenGL.CGLContext glContext, class OpenGL.CGLPixelFormat pixelFormat, float64 timeInterval, valuetype CoreVideo.CVTimeStamp&amp; timeStamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreAnimation.CAOpenGLLayer.CanDrawInCGLContext(OpenGL.CGLContext,OpenGL.CGLPixelFormat,System.Double,CoreVideo.CVTimeStamp@)" />
      <MemberSignature Language="F#" Value="abstract member CanDrawInCGLContext : OpenGL.CGLContext * OpenGL.CGLPixelFormat * double *  -&gt; bool&#xA;override this.CanDrawInCGLContext : OpenGL.CGLContext * OpenGL.CGLPixelFormat * double *  -&gt; bool" Usage="cAOpenGLLayer.CanDrawInCGLContext (glContext, pixelFormat, timeInterval, timeStamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("canDrawInCGLContext:pixelFormat:forLayerTime:displayTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glContext" Type="OpenGL.CGLContext" />
        <Parameter Name="pixelFormat" Type="OpenGL.CGLPixelFormat" />
        <Parameter Name="timeInterval" Type="System.Double" />
        <Parameter Name="timeStamp" Type="CoreVideo.CVTimeStamp" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="glContext">To be added.</param>
        <param name="pixelFormat">To be added.</param>
        <param name="timeInterval">To be added.</param>
        <param name="timeStamp">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:CoreAnimation.CAOpenGLLayer.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="CoreAnimation.CAOpenGLLayer.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyCGLPixelFormatForDisplayMask">
      <MemberSignature Language="C#" Value="public virtual OpenGL.CGLPixelFormat CopyCGLPixelFormatForDisplayMask (uint mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class OpenGL.CGLPixelFormat CopyCGLPixelFormatForDisplayMask(unsigned int32 mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreAnimation.CAOpenGLLayer.CopyCGLPixelFormatForDisplayMask(System.UInt32)" />
      <MemberSignature Language="F#" Value="abstract member CopyCGLPixelFormatForDisplayMask : uint32 -&gt; OpenGL.CGLPixelFormat&#xA;override this.CopyCGLPixelFormatForDisplayMask : uint32 -&gt; OpenGL.CGLPixelFormat" Usage="cAOpenGLLayer.CopyCGLPixelFormatForDisplayMask mask" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyCGLPixelFormatForDisplayMask:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenGL.CGLPixelFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyContext">
      <MemberSignature Language="C#" Value="public virtual OpenGL.CGLContext CopyContext (OpenGL.CGLPixelFormat pixelFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class OpenGL.CGLContext CopyContext(class OpenGL.CGLPixelFormat pixelFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreAnimation.CAOpenGLLayer.CopyContext(OpenGL.CGLPixelFormat)" />
      <MemberSignature Language="F#" Value="abstract member CopyContext : OpenGL.CGLPixelFormat -&gt; OpenGL.CGLContext&#xA;override this.CopyContext : OpenGL.CGLPixelFormat -&gt; OpenGL.CGLContext" Usage="cAOpenGLLayer.CopyContext pixelFormat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyCGLContextForPixelFormat:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenGL.CGLContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixelFormat" Type="OpenGL.CGLPixelFormat" />
      </Parameters>
      <Docs>
        <param name="pixelFormat">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static CoreAnimation.CALayer Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreAnimation.CALayer Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreAnimation.CAOpenGLLayer.Create" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; CoreAnimation.CALayer" Usage="CoreAnimation.CAOpenGLLayer.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("layer")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreAnimation.CALayer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawInCGLContext">
      <MemberSignature Language="C#" Value="public virtual void DrawInCGLContext (OpenGL.CGLContext glContext, OpenGL.CGLPixelFormat pixelFormat, double timeInterval, ref CoreVideo.CVTimeStamp timeStamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawInCGLContext(class OpenGL.CGLContext glContext, class OpenGL.CGLPixelFormat pixelFormat, float64 timeInterval, valuetype CoreVideo.CVTimeStamp&amp; timeStamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreAnimation.CAOpenGLLayer.DrawInCGLContext(OpenGL.CGLContext,OpenGL.CGLPixelFormat,System.Double,CoreVideo.CVTimeStamp@)" />
      <MemberSignature Language="F#" Value="abstract member DrawInCGLContext : OpenGL.CGLContext * OpenGL.CGLPixelFormat * double *  -&gt; unit&#xA;override this.DrawInCGLContext : OpenGL.CGLContext * OpenGL.CGLPixelFormat * double *  -&gt; unit" Usage="cAOpenGLLayer.DrawInCGLContext (glContext, pixelFormat, timeInterval, timeStamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawInCGLContext:pixelFormat:forLayerTime:displayTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glContext" Type="OpenGL.CGLContext" />
        <Parameter Name="pixelFormat" Type="OpenGL.CGLPixelFormat" />
        <Parameter Name="timeInterval" Type="System.Double" />
        <Parameter Name="timeStamp" Type="CoreVideo.CVTimeStamp" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="glContext">To be added.</param>
        <param name="pixelFormat">To be added.</param>
        <param name="timeInterval">To be added.</param>
        <param name="timeStamp">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public virtual void Release (OpenGL.CGLContext glContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release(class OpenGL.CGLContext glContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreAnimation.CAOpenGLLayer.Release(OpenGL.CGLContext)" />
      <MemberSignature Language="F#" Value="abstract member Release : OpenGL.CGLContext -&gt; unit&#xA;override this.Release : OpenGL.CGLContext -&gt; unit" Usage="cAOpenGLLayer.Release glContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("releaseCGLContext:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glContext" Type="OpenGL.CGLContext" />
      </Parameters>
      <Docs>
        <param name="glContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public virtual void Release (OpenGL.CGLPixelFormat pixelFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release(class OpenGL.CGLPixelFormat pixelFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreAnimation.CAOpenGLLayer.Release(OpenGL.CGLPixelFormat)" />
      <MemberSignature Language="F#" Value="abstract member Release : OpenGL.CGLPixelFormat -&gt; unit&#xA;override this.Release : OpenGL.CGLPixelFormat -&gt; unit" Usage="cAOpenGLLayer.Release pixelFormat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("releaseCGLPixelFormat:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixelFormat" Type="OpenGL.CGLPixelFormat" />
      </Parameters>
      <Docs>
        <param name="pixelFormat">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
